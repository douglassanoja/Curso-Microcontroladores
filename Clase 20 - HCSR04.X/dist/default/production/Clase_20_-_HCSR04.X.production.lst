

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep 16 12:45:28 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000F                     	;# 
    54  0010                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  008E                     	;# 
    72  008F                     	;# 
    73  0090                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0095                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  0110                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011A                     	;# 
   103  011B                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  018F                     	;# 
   108  0190                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019C                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  020D                     	;# 
   130  0210                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0291                     	;# 
   140  0291                     	;# 
   141  0292                     	;# 
   142  0293                     	;# 
   143  0294                     	;# 
   144  0295                     	;# 
   145  0295                     	;# 
   146  0296                     	;# 
   147  0298                     	;# 
   148  0298                     	;# 
   149  0299                     	;# 
   150  029A                     	;# 
   151  029B                     	;# 
   152  029C                     	;# 
   153  029C                     	;# 
   154  029D                     	;# 
   155  029E                     	;# 
   156  029F                     	;# 
   157  0311                     	;# 
   158  0311                     	;# 
   159  0312                     	;# 
   160  0313                     	;# 
   161  0314                     	;# 
   162  0315                     	;# 
   163  0315                     	;# 
   164  0316                     	;# 
   165  0318                     	;# 
   166  0318                     	;# 
   167  0319                     	;# 
   168  031A                     	;# 
   169  031C                     	;# 
   170  031C                     	;# 
   171  031D                     	;# 
   172  031E                     	;# 
   173  0394                     	;# 
   174  0395                     	;# 
   175  0396                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  041C                     	;# 
   180  041D                     	;# 
   181  041E                     	;# 
   182  0791                     	;# 
   183  0792                     	;# 
   184  0793                     	;# 
   185  0794                     	;# 
   186  0795                     	;# 
   187  0798                     	;# 
   188  0799                     	;# 
   189  079A                     	;# 
   190  07A0                     	;# 
   191  07A1                     	;# 
   192  07A2                     	;# 
   193  07A3                     	;# 
   194  07A4                     	;# 
   195  07A5                     	;# 
   196  07A6                     	;# 
   197  07A7                     	;# 
   198  07A8                     	;# 
   199  07A9                     	;# 
   200  07AA                     	;# 
   201  07AB                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010F                     	;# 
   267  0110                     	;# 
   268  0111                     	;# 
   269  0112                     	;# 
   270  0113                     	;# 
   271  0114                     	;# 
   272  0115                     	;# 
   273  0116                     	;# 
   274  0117                     	;# 
   275  0118                     	;# 
   276  0119                     	;# 
   277  011A                     	;# 
   278  011B                     	;# 
   279  011D                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  018F                     	;# 
   283  0190                     	;# 
   284  0191                     	;# 
   285  0191                     	;# 
   286  0192                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0199                     	;# 
   294  019A                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019C                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020D                     	;# 
   305  0210                     	;# 
   306  0211                     	;# 
   307  0212                     	;# 
   308  0213                     	;# 
   309  0214                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0291                     	;# 
   315  0291                     	;# 
   316  0292                     	;# 
   317  0293                     	;# 
   318  0294                     	;# 
   319  0295                     	;# 
   320  0295                     	;# 
   321  0296                     	;# 
   322  0298                     	;# 
   323  0298                     	;# 
   324  0299                     	;# 
   325  029A                     	;# 
   326  029B                     	;# 
   327  029C                     	;# 
   328  029C                     	;# 
   329  029D                     	;# 
   330  029E                     	;# 
   331  029F                     	;# 
   332  0311                     	;# 
   333  0311                     	;# 
   334  0312                     	;# 
   335  0313                     	;# 
   336  0314                     	;# 
   337  0315                     	;# 
   338  0315                     	;# 
   339  0316                     	;# 
   340  0318                     	;# 
   341  0318                     	;# 
   342  0319                     	;# 
   343  031A                     	;# 
   344  031C                     	;# 
   345  031C                     	;# 
   346  031D                     	;# 
   347  031E                     	;# 
   348  0394                     	;# 
   349  0395                     	;# 
   350  0396                     	;# 
   351  0415                     	;# 
   352  0416                     	;# 
   353  0417                     	;# 
   354  041C                     	;# 
   355  041D                     	;# 
   356  041E                     	;# 
   357  0791                     	;# 
   358  0792                     	;# 
   359  0793                     	;# 
   360  0794                     	;# 
   361  0795                     	;# 
   362  0798                     	;# 
   363  0799                     	;# 
   364  079A                     	;# 
   365  07A0                     	;# 
   366  07A1                     	;# 
   367  07A2                     	;# 
   368  07A3                     	;# 
   369  07A4                     	;# 
   370  07A5                     	;# 
   371  07A6                     	;# 
   372  07A7                     	;# 
   373  07A8                     	;# 
   374  07A9                     	;# 
   375  07AA                     	;# 
   376  07AB                     	;# 
   377  0FE4                     	;# 
   378  0FE5                     	;# 
   379  0FE6                     	;# 
   380  0FE7                     	;# 
   381  0FE8                     	;# 
   382  0FE9                     	;# 
   383  0FEA                     	;# 
   384  0FEB                     	;# 
   385  0FED                     	;# 
   386  0FEE                     	;# 
   387  0FEF                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0110                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011A                     	;# 
   453  011B                     	;# 
   454  011D                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  018F                     	;# 
   458  0190                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020D                     	;# 
   480  0210                     	;# 
   481  0211                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0291                     	;# 
   490  0291                     	;# 
   491  0292                     	;# 
   492  0293                     	;# 
   493  0294                     	;# 
   494  0295                     	;# 
   495  0295                     	;# 
   496  0296                     	;# 
   497  0298                     	;# 
   498  0298                     	;# 
   499  0299                     	;# 
   500  029A                     	;# 
   501  029B                     	;# 
   502  029C                     	;# 
   503  029C                     	;# 
   504  029D                     	;# 
   505  029E                     	;# 
   506  029F                     	;# 
   507  0311                     	;# 
   508  0311                     	;# 
   509  0312                     	;# 
   510  0313                     	;# 
   511  0314                     	;# 
   512  0315                     	;# 
   513  0315                     	;# 
   514  0316                     	;# 
   515  0318                     	;# 
   516  0318                     	;# 
   517  0319                     	;# 
   518  031A                     	;# 
   519  031C                     	;# 
   520  031C                     	;# 
   521  031D                     	;# 
   522  031E                     	;# 
   523  0394                     	;# 
   524  0395                     	;# 
   525  0396                     	;# 
   526  0415                     	;# 
   527  0416                     	;# 
   528  0417                     	;# 
   529  041C                     	;# 
   530  041D                     	;# 
   531  041E                     	;# 
   532  0791                     	;# 
   533  0792                     	;# 
   534  0793                     	;# 
   535  0794                     	;# 
   536  0795                     	;# 
   537  0798                     	;# 
   538  0799                     	;# 
   539  079A                     	;# 
   540  07A0                     	;# 
   541  07A1                     	;# 
   542  07A2                     	;# 
   543  07A3                     	;# 
   544  07A4                     	;# 
   545  07A5                     	;# 
   546  07A6                     	;# 
   547  07A7                     	;# 
   548  07A8                     	;# 
   549  07A9                     	;# 
   550  07AA                     	;# 
   551  07AB                     	;# 
   552  0FE4                     	;# 
   553  0FE5                     	;# 
   554  0FE6                     	;# 
   555  0FE7                     	;# 
   556  0FE8                     	;# 
   557  0FE9                     	;# 
   558  0FEA                     	;# 
   559  0FEB                     	;# 
   560  0FED                     	;# 
   561  0FEE                     	;# 
   562  0FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000F                     	;# 
   579  0010                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0013                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0016                     	;# 
   586  0017                     	;# 
   587  0018                     	;# 
   588  0019                     	;# 
   589  001A                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001E                     	;# 
   593  001F                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0095                     	;# 
   603  0096                     	;# 
   604  0097                     	;# 
   605  0098                     	;# 
   606  0099                     	;# 
   607  009A                     	;# 
   608  009B                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  010C                     	;# 
   614  010D                     	;# 
   615  010E                     	;# 
   616  010F                     	;# 
   617  0110                     	;# 
   618  0111                     	;# 
   619  0112                     	;# 
   620  0113                     	;# 
   621  0114                     	;# 
   622  0115                     	;# 
   623  0116                     	;# 
   624  0117                     	;# 
   625  0118                     	;# 
   626  0119                     	;# 
   627  011A                     	;# 
   628  011B                     	;# 
   629  011D                     	;# 
   630  018C                     	;# 
   631  018D                     	;# 
   632  018F                     	;# 
   633  0190                     	;# 
   634  0191                     	;# 
   635  0191                     	;# 
   636  0192                     	;# 
   637  0193                     	;# 
   638  0193                     	;# 
   639  0193                     	;# 
   640  0194                     	;# 
   641  0195                     	;# 
   642  0196                     	;# 
   643  0199                     	;# 
   644  019A                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019C                     	;# 
   650  019C                     	;# 
   651  019D                     	;# 
   652  019E                     	;# 
   653  019F                     	;# 
   654  020D                     	;# 
   655  0210                     	;# 
   656  0211                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0214                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0216                     	;# 
   663  0217                     	;# 
   664  0291                     	;# 
   665  0291                     	;# 
   666  0292                     	;# 
   667  0293                     	;# 
   668  0294                     	;# 
   669  0295                     	;# 
   670  0295                     	;# 
   671  0296                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029C                     	;# 
   678  029C                     	;# 
   679  029D                     	;# 
   680  029E                     	;# 
   681  029F                     	;# 
   682  0311                     	;# 
   683  0311                     	;# 
   684  0312                     	;# 
   685  0313                     	;# 
   686  0314                     	;# 
   687  0315                     	;# 
   688  0315                     	;# 
   689  0316                     	;# 
   690  0318                     	;# 
   691  0318                     	;# 
   692  0319                     	;# 
   693  031A                     	;# 
   694  031C                     	;# 
   695  031C                     	;# 
   696  031D                     	;# 
   697  031E                     	;# 
   698  0394                     	;# 
   699  0395                     	;# 
   700  0396                     	;# 
   701  0415                     	;# 
   702  0416                     	;# 
   703  0417                     	;# 
   704  041C                     	;# 
   705  041D                     	;# 
   706  041E                     	;# 
   707  0791                     	;# 
   708  0792                     	;# 
   709  0793                     	;# 
   710  0794                     	;# 
   711  0795                     	;# 
   712  0798                     	;# 
   713  0799                     	;# 
   714  079A                     	;# 
   715  07A0                     	;# 
   716  07A1                     	;# 
   717  07A2                     	;# 
   718  07A3                     	;# 
   719  07A4                     	;# 
   720  07A5                     	;# 
   721  07A6                     	;# 
   722  07A7                     	;# 
   723  07A8                     	;# 
   724  07A9                     	;# 
   725  07AA                     	;# 
   726  07AB                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738                           
   739                           	psect	stringtext
   740  1000                     __pstringtext:	
   741  1000                     _dpowers:	
   742  1000  3401               	retlw	1
   743  1001  3400               	retlw	0
   744  1002  3400               	retlw	0
   745  1003  3400               	retlw	0
   746  1004  340A               	retlw	10
   747  1005  3400               	retlw	0
   748  1006  3400               	retlw	0
   749  1007  3400               	retlw	0
   750  1008  3464               	retlw	100
   751  1009  3400               	retlw	0
   752  100A  3400               	retlw	0
   753  100B  3400               	retlw	0
   754  100C  34E8               	retlw	232
   755  100D  3403               	retlw	3
   756  100E  3400               	retlw	0
   757  100F  3400               	retlw	0
   758  1010  3410               	retlw	16
   759  1011  3427               	retlw	39
   760  1012  3400               	retlw	0
   761  1013  3400               	retlw	0
   762  1014  34A0               	retlw	160
   763  1015  3486               	retlw	134
   764  1016  3401               	retlw	1
   765  1017  3400               	retlw	0
   766  1018  3440               	retlw	64
   767  1019  3442               	retlw	66
   768  101A  340F               	retlw	15
   769  101B  3400               	retlw	0
   770  101C  3480               	retlw	128
   771  101D  3496               	retlw	150
   772  101E  3498               	retlw	152
   773  101F  3400               	retlw	0
   774  1020  3400               	retlw	0
   775  1021  34E1               	retlw	225
   776  1022  34F5               	retlw	245
   777  1023  3405               	retlw	5
   778  1024  3400               	retlw	0
   779  1025  34CA               	retlw	202
   780  1026  349A               	retlw	154
   781  1027  343B               	retlw	59
   782  1028                     __end_of_dpowers:	
   783  1028                     __npowers_:	
   784  1028  3400               	retlw	0
   785  1029  3480               	retlw	128
   786  102A  343F               	retlw	63
   787  102B  34CD               	retlw	205
   788  102C  34CC               	retlw	204
   789  102D  343D               	retlw	61
   790  102E  34D7               	retlw	215
   791  102F  3423               	retlw	35
   792  1030  343C               	retlw	60
   793  1031  3412               	retlw	18
   794  1032  3483               	retlw	131
   795  1033  343A               	retlw	58
   796  1034  34B7               	retlw	183
   797  1035  34D1               	retlw	209
   798  1036  3438               	retlw	56
   799  1037  34C6               	retlw	198
   800  1038  3427               	retlw	39
   801  1039  3437               	retlw	55
   802  103A  3438               	retlw	56
   803  103B  3486               	retlw	134
   804  103C  3435               	retlw	53
   805  103D  34C0               	retlw	192
   806  103E  34D6               	retlw	214
   807  103F  3433               	retlw	51
   808  1040  34CC               	retlw	204
   809  1041  342B               	retlw	43
   810  1042  3432               	retlw	50
   811  1043  3470               	retlw	112
   812  1044  3489               	retlw	137
   813  1045  3430               	retlw	48
   814  1046  34E7               	retlw	231
   815  1047  34DB               	retlw	219
   816  1048  342E               	retlw	46
   817  1049  34E5               	retlw	229
   818  104A  343C               	retlw	60
   819  104B  341E               	retlw	30
   820  104C  3442               	retlw	66
   821  104D  34A2               	retlw	162
   822  104E  340D               	retlw	13
   823  104F                     __end_of__npowers_:	
   824  104F                     __powers_:	
   825  104F  3400               	retlw	0
   826  1050  3480               	retlw	128
   827  1051  343F               	retlw	63
   828  1052  3400               	retlw	0
   829  1053  3420               	retlw	32
   830  1054  3441               	retlw	65
   831  1055  3400               	retlw	0
   832  1056  34C8               	retlw	200
   833  1057  3442               	retlw	66
   834  1058  3400               	retlw	0
   835  1059  347A               	retlw	122
   836  105A  3444               	retlw	68
   837  105B  3440               	retlw	64
   838  105C  341C               	retlw	28
   839  105D  3446               	retlw	70
   840  105E  3450               	retlw	80
   841  105F  34C3               	retlw	195
   842  1060  3447               	retlw	71
   843  1061  3424               	retlw	36
   844  1062  3474               	retlw	116
   845  1063  3449               	retlw	73
   846  1064  3497               	retlw	151
   847  1065  3418               	retlw	24
   848  1066  344B               	retlw	75
   849  1067  34BC               	retlw	188
   850  1068  34BE               	retlw	190
   851  1069  344C               	retlw	76
   852  106A  346B               	retlw	107
   853  106B  346E               	retlw	110
   854  106C  344E               	retlw	78
   855  106D  3403               	retlw	3
   856  106E  3415               	retlw	21
   857  106F  3450               	retlw	80
   858  1070  3479               	retlw	121
   859  1071  34AD               	retlw	173
   860  1072  3460               	retlw	96
   861  1073  34F3               	retlw	243
   862  1074  3449               	retlw	73
   863  1075  3471               	retlw	113
   864  1076                     __end_of__powers_:	
   865  0011                     _PIR1bits	set	17
   866  000E                     _PORTCbits	set	14
   867  0018                     _T1CON	set	24
   868  0017                     _TMR1H	set	23
   869  0016                     _TMR1L	set	22
   870  0088                     _TMR1IF	set	136
   871  00C0                     _TMR1ON	set	192
   872  0095                     _OPTION_REGbits	set	149
   873  0099                     _OSCCON	set	153
   874  009A                     _OSCSTAT	set	154
   875  0098                     _OSCTUNE	set	152
   876  008C                     _TRISA	set	140
   877  008D                     _TRISB	set	141
   878  008E                     _TRISC	set	142
   879  008F                     _TRISD	set	143
   880  0090                     _TRISE	set	144
   881  011D                     _APFCON	set	285
   882  010C                     _LATA	set	268
   883  010D                     _LATB	set	269
   884  010E                     _LATC	set	270
   885  010E                     _LATCbits	set	270
   886  010F                     _LATD	set	271
   887  010F                     _LATDbits	set	271
   888  0110                     _LATE	set	272
   889  018C                     _ANSELA	set	396
   890  018D                     _ANSELB	set	397
   891  018F                     _ANSELD	set	399
   892  0190                     _ANSELE	set	400
   893  019F                     _BAUDCON	set	415
   894  0199                     _RCREG	set	409
   895  019D                     _RCSTA	set	413
   896  019D                     _RCSTAbits	set	413
   897  019C                     _SPBRGH	set	412
   898  019B                     _SPBRGL	set	411
   899  019A                     _TXREG	set	410
   900  019E                     _TXSTA	set	414
   901  020D                     _WPUB	set	525
   902  0210                     _WPUE	set	528
   903  1076                     STR_2:	
   904  1076  344C               	retlw	76	;'L'
   905  1077  3461               	retlw	97	;'a'
   906  1078  3420               	retlw	32	;' '
   907  1079  3444               	retlw	68	;'D'
   908  107A  3469               	retlw	105	;'i'
   909  107B  3473               	retlw	115	;'s'
   910  107C  3474               	retlw	116	;'t'
   911  107D  3461               	retlw	97	;'a'
   912  107E  346E               	retlw	110	;'n'
   913  107F  3463               	retlw	99	;'c'
   914  1080  3469               	retlw	105	;'i'
   915  1081  3461               	retlw	97	;'a'
   916  1082  3420               	retlw	32	;' '
   917  1083  3445               	retlw	69	;'E'
   918  1084  3473               	retlw	115	;'s'
   919  1085  343A               	retlw	58	;':'
   920  1086  3420               	retlw	32	;' '
   921  1087  3425               	retlw	37	;'%'
   922  1088  3435               	retlw	53	;'5'
   923  1089  342E               	retlw	46	;'.'
   924  108A  3431               	retlw	49	;'1'
   925  108B  3466               	retlw	102	;'f'
   926  108C  3400               	retlw	0
   927  108D                     STR_1:	
   928  108D  3425               	retlw	37	;'%'
   929  108E  3463               	retlw	99	;'c'
   930  108F  3400               	retlw	0
   931                           
   932                           ; #config settings
   933  0000                     
   934                           	psect	cinit
   935  07FD                     start_initialization:	
   936  07FD                     __initialization:	
   937  07FD                     end_of_initialization:	
   938                           ;End of C runtime variable initialization code
   939                           
   940  07FD                     __end_of__initialization:	
   941  07FD  0020               	movlb	0
   942  07FE  318A  2AF0         	ljmp	_main	;jump to C main() function
   943                           
   944                           	psect	cstackBANK1
   945  00A0                     __pcstackBANK1:	
   946  00A0                     _printf$755:	
   947                           
   948                           ; 3 bytes @ 0x0
   949  00A0                     	ds	3
   950  00A3                     printf@cp:	
   951                           
   952                           ; 1 bytes @ 0x3
   953  00A3                     	ds	1
   954  00A4                     printf@ap:	
   955                           
   956                           ; 1 bytes @ 0x4
   957  00A4                     	ds	1
   958  00A5                     printf@len:	
   959                           
   960                           ; 2 bytes @ 0x5
   961  00A5                     	ds	2
   962  00A7                     printf@val:	
   963                           
   964                           ; 4 bytes @ 0x7
   965  00A7                     	ds	4
   966  00AB                     printf@flag:	
   967                           
   968                           ; 2 bytes @ 0xB
   969  00AB                     	ds	2
   970  00AD                     printf@tmpval:	
   971                           
   972                           ; 4 bytes @ 0xD
   973  00AD                     	ds	4
   974  00B1                     printf@exp:	
   975                           
   976                           ; 2 bytes @ 0x11
   977  00B1                     	ds	2
   978  00B3                     printf@width:	
   979                           
   980                           ; 2 bytes @ 0x13
   981  00B3                     	ds	2
   982  00B5                     printf@fval:	
   983                           
   984                           ; 3 bytes @ 0x15
   985  00B5                     	ds	3
   986  00B8                     printf@prec:	
   987                           
   988                           ; 2 bytes @ 0x18
   989  00B8                     	ds	2
   990  00BA                     printf@c:	
   991                           
   992                           ; 1 bytes @ 0x1A
   993  00BA                     	ds	1
   994                           
   995                           	psect	cstackCOMMON
   996  0070                     __pcstackCOMMON:	
   997  0070                     ?_isdigit:	
   998  0070                     ?___ftge:	
   999                           ; 1 bit 
  1000                           
  1001  0070                     ?_SYSTEM_Initialize:	
  1002                           ; 1 bit 
  1003                           
  1004  0070                     ??_SYSTEM_Initialize:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_PIN_MANAGER_Initialize:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ??_PIN_MANAGER_Initialize:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ?_OSCILLATOR_Initialize:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ??_OSCILLATOR_Initialize:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ??_isdigit:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ?_main:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     ?_EUSART_Initialize:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0070                     ??_EUSART_Initialize:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0070                     ?_EUSART_Write:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0070                     ??_EUSART_Write:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ?_putch:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ?___awmod:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?___ftpack:	
  1044                           ; 2 bytes @ 0x0
  1045                           
  1046  0070                     ?___ftneg:	
  1047                           ; 3 bytes @ 0x0
  1048                           
  1049  0070                     ?__tdiv_to_l_:	
  1050                           ; 3 bytes @ 0x0
  1051                           
  1052  0070                     ?__div_to_l_:	
  1053                           ; 4 bytes @ 0x0
  1054                           
  1055  0070                     ?___lldiv:	
  1056                           ; 4 bytes @ 0x0
  1057                           
  1058  0070                     ?___llmod:	
  1059                           ; 4 bytes @ 0x0
  1060                           
  1061  0070                     EUSART_Write@txData:	
  1062                           ; 4 bytes @ 0x0
  1063                           
  1064  0070                     _isdigit$537:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ___awmod@divisor:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     __div_to_l_@f1:	
  1071                           ; 2 bytes @ 0x0
  1072                           
  1073  0070                     ___ftpack@arg:	
  1074                           ; 3 bytes @ 0x0
  1075                           
  1076  0070                     __tdiv_to_l_@f1:	
  1077                           ; 3 bytes @ 0x0
  1078                           
  1079  0070                     ___ftge@ff1:	
  1080                           ; 3 bytes @ 0x0
  1081                           
  1082  0070                     ___ftneg@f1:	
  1083                           ; 3 bytes @ 0x0
  1084                           
  1085  0070                     ___lldiv@divisor:	
  1086                           ; 3 bytes @ 0x0
  1087                           
  1088  0070                     ___llmod@divisor:	
  1089                           ; 4 bytes @ 0x0
  1090                           
  1091                           
  1092                           ; 4 bytes @ 0x0
  1093  0070                     	ds	1
  1094  0071                     ??_putch:	
  1095  0071                     putch@txData:	
  1096                           ; 1 bytes @ 0x1
  1097                           
  1098  0071                     isdigit@c:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x1
  1103  0071                     	ds	1
  1104  0072                     ___awmod@dividend:	
  1105                           
  1106                           ; 2 bytes @ 0x2
  1107  0072                     	ds	1
  1108  0073                     ??___ftneg:	
  1109  0073                     ___ftpack@exp:	
  1110                           ; 1 bytes @ 0x3
  1111                           
  1112  0073                     __div_to_l_@f2:	
  1113                           ; 1 bytes @ 0x3
  1114                           
  1115  0073                     __tdiv_to_l_@f2:	
  1116                           ; 3 bytes @ 0x3
  1117                           
  1118  0073                     ___ftge@ff2:	
  1119                           ; 3 bytes @ 0x3
  1120                           
  1121                           
  1122                           ; 3 bytes @ 0x3
  1123  0073                     	ds	1
  1124  0074                     ??___awmod:	
  1125  0074                     ___ftpack@sign:	
  1126                           ; 1 bytes @ 0x4
  1127                           
  1128  0074                     ___lldiv@dividend:	
  1129                           ; 1 bytes @ 0x4
  1130                           
  1131  0074                     ___llmod@dividend:	
  1132                           ; 4 bytes @ 0x4
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x4
  1136  0074                     	ds	1
  1137  0075                     ??___ftpack:	
  1138  0075                     ___awmod@counter:	
  1139                           ; 1 bytes @ 0x5
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x5
  1143  0075                     	ds	1
  1144  0076                     ??__tdiv_to_l_:	
  1145  0076                     ??__div_to_l_:	
  1146                           ; 1 bytes @ 0x6
  1147                           
  1148  0076                     ??___ftge:	
  1149                           ; 1 bytes @ 0x6
  1150                           
  1151  0076                     ___awmod@sign:	
  1152                           ; 1 bytes @ 0x6
  1153                           
  1154                           
  1155                           ; 1 bytes @ 0x6
  1156  0076                     	ds	1
  1157  0077                     ?___awdiv:	
  1158  0077                     ___awdiv@divisor:	
  1159                           ; 2 bytes @ 0x7
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x7
  1163  0077                     	ds	1
  1164  0078                     ??___lldiv:	
  1165  0078                     ??___llmod:	
  1166                           ; 1 bytes @ 0x8
  1167                           
  1168  0078                     ?___lltoft:	
  1169                           ; 1 bytes @ 0x8
  1170                           
  1171  0078                     ?___lwtoft:	
  1172                           ; 3 bytes @ 0x8
  1173                           
  1174  0078                     ___lwtoft@c:	
  1175                           ; 3 bytes @ 0x8
  1176                           
  1177  0078                     ___lltoft@c:	
  1178                           ; 2 bytes @ 0x8
  1179                           
  1180                           
  1181                           ; 4 bytes @ 0x8
  1182  0078                     	ds	1
  1183  0079                     ___llmod@counter:	
  1184  0079                     ___awdiv@dividend:	
  1185                           ; 1 bytes @ 0x9
  1186                           
  1187  0079                     ___lldiv@quotient:	
  1188                           ; 2 bytes @ 0x9
  1189                           
  1190                           
  1191                           ; 4 bytes @ 0x9
  1192  0079                     	ds	2
  1193  007B                     ??___awdiv:	
  1194  007B                     ??___lwtoft:	
  1195                           ; 1 bytes @ 0xB
  1196                           
  1197                           
  1198                           ; 1 bytes @ 0xB
  1199  007B                     	ds	1
  1200  007C                     ??___wmul:	
  1201  007C                     ??___lltoft:	
  1202                           ; 1 bytes @ 0xC
  1203                           
  1204  007C                     ___wmul@product:	
  1205                           ; 1 bytes @ 0xC
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0xC
  1209  007C                     	ds	1
  1210  007D                     ___lldiv@counter:	
  1211  007D                     ___lltoft@exp:	
  1212                           ; 1 bytes @ 0xD
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0xD
  1216  007D                     	ds	1
  1217  007E                     ??___ftsub:	
  1218                           
  1219                           	psect	cstackBANK0
  1220  0020                     __pcstackBANK0:	
  1221                           ; 1 bytes @ 0xE
  1222                           
  1223  0020                     ___awdiv@counter:	
  1224  0020                     __div_to_l_@quot:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0020                     __tdiv_to_l_@quot:	
  1228                           ; 4 bytes @ 0x0
  1229                           
  1230                           
  1231                           ; 4 bytes @ 0x0
  1232  0020                     	ds	1
  1233  0021                     ___awdiv@sign:	
  1234                           
  1235                           ; 1 bytes @ 0x1
  1236  0021                     	ds	1
  1237  0022                     ___awdiv@quotient:	
  1238                           
  1239                           ; 2 bytes @ 0x2
  1240  0022                     	ds	2
  1241  0024                     ?___wmul:	
  1242  0024                     __div_to_l_@cntr:	
  1243                           ; 2 bytes @ 0x4
  1244                           
  1245  0024                     __tdiv_to_l_@cntr:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248  0024                     ___wmul@multiplier:	
  1249                           ; 1 bytes @ 0x4
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0x4
  1253  0024                     	ds	1
  1254  0025                     __div_to_l_@exp1:	
  1255  0025                     __tdiv_to_l_@exp1:	
  1256                           ; 1 bytes @ 0x5
  1257                           
  1258                           
  1259                           ; 1 bytes @ 0x5
  1260  0025                     	ds	1
  1261  0026                     ___wmul@multiplicand:	
  1262                           
  1263                           ; 2 bytes @ 0x6
  1264  0026                     	ds	2
  1265  0028                     ?___ftmul:	
  1266  0028                     ___ftmul@f1:	
  1267                           ; 3 bytes @ 0x8
  1268                           
  1269                           
  1270                           ; 3 bytes @ 0x8
  1271  0028                     	ds	3
  1272  002B                     ___ftmul@f2:	
  1273                           
  1274                           ; 3 bytes @ 0xB
  1275  002B                     	ds	3
  1276  002E                     ??___ftmul:	
  1277                           
  1278                           ; 1 bytes @ 0xE
  1279  002E                     	ds	4
  1280  0032                     ___ftmul@exp:	
  1281                           
  1282                           ; 1 bytes @ 0x12
  1283  0032                     	ds	1
  1284  0033                     ___ftmul@f3_as_product:	
  1285                           
  1286                           ; 3 bytes @ 0x13
  1287  0033                     	ds	3
  1288  0036                     ___ftmul@cntr:	
  1289                           
  1290                           ; 1 bytes @ 0x16
  1291  0036                     	ds	1
  1292  0037                     ___ftmul@sign:	
  1293                           
  1294                           ; 1 bytes @ 0x17
  1295  0037                     	ds	1
  1296  0038                     ?_fround:	
  1297  0038                     ?_scale:	
  1298                           ; 3 bytes @ 0x18
  1299                           
  1300  0038                     ?___ftdiv:	
  1301                           ; 3 bytes @ 0x18
  1302                           
  1303  0038                     ___ftdiv@f2:	
  1304                           ; 3 bytes @ 0x18
  1305                           
  1306                           
  1307                           ; 3 bytes @ 0x18
  1308  0038                     	ds	3
  1309  003B                     ??_fround:	
  1310  003B                     ??_scale:	
  1311                           ; 1 bytes @ 0x1B
  1312                           
  1313  003B                     ___ftdiv@f1:	
  1314                           ; 1 bytes @ 0x1B
  1315                           
  1316                           
  1317                           ; 3 bytes @ 0x1B
  1318  003B                     	ds	2
  1319  003D                     _scale$754:	
  1320                           
  1321                           ; 3 bytes @ 0x1D
  1322  003D                     	ds	1
  1323  003E                     ??___ftdiv:	
  1324                           
  1325                           ; 1 bytes @ 0x1E
  1326  003E                     	ds	1
  1327  003F                     _fround$753:	
  1328                           
  1329                           ; 3 bytes @ 0x1F
  1330  003F                     	ds	1
  1331  0040                     scale@scl:	
  1332                           
  1333                           ; 1 bytes @ 0x20
  1334  0040                     	ds	1
  1335  0041                     ?___fttol:	
  1336  0041                     ___fttol@f1:	
  1337                           ; 4 bytes @ 0x21
  1338                           
  1339                           
  1340                           ; 3 bytes @ 0x21
  1341  0041                     	ds	1
  1342  0042                     ___ftdiv@cntr:	
  1343  0042                     _fround$752:	
  1344                           ; 1 bytes @ 0x22
  1345                           
  1346                           
  1347                           ; 3 bytes @ 0x22
  1348  0042                     	ds	1
  1349  0043                     ___ftdiv@f3:	
  1350                           
  1351                           ; 3 bytes @ 0x23
  1352  0043                     	ds	2
  1353  0045                     ??___fttol:	
  1354  0045                     fround@prec:	
  1355                           ; 1 bytes @ 0x25
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x25
  1359  0045                     	ds	1
  1360  0046                     ?___ftadd:	
  1361  0046                     ___ftdiv@exp:	
  1362                           ; 3 bytes @ 0x26
  1363                           
  1364  0046                     ___ftadd@f1:	
  1365                           ; 1 bytes @ 0x26
  1366                           
  1367                           
  1368                           ; 3 bytes @ 0x26
  1369  0046                     	ds	1
  1370  0047                     ___ftdiv@sign:	
  1371                           
  1372                           ; 1 bytes @ 0x27
  1373  0047                     	ds	2
  1374  0049                     ___fttol@sign1:	
  1375  0049                     ___ftadd@f2:	
  1376                           ; 1 bytes @ 0x29
  1377                           
  1378                           
  1379                           ; 3 bytes @ 0x29
  1380  0049                     	ds	1
  1381  004A                     ___fttol@lval:	
  1382                           
  1383                           ; 4 bytes @ 0x2A
  1384  004A                     	ds	2
  1385  004C                     ??___ftadd:	
  1386                           
  1387                           ; 1 bytes @ 0x2C
  1388  004C                     	ds	2
  1389  004E                     ___fttol@exp1:	
  1390                           
  1391                           ; 1 bytes @ 0x2E
  1392  004E                     	ds	2
  1393  0050                     ___ftadd@sign:	
  1394                           
  1395                           ; 1 bytes @ 0x30
  1396  0050                     	ds	1
  1397  0051                     ___ftadd@exp2:	
  1398                           
  1399                           ; 1 bytes @ 0x31
  1400  0051                     	ds	1
  1401  0052                     ___ftadd@exp1:	
  1402                           
  1403                           ; 1 bytes @ 0x32
  1404  0052                     	ds	1
  1405  0053                     ?___ftsub:	
  1406  0053                     ___ftsub@f2:	
  1407                           ; 3 bytes @ 0x33
  1408                           
  1409                           
  1410                           ; 3 bytes @ 0x33
  1411  0053                     	ds	3
  1412  0056                     ___ftsub@f1:	
  1413                           
  1414                           ; 3 bytes @ 0x36
  1415  0056                     	ds	3
  1416  0059                     ?_printf:	
  1417  0059                     printf@f:	
  1418                           ; 2 bytes @ 0x39
  1419                           
  1420                           
  1421                           ; 2 bytes @ 0x39
  1422  0059                     	ds	5
  1423  005E                     ??_printf:	
  1424                           
  1425                           ; 1 bytes @ 0x3E
  1426  005E                     	ds	6
  1427  0064                     ??_main:	
  1428                           
  1429                           ; 1 bytes @ 0x44
  1430  0064                     	ds	3
  1431  0067                     main@escape:	
  1432                           
  1433                           ; 1 bytes @ 0x47
  1434  0067                     	ds	1
  1435  0068                     main@conteo:	
  1436                           
  1437                           ; 2 bytes @ 0x48
  1438  0068                     	ds	2
  1439  006A                     main@distancia:	
  1440                           
  1441                           ; 3 bytes @ 0x4A
  1442  006A                     	ds	3
  1443                           
  1444                           	psect	maintext
  1445  0AF0                     __pmaintext:	
  1446 ;;
  1447 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1448 ;;
  1449 ;; *************** function _main *****************
  1450 ;; Defined at:
  1451 ;;		line 51 in file "main.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  distancia       3   74[BANK0 ] float 
  1456 ;;  conteo          2   72[BANK0 ] unsigned int 
  1457 ;;  escape          1   71[BANK0 ] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : B1F/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1467 ;;      Params:         0       0       0       0       0       0       0       0
  1468 ;;      Locals:         0       6       0       0       0       0       0       0
  1469 ;;      Temps:          0       3       0       0       0       0       0       0
  1470 ;;      Totals:         0       9       0       0       0       0       0       0
  1471 ;;Total ram usage:        9 bytes
  1472 ;; Hardware stack levels required when called:    4
  1473 ;; This function calls:
  1474 ;;		_SYSTEM_Initialize
  1475 ;;		___ftdiv
  1476 ;;		___ftge
  1477 ;;		___ftmul
  1478 ;;		___lwtoft
  1479 ;;		_printf
  1480 ;; This function is called by:
  1481 ;;		Startup code after reset
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _main
  1487  0AF0                     _main:	
  1488                           
  1489                           ;main.c: 54: SYSTEM_Initialize();
  1490                           
  1491                           ;incstack = 0
  1492                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1493  0AF0  3196  264A  318A   	fcall	_SYSTEM_Initialize
  1494                           
  1495                           ;main.c: 70: unsigned char escape = 27;
  1496  0AF3  301B               	movlw	27
  1497  0AF4  0020               	movlb	0	; select bank0
  1498  0AF5  00E4               	movwf	??_main
  1499  0AF6  0864               	movf	??_main,w
  1500  0AF7  00E7               	movwf	main@escape
  1501                           
  1502                           ;main.c: 71: LATCbits.LATC0 = 0;
  1503  0AF8  0022               	movlb	2	; select bank2
  1504  0AF9  100E               	bcf	14,0	;volatile
  1505                           
  1506                           ;main.c: 72: T1CON = 0b00100000;
  1507  0AFA  3020               	movlw	32
  1508  0AFB  0020               	movlb	0	; select bank0
  1509  0AFC  0098               	movwf	24	;volatile
  1510  0AFD                     l2663:	
  1511                           ;main.c: 73: unsigned int conteo;
  1512                           ;main.c: 74: float distancia;
  1513                           ;main.c: 75: while (1)
  1514                           
  1515                           
  1516                           ;main.c: 76: {
  1517                           ;main.c: 77: TMR1H = 0x00;
  1518  0AFD  0020               	movlb	0	; select bank0
  1519  0AFE  0197               	clrf	23	;volatile
  1520                           
  1521                           ;main.c: 78: TMR1L = 0x00;
  1522  0AFF  0196               	clrf	22	;volatile
  1523                           
  1524                           ;main.c: 79: conteo = 0;
  1525  0B00  01E8               	clrf	main@conteo
  1526  0B01  01E9               	clrf	main@conteo+1
  1527                           
  1528                           ;main.c: 80: LATCbits.LATC0 = 1;
  1529  0B02  0022               	movlb	2	; select bank2
  1530  0B03  140E               	bsf	14,0	;volatile
  1531                           
  1532                           ;main.c: 81: _delay((unsigned long)((12)*(20000000/4000000.0)));
  1533  0B04  3013               	movlw	19
  1534  0B05  0020               	movlb	0	; select bank0
  1535  0B06  00E4               	movwf	??_main
  1536  0B07                     u3997:	
  1537  0B07  0BE4               	decfsz	??_main,f
  1538  0B08  2B07               	goto	u3997
  1539  0B09  3200               	nop2	;nop
  1540                           
  1541                           ;main.c: 82: LATCbits.LATC0 = 0;
  1542  0B0A  0022               	movlb	2	; select bank2
  1543  0B0B  100E               	bcf	14,0	;volatile
  1544  0B0C                     l26:	
  1545                           ;main.c: 83: while (!PORTCbits.RC1);
  1546                           
  1547  0B0C  0020               	movlb	0	; select bank0
  1548  0B0D  1C8E               	btfss	14,1	;volatile
  1549  0B0E  2B0C               	goto	l26
  1550                           
  1551                           ;main.c: 84: TMR1ON = 1;
  1552  0B0F  1418               	bsf	24,0	;volatile
  1553  0B10                     l29:	
  1554                           ;main.c: 85: while (PORTCbits.RC1 && !TMR1IF);
  1555                           
  1556  0B10  1C8E               	btfss	14,1	;volatile
  1557  0B11  2B14               	goto	l33
  1558  0B12  1C11               	btfss	17,0	;volatile
  1559  0B13  2B10               	goto	l29
  1560  0B14                     l33:	
  1561                           
  1562                           ;main.c: 86: TMR1ON = 0;
  1563  0B14  1018               	bcf	24,0	;volatile
  1564                           
  1565                           ;main.c: 87: if(!TMR1IF){
  1566  0B15  1811               	btfsc	17,0	;volatile
  1567  0B16  2B29               	goto	l2679
  1568                           
  1569                           ;main.c: 88: conteo | = TMR1H << 8;
  1570  0B17  0817               	movf	23,w	;volatile
  1571  0B18  00E4               	movwf	??_main
  1572  0B19  01E5               	clrf	??_main+1
  1573  0B1A  0864               	movf	??_main,w
  1574  0B1B  00E5               	movwf	??_main+1
  1575  0B1C  01E4               	clrf	??_main
  1576  0B1D  0864               	movf	??_main,w
  1577  0B1E  04E8               	iorwf	main@conteo,f
  1578  0B1F  0865               	movf	??_main+1,w
  1579  0B20  04E9               	iorwf	main@conteo+1,f
  1580                           
  1581                           ;main.c: 89: conteo | = TMR1L;
  1582  0B21  0816               	movf	22,w	;volatile
  1583  0B22  00E4               	movwf	??_main
  1584  0B23  01E5               	clrf	??_main+1
  1585  0B24  0864               	movf	??_main,w
  1586  0B25  04E8               	iorwf	main@conteo,f
  1587  0B26  0865               	movf	??_main+1,w
  1588  0B27  04E9               	iorwf	main@conteo+1,f
  1589                           
  1590                           ;main.c: 90: }else{
  1591  0B28  2B2C               	goto	l2683
  1592  0B29                     l2679:	
  1593                           
  1594                           ;main.c: 91: conteo = 0;
  1595  0B29  01E8               	clrf	main@conteo
  1596  0B2A  01E9               	clrf	main@conteo+1
  1597                           
  1598                           ;main.c: 92: TMR1IF = 0;
  1599  0B2B  1011               	bcf	17,0	;volatile
  1600  0B2C                     l2683:	
  1601                           
  1602                           ;main.c: 93: }
  1603                           ;main.c: 94: distancia = (conteo * 0.8) / 58;
  1604  0B2C  3000               	movlw	0
  1605  0B2D  00B8               	movwf	___ftdiv@f2
  1606  0B2E  3068               	movlw	104
  1607  0B2F  00B9               	movwf	___ftdiv@f2+1
  1608  0B30  3042               	movlw	66
  1609  0B31  00BA               	movwf	___ftdiv@f2+2
  1610  0B32  30CD               	movlw	205
  1611  0B33  00A8               	movwf	___ftmul@f1
  1612  0B34  304C               	movlw	76
  1613  0B35  00A9               	movwf	___ftmul@f1+1
  1614  0B36  303F               	movlw	63
  1615  0B37  00AA               	movwf	___ftmul@f1+2
  1616  0B38  0869               	movf	main@conteo+1,w
  1617  0B39  00F9               	movwf	___lwtoft@c+1
  1618  0B3A  0868               	movf	main@conteo,w
  1619  0B3B  00F8               	movwf	___lwtoft@c
  1620  0B3C  3196  266C  318A   	fcall	___lwtoft
  1621  0B3F  0878               	movf	?___lwtoft,w
  1622  0B40  0020               	movlb	0	; select bank0
  1623  0B41  00AB               	movwf	___ftmul@f2
  1624  0B42  0879               	movf	?___lwtoft+1,w
  1625  0B43  00AC               	movwf	___ftmul@f2+1
  1626  0B44  087A               	movf	?___lwtoft+2,w
  1627  0B45  00AD               	movwf	___ftmul@f2+2
  1628  0B46  3189  2186  318A   	fcall	___ftmul
  1629  0B49  0020               	movlb	0	; select bank0
  1630  0B4A  0828               	movf	?___ftmul,w
  1631  0B4B  00BB               	movwf	___ftdiv@f1
  1632  0B4C  0829               	movf	?___ftmul+1,w
  1633  0B4D  00BC               	movwf	___ftdiv@f1+1
  1634  0B4E  082A               	movf	?___ftmul+2,w
  1635  0B4F  00BD               	movwf	___ftdiv@f1+2
  1636  0B50  3188  20DD  318A   	fcall	___ftdiv
  1637  0B53  0020               	movlb	0	; select bank0
  1638  0B54  0838               	movf	?___ftdiv,w
  1639  0B55  00EA               	movwf	main@distancia
  1640  0B56  0839               	movf	?___ftdiv+1,w
  1641  0B57  00EB               	movwf	main@distancia+1
  1642  0B58  083A               	movf	?___ftdiv+2,w
  1643  0B59  00EC               	movwf	main@distancia+2
  1644                           
  1645                           ;main.c: 95: if(distancia < 10){
  1646  0B5A  086A               	movf	main@distancia,w
  1647  0B5B  00F0               	movwf	___ftge@ff1
  1648  0B5C  086B               	movf	main@distancia+1,w
  1649  0B5D  00F1               	movwf	___ftge@ff1+1
  1650  0B5E  086C               	movf	main@distancia+2,w
  1651  0B5F  00F2               	movwf	___ftge@ff1+2
  1652  0B60  3000               	movlw	0
  1653  0B61  00F3               	movwf	___ftge@ff2
  1654  0B62  3020               	movlw	32
  1655  0B63  00F4               	movwf	___ftge@ff2+1
  1656  0B64  3041               	movlw	65
  1657  0B65  00F5               	movwf	___ftge@ff2+2
  1658  0B66  3196  26EC  318A   	fcall	___ftge
  1659  0B69  1803               	btfsc	3,0
  1660  0B6A  2B6E               	goto	l36
  1661                           
  1662                           ;main.c: 96: LATDbits.LATD4 = 1;
  1663  0B6B  0022               	movlb	2	; select bank2
  1664  0B6C  160F               	bsf	15,4	;volatile
  1665                           
  1666                           ;main.c: 97: }else{
  1667  0B6D  2B70               	goto	l2689
  1668  0B6E                     l36:	
  1669                           
  1670                           ;main.c: 98: LATDbits.LATD4 = 0;
  1671  0B6E  0022               	movlb	2	; select bank2
  1672  0B6F  120F               	bcf	15,4	;volatile
  1673  0B70                     l2689:	
  1674                           
  1675                           ;main.c: 99: }
  1676                           ;main.c: 100: printf("%c", escape);
  1677  0B70  308D               	movlw	low (STR_1| (0+32768))
  1678  0B71  0020               	movlb	0	; select bank0
  1679  0B72  00D9               	movwf	printf@f
  1680  0B73  3090               	movlw	high (STR_1| (0+32768))
  1681  0B74  00DA               	movwf	printf@f+1
  1682  0B75  0867               	movf	main@escape,w
  1683  0B76  00E4               	movwf	??_main
  1684  0B77  01E5               	clrf	??_main+1
  1685  0B78  0864               	movf	??_main,w
  1686  0B79  00DB               	movwf	?_printf+2
  1687  0B7A  0865               	movf	??_main+1,w
  1688  0B7B  00DC               	movwf	?_printf+3
  1689  0B7C  3181  21E9  318A   	fcall	_printf
  1690                           
  1691                           ;main.c: 101: _delay((unsigned long)((80)*(20000000/4000.0)));
  1692  0B7F  3003               	movlw	3
  1693  0B80  0020               	movlb	0	; select bank0
  1694  0B81  00E6               	movwf	??_main+2
  1695  0B82  3008               	movlw	8
  1696  0B83  00E5               	movwf	??_main+1
  1697  0B84  3078               	movlw	120
  1698  0B85  00E4               	movwf	??_main
  1699  0B86                     u4007:	
  1700  0B86  0BE4               	decfsz	??_main,f
  1701  0B87  2B86               	goto	u4007
  1702  0B88  0BE5               	decfsz	??_main+1,f
  1703  0B89  2B86               	goto	u4007
  1704  0B8A  0BE6               	decfsz	??_main+2,f
  1705  0B8B  2B86               	goto	u4007
  1706                           
  1707                           ;main.c: 102: printf("La Distancia Es: %5.1f", distancia);
  1708  0B8C  3076               	movlw	low (STR_2| (0+32768))
  1709  0B8D  0020               	movlb	0	; select bank0
  1710  0B8E  00D9               	movwf	printf@f
  1711  0B8F  3090               	movlw	high (STR_2| (0+32768))
  1712  0B90  00DA               	movwf	printf@f+1
  1713  0B91  086A               	movf	main@distancia,w
  1714  0B92  00DB               	movwf	?_printf+2
  1715  0B93  086B               	movf	main@distancia+1,w
  1716  0B94  00DC               	movwf	?_printf+3
  1717  0B95  086C               	movf	main@distancia+2,w
  1718  0B96  00DD               	movwf	?_printf+4
  1719  0B97  3181  21E9  318A   	fcall	_printf
  1720                           
  1721                           ;main.c: 103: _delay((unsigned long)((900)*(20000000/4000.0)));
  1722  0B9A  3017               	movlw	23
  1723  0B9B  0020               	movlb	0	; select bank0
  1724  0B9C  00E6               	movwf	??_main+2
  1725  0B9D  30D5               	movlw	213
  1726  0B9E  00E5               	movwf	??_main+1
  1727  0B9F  302B               	movlw	43
  1728  0BA0  00E4               	movwf	??_main
  1729  0BA1                     u4017:	
  1730  0BA1  0BE4               	decfsz	??_main,f
  1731  0BA2  2BA1               	goto	u4017
  1732  0BA3  0BE5               	decfsz	??_main+1,f
  1733  0BA4  2BA1               	goto	u4017
  1734  0BA5  0BE6               	decfsz	??_main+2,f
  1735  0BA6  2BA1               	goto	u4017
  1736  0BA7  0000               	nop
  1737  0BA8  2AFD               	goto	l2663
  1738  0BA9                     __end_of_main:	
  1739                           
  1740                           	psect	text1
  1741  01E9                     __ptext1:	
  1742 ;; *************** function _printf *****************
  1743 ;; Defined at:
  1744 ;;		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  f               2   57[BANK0 ] PTR const unsigned char 
  1747 ;;		 -> STR_2(23), STR_1(3), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  tmpval          4   13[BANK1 ] struct .
  1750 ;;  val             4    7[BANK1 ] unsigned long 
  1751 ;;  fval            3   21[BANK1 ] unsigned long 
  1752 ;;  prec            2   24[BANK1 ] int 
  1753 ;;  width           2   19[BANK1 ] int 
  1754 ;;  exp             2   17[BANK1 ] int 
  1755 ;;  flag            2   11[BANK1 ] unsigned short 
  1756 ;;  len             2    5[BANK1 ] unsigned int 
  1757 ;;  c               1   26[BANK1 ] char 
  1758 ;;  ap              1    4[BANK1 ] PTR void [1]
  1759 ;;		 -> ?_printf(2), 
  1760 ;;  cp              1    3[BANK1 ] PTR const unsigned char 
  1761 ;;		 -> printf@c(1), 
  1762 ;;  d               1    0        unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2   57[BANK0 ] int 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1772 ;;      Params:         0       5       0       0       0       0       0       0
  1773 ;;      Locals:         0       0      27       0       0       0       0       0
  1774 ;;      Temps:          0       6       0       0       0       0       0       0
  1775 ;;      Totals:         0      11      27       0       0       0       0       0
  1776 ;;Total ram usage:       38 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    3
  1779 ;; This function calls:
  1780 ;;		___awdiv
  1781 ;;		___ftadd
  1782 ;;		___ftge
  1783 ;;		___ftmul
  1784 ;;		___ftneg
  1785 ;;		___ftsub
  1786 ;;		___fttol
  1787 ;;		___lldiv
  1788 ;;		___llmod
  1789 ;;		___lltoft
  1790 ;;		___wmul
  1791 ;;		__div_to_l_
  1792 ;;		__tdiv_to_l_
  1793 ;;		_fround
  1794 ;;		_isdigit
  1795 ;;		_putch
  1796 ;;		_scale
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _printf
  1804  01E9                     _printf:	
  1805                           
  1806                           ;doprnt.c: 466: va_list ap;
  1807                           ;doprnt.c: 499: signed char c;
  1808                           ;doprnt.c: 501: int width;
  1809                           ;doprnt.c: 504: int prec;
  1810                           ;doprnt.c: 508: unsigned short flag;
  1811                           ;doprnt.c: 515: char d;
  1812                           ;doprnt.c: 516: double fval;
  1813                           ;doprnt.c: 517: int exp;
  1814                           ;doprnt.c: 523: union {
  1815                           ;doprnt.c: 524: unsigned long vd;
  1816                           ;doprnt.c: 525: double integ;
  1817                           ;doprnt.c: 526: } tmpval;
  1818                           ;doprnt.c: 528: unsigned long val;
  1819                           ;doprnt.c: 529: unsigned len;
  1820                           ;doprnt.c: 530: const char * cp;
  1821                           ;doprnt.c: 533: *ap = __va_start();
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1825  01E9  305B               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1826  01EA  0020               	movlb	0	; select bank0
  1827  01EB  00DE               	movwf	??_printf
  1828  01EC  085E               	movf	??_printf,w
  1829  01ED  0021               	movlb	1	; select bank1
  1830  01EE  00A4               	movwf	printf@ap^(0+128)
  1831  01EF                     l2607:	
  1832                           ;doprnt.c: 536: while(c = *f++) {
  1833                           
  1834  01EF  0020               	movlb	0	; select bank0
  1835  01F0  085A               	movf	printf@f+1,w
  1836  01F1  00DF               	movwf	??_printf+1
  1837  01F2  0859               	movf	printf@f,w
  1838  01F3  00DE               	movwf	??_printf
  1839  01F4  0AD9               	incf	printf@f,f
  1840  01F5  1903               	skipnz
  1841  01F6  0ADA               	incf	printf@f+1,f
  1842  01F7  085E               	movf	??_printf,w
  1843  01F8  0084               	movwf	4
  1844  01F9  085F               	movf	??_printf+1,w
  1845  01FA  0085               	movwf	5
  1846  01FB  0800               	movf	0,w	;code access
  1847  01FC  00E0               	movwf	??_printf+2
  1848  01FD  0860               	movf	??_printf+2,w
  1849  01FE  0021               	movlb	1	; select bank1
  1850  01FF  00BA               	movwf	printf@c^(0+128)
  1851  0200  083A               	movf	printf@c^(0+128),w
  1852  0201  1903               	btfsc	3,2
  1853  0202  0008               	return
  1854                           
  1855                           ;doprnt.c: 538: if(c != '%')
  1856  0203  3025               	movlw	37
  1857  0204  063A               	xorwf	printf@c^(0+128),w
  1858  0205  1903               	btfsc	3,2
  1859  0206  2A0C               	goto	l2359
  1860                           
  1861                           ;doprnt.c: 540: {
  1862                           ;doprnt.c: 541: (putch(c) );
  1863  0207  083A               	movf	printf@c^(0+128),w
  1864  0208  3196  262F  3181   	fcall	_putch
  1865                           
  1866                           ;doprnt.c: 542: continue;
  1867  020B  29EF               	goto	l2607
  1868  020C                     l2359:	
  1869                           
  1870                           ;doprnt.c: 543: }
  1871                           ;doprnt.c: 546: width = 0;
  1872  020C  0021               	movlb	1	; select bank1
  1873  020D  01B3               	clrf	printf@width^(0+128)
  1874  020E  01B4               	clrf	(printf@width+1)^(0+128)
  1875                           
  1876                           ;doprnt.c: 548: flag = 0;
  1877  020F  01AB               	clrf	printf@flag^(0+128)
  1878  0210  01AC               	clrf	(printf@flag+1)^(0+128)
  1879                           
  1880                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1881  0211  0020               	movlb	0	; select bank0
  1882  0212  0859               	movf	printf@f,w
  1883  0213  0084               	movwf	4
  1884  0214  085A               	movf	printf@f+1,w
  1885  0215  0085               	movwf	5
  1886  0216  0800               	movf	0,w	;code access
  1887  0217  3196  265E  3181   	fcall	_isdigit
  1888  021A  1C03               	btfss	3,0
  1889  021B  2A59               	goto	l2373
  1890                           
  1891                           ;doprnt.c: 598: width = 0;
  1892  021C  0021               	movlb	1	; select bank1
  1893  021D  01B3               	clrf	printf@width^(0+128)
  1894  021E  01B4               	clrf	(printf@width+1)^(0+128)
  1895  021F                     l2365:	
  1896                           ;doprnt.c: 599: do {
  1897                           
  1898                           
  1899                           ;doprnt.c: 600: width *= 10;
  1900  021F  300A               	movlw	10
  1901  0220  0020               	movlb	0	; select bank0
  1902  0221  00A4               	movwf	___wmul@multiplier
  1903  0222  3000               	movlw	0
  1904  0223  00A5               	movwf	___wmul@multiplier+1
  1905  0224  0021               	movlb	1	; select bank1
  1906  0225  0834               	movf	(printf@width+1)^(0+128),w
  1907  0226  0020               	movlb	0	; select bank0
  1908  0227  00A7               	movwf	___wmul@multiplicand+1
  1909  0228  0021               	movlb	1	; select bank1
  1910  0229  0833               	movf	printf@width^(0+128),w
  1911  022A  0020               	movlb	0	; select bank0
  1912  022B  00A6               	movwf	___wmul@multiplicand
  1913  022C  3180  2004  3181   	fcall	___wmul
  1914  022F  0020               	movlb	0	; select bank0
  1915  0230  0825               	movf	?___wmul+1,w
  1916  0231  0021               	movlb	1	; select bank1
  1917  0232  00B4               	movwf	(printf@width+1)^(0+128)
  1918  0233  0020               	movlb	0	; select bank0
  1919  0234  0824               	movf	?___wmul,w
  1920  0235  0021               	movlb	1	; select bank1
  1921  0236  00B3               	movwf	printf@width^(0+128)
  1922                           
  1923                           ;doprnt.c: 601: width += *f++ - '0';
  1924  0237  0020               	movlb	0	; select bank0
  1925  0238  0859               	movf	printf@f,w
  1926  0239  0084               	movwf	4
  1927  023A  085A               	movf	printf@f+1,w
  1928  023B  0085               	movwf	5
  1929  023C  0800               	movf	0,w	;code access
  1930  023D  3ED0               	addlw	208
  1931  023E  00DE               	movwf	??_printf
  1932  023F  30FF               	movlw	255
  1933  0240  1803               	skipnc
  1934  0241  3000               	movlw	0
  1935  0242  00DF               	movwf	??_printf+1
  1936  0243  085E               	movf	??_printf,w
  1937  0244  0021               	movlb	1	; select bank1
  1938  0245  07B3               	addwf	printf@width^(0+128),f
  1939  0246  0020               	movlb	0	; select bank0
  1940  0247  085F               	movf	??_printf+1,w
  1941  0248  0021               	movlb	1	; select bank1
  1942  0249  3DB4               	addwfc	(printf@width+1)^(0+128),f
  1943  024A  3001               	movlw	1
  1944  024B  0020               	movlb	0	; select bank0
  1945  024C  07D9               	addwf	printf@f,f
  1946  024D  3000               	movlw	0
  1947  024E  3DDA               	addwfc	printf@f+1,f
  1948                           
  1949                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1950  024F  0859               	movf	printf@f,w
  1951  0250  0084               	movwf	4
  1952  0251  085A               	movf	printf@f+1,w
  1953  0252  0085               	movwf	5
  1954  0253  0800               	movf	0,w	;code access
  1955  0254  3196  265E  3181   	fcall	_isdigit
  1956  0257  1803               	btfsc	3,0
  1957  0258  2A1F               	goto	l2365
  1958  0259                     l2373:	
  1959                           
  1960                           ;doprnt.c: 608: }
  1961                           ;doprnt.c: 611: if(*f == '.') {
  1962  0259  0020               	movlb	0	; select bank0
  1963  025A  0859               	movf	printf@f,w
  1964  025B  0084               	movwf	4
  1965  025C  085A               	movf	printf@f+1,w
  1966  025D  0085               	movwf	5
  1967  025E  0012               	moviw fsr0++
  1968  025F  3A2E               	xorlw	46
  1969  0260  1D03               	btfss	3,2
  1970  0261  2AA4               	goto	l2387
  1971                           
  1972                           ;doprnt.c: 612: flag |= 0x4000;
  1973  0262  0021               	movlb	1	; select bank1
  1974  0263  172C               	bsf	(printf@flag^(0+128)+1),6
  1975                           
  1976                           ;doprnt.c: 613: f++;
  1977  0264  3001               	movlw	1
  1978  0265  0020               	movlb	0	; select bank0
  1979  0266  07D9               	addwf	printf@f,f
  1980  0267  3000               	movlw	0
  1981  0268  3DDA               	addwfc	printf@f+1,f
  1982                           
  1983                           ;doprnt.c: 620: {
  1984                           ;doprnt.c: 621: prec = 0;
  1985  0269  0021               	movlb	1	; select bank1
  1986  026A  01B8               	clrf	printf@prec^(0+128)
  1987  026B  01B9               	clrf	(printf@prec+1)^(0+128)
  1988  026C                     l2385:	
  1989                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1990                           
  1991  026C  0020               	movlb	0	; select bank0
  1992  026D  0859               	movf	printf@f,w
  1993  026E  0084               	movwf	4
  1994  026F  085A               	movf	printf@f+1,w
  1995  0270  0085               	movwf	5
  1996  0271  0800               	movf	0,w	;code access
  1997  0272  3196  265E  3181   	fcall	_isdigit
  1998  0275  1C03               	btfss	3,0
  1999  0276  2B0B               	goto	l2421
  2000                           
  2001                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2002  0277  0020               	movlb	0	; select bank0
  2003  0278  0859               	movf	printf@f,w
  2004  0279  0084               	movwf	4
  2005  027A  085A               	movf	printf@f+1,w
  2006  027B  0085               	movwf	5
  2007  027C  0800               	movf	0,w	;code access
  2008  027D  00DE               	movwf	??_printf
  2009  027E  01DF               	clrf	??_printf+1
  2010  027F  0021               	movlb	1	; select bank1
  2011  0280  0839               	movf	(printf@prec+1)^(0+128),w
  2012  0281  0020               	movlb	0	; select bank0
  2013  0282  00A5               	movwf	___wmul@multiplier+1
  2014  0283  0021               	movlb	1	; select bank1
  2015  0284  0838               	movf	printf@prec^(0+128),w
  2016  0285  0020               	movlb	0	; select bank0
  2017  0286  00A4               	movwf	___wmul@multiplier
  2018  0287  300A               	movlw	10
  2019  0288  00A6               	movwf	___wmul@multiplicand
  2020  0289  3000               	movlw	0
  2021  028A  00A7               	movwf	___wmul@multiplicand+1
  2022  028B  3180  2004  3181   	fcall	___wmul
  2023  028E  0020               	movlb	0	; select bank0
  2024  028F  085E               	movf	??_printf,w
  2025  0290  0724               	addwf	?___wmul,w
  2026  0291  00E0               	movwf	??_printf+2
  2027  0292  085F               	movf	??_printf+1,w
  2028  0293  3D25               	addwfc	?___wmul+1,w
  2029  0294  00E1               	movwf	??_printf+3
  2030  0295  0860               	movf	??_printf+2,w
  2031  0296  3ED0               	addlw	208
  2032  0297  0021               	movlb	1	; select bank1
  2033  0298  00B8               	movwf	printf@prec^(0+128)
  2034  0299  30FF               	movlw	255
  2035  029A  0020               	movlb	0	; select bank0
  2036  029B  3D61               	addwfc	??_printf+3,w
  2037  029C  0021               	movlb	1	; select bank1
  2038  029D  00B9               	movwf	(printf@prec+1)^(0+128)
  2039  029E  3001               	movlw	1
  2040  029F  0020               	movlb	0	; select bank0
  2041  02A0  07D9               	addwf	printf@f,f
  2042  02A1  3000               	movlw	0
  2043  02A2  3DDA               	addwfc	printf@f+1,f
  2044  02A3  2A6C               	goto	l2385
  2045  02A4                     l2387:	
  2046                           ;doprnt.c: 624: }
  2047                           ;doprnt.c: 625: } else {
  2048                           
  2049                           
  2050                           ;doprnt.c: 626: prec = 0;
  2051  02A4  0021               	movlb	1	; select bank1
  2052  02A5  01B8               	clrf	printf@prec^(0+128)
  2053  02A6  01B9               	clrf	(printf@prec+1)^(0+128)
  2054                           
  2055                           ;doprnt.c: 628: flag |= 0x1000;
  2056  02A7  162C               	bsf	(printf@flag^(0+128)+1),4
  2057                           
  2058                           ;doprnt.c: 630: }
  2059                           ;doprnt.c: 635: switch(c = *f++) {
  2060  02A8  2B0B               	goto	l2421
  2061  02A9                     l188:	
  2062                           ;doprnt.c: 662: case 'f':
  2063                           
  2064                           ;doprnt.c: 638: goto alldone;
  2065                           
  2066                           ;doprnt.c: 637: case 0:
  2067                           
  2068                           
  2069                           ;doprnt.c: 663: flag |= 0x400;
  2070  02A9  152C               	bsf	(printf@flag^(0+128)+1),2
  2071                           
  2072                           ;doprnt.c: 664: break;
  2073  02AA  2B24               	goto	l2423
  2074  02AB                     l2391:	
  2075                           ;doprnt.c: 750: dostring:
  2076                           
  2077                           
  2078                           ;doprnt.c: 753: if(prec && prec < len)
  2079  02AB  0838               	movf	printf@prec^(0+128),w
  2080  02AC  0439               	iorwf	(printf@prec+1)^(0+128),w
  2081  02AD  1903               	btfsc	3,2
  2082  02AE  2ABB               	goto	l191
  2083  02AF  0826               	movf	(printf@len+1)^(0+128),w
  2084  02B0  0239               	subwf	(printf@prec+1)^(0+128),w
  2085  02B1  1D03               	skipz
  2086  02B2  2AB5               	goto	u3425
  2087  02B3  0825               	movf	printf@len^(0+128),w
  2088  02B4  0238               	subwf	printf@prec^(0+128),w
  2089  02B5                     u3425:	
  2090  02B5  1803               	skipnc
  2091  02B6  2ABB               	goto	l191
  2092                           
  2093                           ;doprnt.c: 754: len = prec;
  2094  02B7  0839               	movf	(printf@prec+1)^(0+128),w
  2095  02B8  00A6               	movwf	(printf@len+1)^(0+128)
  2096  02B9  0838               	movf	printf@prec^(0+128),w
  2097  02BA  00A5               	movwf	printf@len^(0+128)
  2098  02BB                     l191:	
  2099                           
  2100                           ;doprnt.c: 757: if(width > len)
  2101  02BB  0834               	movf	(printf@width+1)^(0+128),w
  2102  02BC  0226               	subwf	(printf@len+1)^(0+128),w
  2103  02BD  1D03               	skipz
  2104  02BE  2AC1               	goto	u3435
  2105  02BF  0833               	movf	printf@width^(0+128),w
  2106  02C0  0225               	subwf	printf@len^(0+128),w
  2107  02C1                     u3435:	
  2108  02C1  1803               	skipnc
  2109  02C2  2AC8               	goto	l2399
  2110                           
  2111                           ;doprnt.c: 758: width -= len;
  2112  02C3  0825               	movf	printf@len^(0+128),w
  2113  02C4  02B3               	subwf	printf@width^(0+128),f
  2114  02C5  0826               	movf	(printf@len+1)^(0+128),w
  2115  02C6  3BB4               	subwfb	(printf@width+1)^(0+128),f
  2116  02C7  2ACA               	goto	l2403
  2117  02C8                     l2399:	
  2118                           
  2119                           ;doprnt.c: 759: else
  2120                           ;doprnt.c: 760: width = 0;
  2121  02C8  01B3               	clrf	printf@width^(0+128)
  2122  02C9  01B4               	clrf	(printf@width+1)^(0+128)
  2123  02CA                     l2403:	
  2124                           ;doprnt.c: 764: while(width--)
  2125                           
  2126  02CA  30FF               	movlw	255
  2127  02CB  0021               	movlb	1	; select bank1
  2128  02CC  07B3               	addwf	printf@width^(0+128),f
  2129  02CD  30FF               	movlw	255
  2130  02CE  3DB4               	addwfc	(printf@width+1)^(0+128),f
  2131  02CF  0A33               	incf	printf@width^(0+128),w
  2132  02D0  1903               	btfsc	3,2
  2133  02D1  0A34               	incf	(printf@width+1)^(0+128),w
  2134  02D2  1903               	btfsc	3,2
  2135  02D3  2AE6               	goto	l2409
  2136                           
  2137                           ;doprnt.c: 765: (putch(' ') );
  2138  02D4  3020               	movlw	32
  2139  02D5  3196  262F  3181   	fcall	_putch
  2140  02D8  2ACA               	goto	l2403
  2141  02D9                     l2405:	
  2142                           ;doprnt.c: 767: while(len--)
  2143                           
  2144                           
  2145                           ;doprnt.c: 768: (putch(*cp++) );
  2146  02D9  0823               	movf	printf@cp^(0+128),w
  2147  02DA  0086               	movwf	6
  2148  02DB  0187               	clrf	7
  2149  02DC  0801               	movf	1,w
  2150  02DD  3196  262F  3181   	fcall	_putch
  2151  02E0  3001               	movlw	1
  2152  02E1  0020               	movlb	0	; select bank0
  2153  02E2  00DE               	movwf	??_printf
  2154  02E3  085E               	movf	??_printf,w
  2155  02E4  0021               	movlb	1	; select bank1
  2156  02E5  07A3               	addwf	printf@cp^(0+128),f
  2157  02E6                     l2409:	
  2158  02E6  3001               	movlw	1
  2159  02E7  02A5               	subwf	printf@len^(0+128),f
  2160  02E8  3000               	movlw	0
  2161  02E9  3BA6               	subwfb	(printf@len+1)^(0+128),f
  2162  02EA  0A25               	incf	printf@len^(0+128),w
  2163  02EB  1D03               	skipz
  2164  02EC  2AD9               	goto	l2405
  2165  02ED  0A26               	incf	(printf@len+1)^(0+128),w
  2166  02EE  1903               	btfsc	3,2
  2167  02EF  29EF               	goto	l2607
  2168  02F0  2AD9               	goto	l2405
  2169  02F1                     l2411:	
  2170                           ;doprnt.c: 784: case 'c':
  2171                           
  2172                           ;doprnt.c: 774: continue;
  2173                           
  2174                           
  2175                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2176  02F1  0824               	movf	printf@ap^(0+128),w
  2177  02F2  0086               	movwf	6
  2178  02F3  0187               	clrf	7
  2179  02F4  0801               	movf	1,w
  2180  02F5  0020               	movlb	0	; select bank0
  2181  02F6  00DE               	movwf	??_printf
  2182  02F7  085E               	movf	??_printf,w
  2183  02F8  0021               	movlb	1	; select bank1
  2184  02F9  00BA               	movwf	printf@c^(0+128)
  2185  02FA  3002               	movlw	2
  2186  02FB  0020               	movlb	0	; select bank0
  2187  02FC  00DE               	movwf	??_printf
  2188  02FD  085E               	movf	??_printf,w
  2189  02FE  0021               	movlb	1	; select bank1
  2190  02FF  07A4               	addwf	printf@ap^(0+128),f
  2191  0300                     l2415:	
  2192                           ;doprnt.c: 802: default:
  2193                           
  2194                           
  2195                           ;doprnt.c: 805: cp = (char *)&c;
  2196  0300  30BA               	movlw	(low (printf@c| 0))& (0+255)
  2197  0301  0020               	movlb	0	; select bank0
  2198  0302  00DE               	movwf	??_printf
  2199  0303  085E               	movf	??_printf,w
  2200  0304  0021               	movlb	1	; select bank1
  2201  0305  00A3               	movwf	printf@cp^(0+128)
  2202                           
  2203                           ;doprnt.c: 806: len = 1;
  2204  0306  3001               	movlw	1
  2205  0307  00A5               	movwf	printf@len^(0+128)
  2206  0308  3000               	movlw	0
  2207  0309  00A6               	movwf	(printf@len^(0+128)+1)
  2208                           
  2209                           ;doprnt.c: 807: goto dostring;
  2210  030A  2AAB               	goto	l2391
  2211  030B                     l2421:	
  2212                           ;doprnt.c: 822: }
  2213                           
  2214  030B  0020               	movlb	0	; select bank0
  2215  030C  085A               	movf	printf@f+1,w
  2216  030D  00DF               	movwf	??_printf+1
  2217  030E  0859               	movf	printf@f,w
  2218  030F  00DE               	movwf	??_printf
  2219  0310  0AD9               	incf	printf@f,f
  2220  0311  1903               	skipnz
  2221  0312  0ADA               	incf	printf@f+1,f
  2222  0313  085E               	movf	??_printf,w
  2223  0314  0084               	movwf	4
  2224  0315  085F               	movf	??_printf+1,w
  2225  0316  0085               	movwf	5
  2226  0317  0800               	movf	0,w	;code access
  2227  0318  0021               	movlb	1	; select bank1
  2228  0319  00BA               	movwf	printf@c^(0+128)
  2229                           
  2230                           ; Switch size 1, requested type "space"
  2231                           ; Number of cases is 3, Range of values is 0 to 102
  2232                           ; switch strategies available:
  2233                           ; Name         Instructions Cycles
  2234                           ; simple_byte           10     6 (average)
  2235                           ; direct_byte          212     6 (fixed)
  2236                           ; jumptable            260     6 (fixed)
  2237                           ;	Chosen strategy is simple_byte
  2238  031A  3A00               	xorlw	0	; case 0
  2239  031B  1903               	skipnz
  2240  031C  2FFC               	goto	l260
  2241  031D  3A63               	xorlw	99	; case 99
  2242  031E  1903               	skipnz
  2243  031F  2AF1               	goto	l2411
  2244  0320  3A05               	xorlw	5	; case 102
  2245  0321  1903               	skipnz
  2246  0322  2AA9               	goto	l188
  2247  0323  2B00               	goto	l2415
  2248  0324                     l2423:	
  2249                           
  2250                           ;doprnt.c: 825: if(flag & (0x700)) {
  2251  0324  3000               	movlw	0
  2252  0325  052B               	andwf	printf@flag^(0+128),w
  2253  0326  0020               	movlb	0	; select bank0
  2254  0327  00DE               	movwf	??_printf
  2255  0328  3007               	movlw	7
  2256  0329  0021               	movlb	1	; select bank1
  2257  032A  052C               	andwf	(printf@flag+1)^(0+128),w
  2258  032B  0020               	movlb	0	; select bank0
  2259  032C  00DF               	movwf	??_printf+1
  2260  032D  085E               	movf	??_printf,w
  2261  032E  045F               	iorwf	??_printf+1,w
  2262  032F  1903               	btfsc	3,2
  2263  0330  2F35               	goto	l2567
  2264                           
  2265                           ;doprnt.c: 827: if(flag & 0x1000)
  2266  0331  0021               	movlb	1	; select bank1
  2267  0332  1E2C               	btfss	(printf@flag+1)^(0+128),4
  2268  0333  2B38               	goto	l2429
  2269                           
  2270                           ;doprnt.c: 829: prec = 6;
  2271  0334  3006               	movlw	6
  2272  0335  00B8               	movwf	printf@prec^(0+128)
  2273  0336  3000               	movlw	0
  2274  0337  00B9               	movwf	(printf@prec^(0+128)+1)
  2275  0338                     l2429:	
  2276                           
  2277                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2278  0338  0824               	movf	printf@ap^(0+128),w
  2279  0339  0086               	movwf	6
  2280  033A  0187               	clrf	7
  2281  033B  3F40               	moviw [0]fsr1
  2282  033C  00B5               	movwf	printf@fval^(0+128)
  2283  033D  3F41               	moviw [1]fsr1
  2284  033E  00B6               	movwf	(printf@fval+1)^(0+128)
  2285  033F  3F42               	moviw [2]fsr1
  2286  0340  00B7               	movwf	(printf@fval+2)^(0+128)
  2287  0341  3003               	movlw	3
  2288  0342  0020               	movlb	0	; select bank0
  2289  0343  00DE               	movwf	??_printf
  2290  0344  085E               	movf	??_printf,w
  2291  0345  0021               	movlb	1	; select bank1
  2292  0346  07A4               	addwf	printf@ap^(0+128),f
  2293                           
  2294                           ;doprnt.c: 831: if(fval < 0.0) {
  2295  0347  0835               	movf	printf@fval^(0+128),w
  2296  0348  00F0               	movwf	___ftge@ff1
  2297  0349  0836               	movf	(printf@fval+1)^(0+128),w
  2298  034A  00F1               	movwf	___ftge@ff1+1
  2299  034B  0837               	movf	(printf@fval+2)^(0+128),w
  2300  034C  00F2               	movwf	___ftge@ff1+2
  2301  034D  3000               	movlw	0
  2302  034E  00F3               	movwf	___ftge@ff2
  2303  034F  3000               	movlw	0
  2304  0350  00F4               	movwf	___ftge@ff2+1
  2305  0351  3000               	movlw	0
  2306  0352  00F5               	movwf	___ftge@ff2+2
  2307  0353  3196  26EC  3181   	fcall	___ftge
  2308  0356  1803               	btfsc	3,0
  2309  0357  2B6D               	goto	l2439
  2310                           
  2311                           ;doprnt.c: 832: fval = -fval;
  2312  0358  0021               	movlb	1	; select bank1
  2313  0359  0835               	movf	printf@fval^(0+128),w
  2314  035A  00F0               	movwf	___ftneg@f1
  2315  035B  0836               	movf	(printf@fval+1)^(0+128),w
  2316  035C  00F1               	movwf	___ftneg@f1+1
  2317  035D  0837               	movf	(printf@fval+2)^(0+128),w
  2318  035E  00F2               	movwf	___ftneg@f1+2
  2319  035F  3196  263A  3181   	fcall	___ftneg
  2320  0362  0870               	movf	?___ftneg,w
  2321  0363  0021               	movlb	1	; select bank1
  2322  0364  00B5               	movwf	printf@fval^(0+128)
  2323  0365  0871               	movf	?___ftneg+1,w
  2324  0366  00B6               	movwf	(printf@fval+1)^(0+128)
  2325  0367  0872               	movf	?___ftneg+2,w
  2326  0368  00B7               	movwf	(printf@fval+2)^(0+128)
  2327                           
  2328                           ;doprnt.c: 833: flag |= 0x03;
  2329  0369  3003               	movlw	3
  2330  036A  04AB               	iorwf	printf@flag^(0+128),f
  2331  036B  3000               	movlw	0
  2332  036C  04AC               	iorwf	(printf@flag+1)^(0+128),f
  2333  036D                     l2439:	
  2334                           
  2335                           ;doprnt.c: 834: }
  2336                           ;doprnt.c: 835: exp = 0;
  2337  036D  0021               	movlb	1	; select bank1
  2338  036E  01B1               	clrf	printf@exp^(0+128)
  2339  036F  01B2               	clrf	(printf@exp+1)^(0+128)
  2340                           
  2341                           ;doprnt.c: 836: if( fval!=0) {
  2342  0370  0837               	movf	(printf@fval+2)^(0+128),w
  2343  0371  0436               	iorwf	(printf@fval+1)^(0+128),w
  2344  0372  0435               	iorwf	printf@fval^(0+128),w
  2345  0373  1903               	skipnz
  2346  0374  2C2D               	goto	l205
  2347                           
  2348                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2349  0375  30B5               	movlw	low (printf@fval| 0)
  2350  0376  0086               	movwf	6
  2351  0377  0187               	clrf	7
  2352  0378  3F40               	moviw [0]fsr1
  2353  0379  0020               	movlb	0	; select bank0
  2354  037A  00DE               	movwf	??_printf
  2355  037B  3F41               	moviw [1]fsr1
  2356  037C  00DF               	movwf	??_printf+1
  2357  037D  3F42               	moviw [2]fsr1
  2358  037E  00E0               	movwf	??_printf+2
  2359  037F  3F43               	moviw [3]fsr1
  2360  0380  00E1               	movwf	??_printf+3
  2361  0381  300F               	movlw	15
  2362  0382                     u3505:	
  2363  0382  36E1               	lsrf	??_printf+3,f
  2364  0383  0CE0               	rrf	??_printf+2,f
  2365  0384  0CDF               	rrf	??_printf+1,f
  2366  0385  0CDE               	rrf	??_printf,f
  2367  0386  0B89               	decfsz	9,f
  2368  0387  2B82               	goto	u3505
  2369  0388  30FF               	movlw	255
  2370  0389  055E               	andwf	??_printf,w
  2371  038A  00E2               	movwf	??_printf+4
  2372  038B  3000               	movlw	0
  2373  038C  055F               	andwf	??_printf+1,w
  2374  038D  00E3               	movwf	??_printf+5
  2375  038E  0862               	movf	??_printf+4,w
  2376  038F  3E82               	addlw	130
  2377  0390  0021               	movlb	1	; select bank1
  2378  0391  00B1               	movwf	printf@exp^(0+128)
  2379  0392  30FF               	movlw	255
  2380  0393  0020               	movlb	0	; select bank0
  2381  0394  3D63               	addwfc	??_printf+5,w
  2382  0395  0021               	movlb	1	; select bank1
  2383  0396  00B2               	movwf	(printf@exp+1)^(0+128)
  2384                           
  2385                           ;doprnt.c: 838: exp--;
  2386  0397  30FF               	movlw	255
  2387  0398  07B1               	addwf	printf@exp^(0+128),f
  2388  0399  30FF               	movlw	255
  2389  039A  3DB2               	addwfc	(printf@exp+1)^(0+128),f
  2390                           
  2391                           ;doprnt.c: 839: exp *= 3;
  2392  039B  3003               	movlw	3
  2393  039C  0020               	movlb	0	; select bank0
  2394  039D  00A4               	movwf	___wmul@multiplier
  2395  039E  3000               	movlw	0
  2396  039F  00A5               	movwf	___wmul@multiplier+1
  2397  03A0  0021               	movlb	1	; select bank1
  2398  03A1  0832               	movf	(printf@exp+1)^(0+128),w
  2399  03A2  0020               	movlb	0	; select bank0
  2400  03A3  00A7               	movwf	___wmul@multiplicand+1
  2401  03A4  0021               	movlb	1	; select bank1
  2402  03A5  0831               	movf	printf@exp^(0+128),w
  2403  03A6  0020               	movlb	0	; select bank0
  2404  03A7  00A6               	movwf	___wmul@multiplicand
  2405  03A8  3180  2004  3181   	fcall	___wmul
  2406  03AB  0020               	movlb	0	; select bank0
  2407  03AC  0825               	movf	?___wmul+1,w
  2408  03AD  0021               	movlb	1	; select bank1
  2409  03AE  00B2               	movwf	(printf@exp+1)^(0+128)
  2410  03AF  0020               	movlb	0	; select bank0
  2411  03B0  0824               	movf	?___wmul,w
  2412  03B1  0021               	movlb	1	; select bank1
  2413  03B2  00B1               	movwf	printf@exp^(0+128)
  2414                           
  2415                           ;doprnt.c: 840: exp /= 10;
  2416  03B3  300A               	movlw	10
  2417  03B4  00F7               	movwf	___awdiv@divisor
  2418  03B5  3000               	movlw	0
  2419  03B6  00F8               	movwf	___awdiv@divisor+1
  2420  03B7  0832               	movf	(printf@exp+1)^(0+128),w
  2421  03B8  00FA               	movwf	___awdiv@dividend+1
  2422  03B9  0831               	movf	printf@exp^(0+128),w
  2423  03BA  00F9               	movwf	___awdiv@dividend
  2424  03BB  3188  2004  3181   	fcall	___awdiv
  2425  03BE  0878               	movf	?___awdiv+1,w
  2426  03BF  0021               	movlb	1	; select bank1
  2427  03C0  00B2               	movwf	(printf@exp+1)^(0+128)
  2428  03C1  0877               	movf	?___awdiv,w
  2429  03C2  00B1               	movwf	printf@exp^(0+128)
  2430                           
  2431                           ;doprnt.c: 841: if(exp < 0)
  2432  03C3  1FB2               	btfss	(printf@exp+1)^(0+128),7
  2433  03C4  2BC9               	goto	l2455
  2434                           
  2435                           ;doprnt.c: 842: exp--;
  2436  03C5  30FF               	movlw	255
  2437  03C6  07B1               	addwf	printf@exp^(0+128),f
  2438  03C7  30FF               	movlw	255
  2439  03C8  3DB2               	addwfc	(printf@exp+1)^(0+128),f
  2440  03C9                     l2455:	
  2441                           
  2442                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2443  03C9  0331               	decf	printf@exp^(0+128),w
  2444  03CA  3AFF               	xorlw	255
  2445  03CB  318D  25BC  3181   	fcall	_scale
  2446  03CE  0020               	movlb	0	; select bank0
  2447  03CF  0838               	movf	?_scale,w
  2448  03D0  0021               	movlb	1	; select bank1
  2449  03D1  00AD               	movwf	printf@tmpval^(0+128)
  2450  03D2  0020               	movlb	0	; select bank0
  2451  03D3  0839               	movf	?_scale+1,w
  2452  03D4  0021               	movlb	1	; select bank1
  2453  03D5  00AE               	movwf	(printf@tmpval+1)^(0+128)
  2454  03D6  0020               	movlb	0	; select bank0
  2455  03D7  083A               	movf	?_scale+2,w
  2456  03D8  0021               	movlb	1	; select bank1
  2457  03D9  00AF               	movwf	(printf@tmpval+2)^(0+128)
  2458                           
  2459                           ;doprnt.c: 847: tmpval.integ *= fval;
  2460  03DA  0835               	movf	printf@fval^(0+128),w
  2461  03DB  0020               	movlb	0	; select bank0
  2462  03DC  00A8               	movwf	___ftmul@f1
  2463  03DD  0021               	movlb	1	; select bank1
  2464  03DE  0836               	movf	(printf@fval+1)^(0+128),w
  2465  03DF  0020               	movlb	0	; select bank0
  2466  03E0  00A9               	movwf	___ftmul@f1+1
  2467  03E1  0021               	movlb	1	; select bank1
  2468  03E2  0837               	movf	(printf@fval+2)^(0+128),w
  2469  03E3  0020               	movlb	0	; select bank0
  2470  03E4  00AA               	movwf	___ftmul@f1+2
  2471  03E5  0021               	movlb	1	; select bank1
  2472  03E6  082D               	movf	printf@tmpval^(0+128),w
  2473  03E7  0020               	movlb	0	; select bank0
  2474  03E8  00AB               	movwf	___ftmul@f2
  2475  03E9  0021               	movlb	1	; select bank1
  2476  03EA  082E               	movf	(printf@tmpval+1)^(0+128),w
  2477  03EB  0020               	movlb	0	; select bank0
  2478  03EC  00AC               	movwf	___ftmul@f2+1
  2479  03ED  0021               	movlb	1	; select bank1
  2480  03EE  082F               	movf	(printf@tmpval+2)^(0+128),w
  2481  03EF  0020               	movlb	0	; select bank0
  2482  03F0  00AD               	movwf	___ftmul@f2+2
  2483  03F1  3189  2186  3181   	fcall	___ftmul
  2484  03F4  0020               	movlb	0	; select bank0
  2485  03F5  0828               	movf	?___ftmul,w
  2486  03F6  0021               	movlb	1	; select bank1
  2487  03F7  00AD               	movwf	printf@tmpval^(0+128)
  2488  03F8  0020               	movlb	0	; select bank0
  2489  03F9  0829               	movf	?___ftmul+1,w
  2490  03FA  0021               	movlb	1	; select bank1
  2491  03FB  00AE               	movwf	(printf@tmpval+1)^(0+128)
  2492  03FC  0020               	movlb	0	; select bank0
  2493  03FD  082A               	movf	?___ftmul+2,w
  2494  03FE  0021               	movlb	1	; select bank1
  2495  03FF  00AF               	movwf	(printf@tmpval+2)^(0+128)
  2496                           
  2497                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2498  0400  082D               	movf	printf@tmpval^(0+128),w
  2499  0401  00F0               	movwf	___ftge@ff1
  2500  0402  082E               	movf	(printf@tmpval+1)^(0+128),w
  2501  0403  00F1               	movwf	___ftge@ff1+1
  2502  0404  082F               	movf	(printf@tmpval+2)^(0+128),w
  2503  0405  00F2               	movwf	___ftge@ff1+2
  2504  0406  3000               	movlw	0
  2505  0407  00F3               	movwf	___ftge@ff2
  2506  0408  3080               	movlw	128
  2507  0409  00F4               	movwf	___ftge@ff2+1
  2508  040A  303F               	movlw	63
  2509  040B  00F5               	movwf	___ftge@ff2+2
  2510  040C  3196  26EC  3181   	fcall	___ftge
  2511  040F  1803               	btfsc	3,0
  2512  0410  2C16               	goto	l2463
  2513                           
  2514                           ;doprnt.c: 849: exp--;
  2515  0411  30FF               	movlw	255
  2516  0412  0021               	movlb	1	; select bank1
  2517  0413  07B1               	addwf	printf@exp^(0+128),f
  2518  0414  30FF               	movlw	255
  2519  0415  2C2C               	goto	L1
  2520  0416                     l2463:	
  2521                           
  2522                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2523  0416  0021               	movlb	1	; select bank1
  2524  0417  082D               	movf	printf@tmpval^(0+128),w
  2525  0418  00F0               	movwf	___ftge@ff1
  2526  0419  082E               	movf	(printf@tmpval+1)^(0+128),w
  2527  041A  00F1               	movwf	___ftge@ff1+1
  2528  041B  082F               	movf	(printf@tmpval+2)^(0+128),w
  2529  041C  00F2               	movwf	___ftge@ff1+2
  2530  041D  3000               	movlw	0
  2531  041E  00F3               	movwf	___ftge@ff2
  2532  041F  3020               	movlw	32
  2533  0420  00F4               	movwf	___ftge@ff2+1
  2534  0421  3041               	movlw	65
  2535  0422  00F5               	movwf	___ftge@ff2+2
  2536  0423  3196  26EC  3181   	fcall	___ftge
  2537  0426  1C03               	btfss	3,0
  2538  0427  2C2D               	goto	l205
  2539                           
  2540                           ;doprnt.c: 851: exp++;
  2541  0428  3001               	movlw	1
  2542  0429  0021               	movlb	1	; select bank1
  2543  042A  07B1               	addwf	printf@exp^(0+128),f
  2544  042B  3000               	movlw	0
  2545  042C                     L1:	
  2546  042C  3DB2               	addwfc	(printf@exp+1)^(0+128),f
  2547  042D                     l205:	
  2548                           
  2549                           ;doprnt.c: 852: }
  2550                           ;doprnt.c: 1112: if(prec <= 12)
  2551  042D  0021               	movlb	1	; select bank1
  2552  042E  0839               	movf	(printf@prec+1)^(0+128),w
  2553  042F  3A80               	xorlw	128
  2554  0430  0020               	movlb	0	; select bank0
  2555  0431  00DE               	movwf	??_printf
  2556  0432  3080               	movlw	128
  2557  0433  025E               	subwf	??_printf,w
  2558  0434  1D03               	skipz
  2559  0435  2C39               	goto	u3545
  2560  0436  300D               	movlw	13
  2561  0437  0021               	movlb	1	; select bank1
  2562  0438  0238               	subwf	printf@prec^(0+128),w
  2563  0439                     u3545:	
  2564  0439  1803               	skipnc
  2565  043A  2C62               	goto	l2469
  2566                           
  2567                           ;doprnt.c: 1113: fval += fround(prec);
  2568  043B  0021               	movlb	1	; select bank1
  2569  043C  0838               	movf	printf@prec^(0+128),w
  2570  043D  3180  2084  3181   	fcall	_fround
  2571  0440  0020               	movlb	0	; select bank0
  2572  0441  0838               	movf	?_fround,w
  2573  0442  00C6               	movwf	___ftadd@f1
  2574  0443  0839               	movf	?_fround+1,w
  2575  0444  00C7               	movwf	___ftadd@f1+1
  2576  0445  083A               	movf	?_fround+2,w
  2577  0446  00C8               	movwf	___ftadd@f1+2
  2578  0447  0021               	movlb	1	; select bank1
  2579  0448  0835               	movf	printf@fval^(0+128),w
  2580  0449  0020               	movlb	0	; select bank0
  2581  044A  00C9               	movwf	___ftadd@f2
  2582  044B  0021               	movlb	1	; select bank1
  2583  044C  0836               	movf	(printf@fval+1)^(0+128),w
  2584  044D  0020               	movlb	0	; select bank0
  2585  044E  00CA               	movwf	___ftadd@f2+1
  2586  044F  0021               	movlb	1	; select bank1
  2587  0450  0837               	movf	(printf@fval+2)^(0+128),w
  2588  0451  0020               	movlb	0	; select bank0
  2589  0452  00CB               	movwf	___ftadd@f2+2
  2590  0453  318B  23A9  3181   	fcall	___ftadd
  2591  0456  0020               	movlb	0	; select bank0
  2592  0457  0846               	movf	?___ftadd,w
  2593  0458  0021               	movlb	1	; select bank1
  2594  0459  00B5               	movwf	printf@fval^(0+128)
  2595  045A  0020               	movlb	0	; select bank0
  2596  045B  0847               	movf	?___ftadd+1,w
  2597  045C  0021               	movlb	1	; select bank1
  2598  045D  00B6               	movwf	(printf@fval+1)^(0+128)
  2599  045E  0020               	movlb	0	; select bank0
  2600  045F  0848               	movf	?___ftadd+2,w
  2601  0460  0021               	movlb	1	; select bank1
  2602  0461  00B7               	movwf	(printf@fval+2)^(0+128)
  2603  0462                     l2469:	
  2604                           
  2605                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2606  0462  0021               	movlb	1	; select bank1
  2607  0463  0832               	movf	(printf@exp+1)^(0+128),w
  2608  0464  3A80               	xorlw	128
  2609  0465  0020               	movlb	0	; select bank0
  2610  0466  00DE               	movwf	??_printf
  2611  0467  3080               	movlw	128
  2612  0468  025E               	subwf	??_printf,w
  2613  0469  1D03               	skipz
  2614  046A  2C6E               	goto	u3555
  2615  046B  300A               	movlw	10
  2616  046C  0021               	movlb	1	; select bank1
  2617  046D  0231               	subwf	printf@exp^(0+128),w
  2618  046E                     u3555:	
  2619  046E  1803               	skipnc
  2620  046F  2C99               	goto	l2477
  2621  0470  0021               	movlb	1	; select bank1
  2622  0471  0837               	movf	(printf@fval+2)^(0+128),w
  2623  0472  0436               	iorwf	(printf@fval+1)^(0+128),w
  2624  0473  0435               	iorwf	printf@fval^(0+128),w
  2625  0474  1903               	skipnz
  2626  0475  2CE1               	goto	l2491
  2627  0476  0835               	movf	printf@fval^(0+128),w
  2628  0477  0020               	movlb	0	; select bank0
  2629  0478  00C1               	movwf	___fttol@f1
  2630  0479  0021               	movlb	1	; select bank1
  2631  047A  0836               	movf	(printf@fval+1)^(0+128),w
  2632  047B  0020               	movlb	0	; select bank0
  2633  047C  00C2               	movwf	___fttol@f1+1
  2634  047D  0021               	movlb	1	; select bank1
  2635  047E  0837               	movf	(printf@fval+2)^(0+128),w
  2636  047F  0020               	movlb	0	; select bank0
  2637  0480  00C3               	movwf	___fttol@f1+2
  2638  0481  3188  2056  3181   	fcall	___fttol
  2639  0484  0020               	movlb	0	; select bank0
  2640  0485  0844               	movf	?___fttol+3,w
  2641  0486  0443               	iorwf	?___fttol+2,w
  2642  0487  0442               	iorwf	?___fttol+1,w
  2643  0488  0441               	iorwf	?___fttol,w
  2644  0489  1D03               	skipz
  2645  048A  2CE1               	goto	l2491
  2646  048B  0021               	movlb	1	; select bank1
  2647  048C  0832               	movf	(printf@exp+1)^(0+128),w
  2648  048D  3A80               	xorlw	128
  2649  048E  0020               	movlb	0	; select bank0
  2650  048F  00DE               	movwf	??_printf
  2651  0490  3080               	movlw	128
  2652  0491  025E               	subwf	??_printf,w
  2653  0492  1D03               	skipz
  2654  0493  2C97               	goto	u3585
  2655  0494  3002               	movlw	2
  2656  0495  0021               	movlb	1	; select bank1
  2657  0496  0231               	subwf	printf@exp^(0+128),w
  2658  0497                     u3585:	
  2659  0497  1C03               	skipc
  2660  0498  2CE1               	goto	l2491
  2661  0499                     l2477:	
  2662                           
  2663                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2664  0499  0021               	movlb	1	; select bank1
  2665  049A  082D               	movf	printf@tmpval^(0+128),w
  2666  049B  00F0               	movwf	___ftge@ff1
  2667  049C  082E               	movf	(printf@tmpval+1)^(0+128),w
  2668  049D  00F1               	movwf	___ftge@ff1+1
  2669  049E  082F               	movf	(printf@tmpval+2)^(0+128),w
  2670  049F  00F2               	movwf	___ftge@ff1+2
  2671  04A0  3070               	movlw	112
  2672  04A1  00F3               	movwf	___ftge@ff2
  2673  04A2  3089               	movlw	137
  2674  04A3  00F4               	movwf	___ftge@ff2+1
  2675  04A4  3040               	movlw	64
  2676  04A5  00F5               	movwf	___ftge@ff2+2
  2677  04A6  3196  26EC  3181   	fcall	___ftge
  2678  04A9  1803               	btfsc	3,0
  2679  04AA  2CAD               	goto	l2481
  2680                           
  2681                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2682  04AB  30F7               	movlw	247
  2683  04AC  2CAE               	goto	L2
  2684  04AD                     l2481:	
  2685                           ;doprnt.c: 1122: }else{
  2686                           
  2687                           
  2688                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2689  04AD  30F8               	movlw	248
  2690  04AE                     L2:	
  2691  04AE  0021               	movlb	1	; select bank1
  2692  04AF  07B1               	addwf	printf@exp^(0+128),f
  2693  04B0  30FF               	movlw	255
  2694  04B1  3DB2               	addwfc	(printf@exp+1)^(0+128),f
  2695                           
  2696                           ;doprnt.c: 1124: }
  2697                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2698  04B2  0831               	movf	printf@exp^(0+128),w
  2699  04B3  318D  25BC  3181   	fcall	_scale
  2700  04B6  0020               	movlb	0	; select bank0
  2701  04B7  0838               	movf	?_scale,w
  2702  04B8  0021               	movlb	1	; select bank1
  2703  04B9  00AD               	movwf	printf@tmpval^(0+128)
  2704  04BA  0020               	movlb	0	; select bank0
  2705  04BB  0839               	movf	?_scale+1,w
  2706  04BC  0021               	movlb	1	; select bank1
  2707  04BD  00AE               	movwf	(printf@tmpval+1)^(0+128)
  2708  04BE  0020               	movlb	0	; select bank0
  2709  04BF  083A               	movf	?_scale+2,w
  2710  04C0  0021               	movlb	1	; select bank1
  2711  04C1  00AF               	movwf	(printf@tmpval+2)^(0+128)
  2712                           
  2713                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2714  04C2  0835               	movf	printf@fval^(0+128),w
  2715  04C3  00F0               	movwf	__tdiv_to_l_@f1
  2716  04C4  0836               	movf	(printf@fval+1)^(0+128),w
  2717  04C5  00F1               	movwf	__tdiv_to_l_@f1+1
  2718  04C6  0837               	movf	(printf@fval+2)^(0+128),w
  2719  04C7  00F2               	movwf	__tdiv_to_l_@f1+2
  2720  04C8  082D               	movf	printf@tmpval^(0+128),w
  2721  04C9  00F3               	movwf	__tdiv_to_l_@f2
  2722  04CA  082E               	movf	(printf@tmpval+1)^(0+128),w
  2723  04CB  00F4               	movwf	__tdiv_to_l_@f2+1
  2724  04CC  082F               	movf	(printf@tmpval+2)^(0+128),w
  2725  04CD  00F5               	movwf	__tdiv_to_l_@f2+2
  2726  04CE  318A  223A  3181   	fcall	__tdiv_to_l_
  2727  04D1  0873               	movf	?__tdiv_to_l_+3,w
  2728  04D2  0021               	movlb	1	; select bank1
  2729  04D3  00AA               	movwf	(printf@val+3)^(0+128)
  2730  04D4  0872               	movf	?__tdiv_to_l_+2,w
  2731  04D5  00A9               	movwf	(printf@val+2)^(0+128)
  2732  04D6  0871               	movf	?__tdiv_to_l_+1,w
  2733  04D7  00A8               	movwf	(printf@val+1)^(0+128)
  2734  04D8  0870               	movf	?__tdiv_to_l_,w
  2735  04D9  00A7               	movwf	printf@val^(0+128)
  2736                           
  2737                           ;doprnt.c: 1129: fval = 0.0;
  2738  04DA  3000               	movlw	0
  2739  04DB  00B5               	movwf	printf@fval^(0+128)
  2740  04DC  3000               	movlw	0
  2741  04DD  00B6               	movwf	(printf@fval+1)^(0+128)
  2742  04DE  3000               	movlw	0
  2743  04DF  00B7               	movwf	(printf@fval+2)^(0+128)
  2744                           
  2745                           ;doprnt.c: 1130: } else {
  2746  04E0  2D2F               	goto	l2495
  2747  04E1                     l2491:	
  2748                           
  2749                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2750  04E1  0021               	movlb	1	; select bank1
  2751  04E2  0835               	movf	printf@fval^(0+128),w
  2752  04E3  0020               	movlb	0	; select bank0
  2753  04E4  00C1               	movwf	___fttol@f1
  2754  04E5  0021               	movlb	1	; select bank1
  2755  04E6  0836               	movf	(printf@fval+1)^(0+128),w
  2756  04E7  0020               	movlb	0	; select bank0
  2757  04E8  00C2               	movwf	___fttol@f1+1
  2758  04E9  0021               	movlb	1	; select bank1
  2759  04EA  0837               	movf	(printf@fval+2)^(0+128),w
  2760  04EB  0020               	movlb	0	; select bank0
  2761  04EC  00C3               	movwf	___fttol@f1+2
  2762  04ED  3188  2056  3181   	fcall	___fttol
  2763  04F0  0020               	movlb	0	; select bank0
  2764  04F1  0844               	movf	?___fttol+3,w
  2765  04F2  0021               	movlb	1	; select bank1
  2766  04F3  00AA               	movwf	(printf@val+3)^(0+128)
  2767  04F4  0020               	movlb	0	; select bank0
  2768  04F5  0843               	movf	?___fttol+2,w
  2769  04F6  0021               	movlb	1	; select bank1
  2770  04F7  00A9               	movwf	(printf@val+2)^(0+128)
  2771  04F8  0020               	movlb	0	; select bank0
  2772  04F9  0842               	movf	?___fttol+1,w
  2773  04FA  0021               	movlb	1	; select bank1
  2774  04FB  00A8               	movwf	(printf@val+1)^(0+128)
  2775  04FC  0020               	movlb	0	; select bank0
  2776  04FD  0841               	movf	?___fttol,w
  2777  04FE  0021               	movlb	1	; select bank1
  2778  04FF  00A7               	movwf	printf@val^(0+128)
  2779                           
  2780                           ;doprnt.c: 1132: fval -= (double)val;
  2781  0500  082A               	movf	(printf@val+3)^(0+128),w
  2782  0501  00FB               	movwf	___lltoft@c+3
  2783  0502  0829               	movf	(printf@val+2)^(0+128),w
  2784  0503  00FA               	movwf	___lltoft@c+2
  2785  0504  0828               	movf	(printf@val+1)^(0+128),w
  2786  0505  00F9               	movwf	___lltoft@c+1
  2787  0506  0827               	movf	printf@val^(0+128),w
  2788  0507  00F8               	movwf	___lltoft@c
  2789  0508  3196  26C4  3181   	fcall	___lltoft
  2790  050B  0878               	movf	?___lltoft,w
  2791  050C  0020               	movlb	0	; select bank0
  2792  050D  00D3               	movwf	___ftsub@f2
  2793  050E  0879               	movf	?___lltoft+1,w
  2794  050F  00D4               	movwf	___ftsub@f2+1
  2795  0510  087A               	movf	?___lltoft+2,w
  2796  0511  00D5               	movwf	___ftsub@f2+2
  2797  0512  0021               	movlb	1	; select bank1
  2798  0513  0835               	movf	printf@fval^(0+128),w
  2799  0514  0020               	movlb	0	; select bank0
  2800  0515  00D6               	movwf	___ftsub@f1
  2801  0516  0021               	movlb	1	; select bank1
  2802  0517  0836               	movf	(printf@fval+1)^(0+128),w
  2803  0518  0020               	movlb	0	; select bank0
  2804  0519  00D7               	movwf	___ftsub@f1+1
  2805  051A  0021               	movlb	1	; select bank1
  2806  051B  0837               	movf	(printf@fval+2)^(0+128),w
  2807  051C  0020               	movlb	0	; select bank0
  2808  051D  00D8               	movwf	___ftsub@f1+2
  2809  051E  3196  267F  3181   	fcall	___ftsub
  2810  0521  0020               	movlb	0	; select bank0
  2811  0522  0853               	movf	?___ftsub,w
  2812  0523  0021               	movlb	1	; select bank1
  2813  0524  00B5               	movwf	printf@fval^(0+128)
  2814  0525  0020               	movlb	0	; select bank0
  2815  0526  0854               	movf	?___ftsub+1,w
  2816  0527  0021               	movlb	1	; select bank1
  2817  0528  00B6               	movwf	(printf@fval+1)^(0+128)
  2818  0529  0020               	movlb	0	; select bank0
  2819  052A  0855               	movf	?___ftsub+2,w
  2820  052B  0021               	movlb	1	; select bank1
  2821  052C  00B7               	movwf	(printf@fval+2)^(0+128)
  2822                           
  2823                           ;doprnt.c: 1133: exp = 0;
  2824  052D  01B1               	clrf	printf@exp^(0+128)
  2825  052E  01B2               	clrf	(printf@exp+1)^(0+128)
  2826  052F                     l2495:	
  2827                           
  2828                           ;doprnt.c: 1134: }
  2829                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2830  052F  01BA               	clrf	printf@c^(0+128)
  2831  0530  0ABA               	incf	printf@c^(0+128),f
  2832  0531  300A               	movlw	10
  2833  0532  063A               	xorwf	printf@c^(0+128),w
  2834  0533  1903               	btfsc	3,2
  2835  0534  2D6C               	goto	l2507
  2836  0535                     l2501:	
  2837                           
  2838                           ;doprnt.c: 1137: if(val < dpowers[c])
  2839  0535  083A               	movf	printf@c^(0+128),w
  2840  0536  0020               	movlb	0	; select bank0
  2841  0537  00DE               	movwf	??_printf
  2842  0538  01DF               	clrf	??_printf+1
  2843  0539  35DE               	lslf	??_printf,f
  2844  053A  0DDF               	rlf	??_printf+1,f
  2845  053B  35DE               	lslf	??_printf,f
  2846  053C  0DDF               	rlf	??_printf+1,f
  2847  053D  3000               	movlw	low (_dpowers| (0+32768))
  2848  053E  075E               	addwf	??_printf,w
  2849  053F  0084               	movwf	4
  2850  0540  3090               	movlw	high (_dpowers| (0+32768))
  2851  0541  3D5F               	addwfc	??_printf+1,w
  2852  0542  0085               	movwf	5
  2853  0543  3F00               	moviw [0]fsr0
  2854  0544  00E0               	movwf	??_printf+2
  2855  0545  3F01               	moviw [1]fsr0
  2856  0546  00E1               	movwf	??_printf+3
  2857  0547  3F02               	moviw [2]fsr0
  2858  0548  00E2               	movwf	??_printf+4
  2859  0549  3F03               	moviw [3]fsr0
  2860  054A  00E3               	movwf	??_printf+5
  2861  054B  0863               	movf	??_printf+5,w
  2862  054C  0021               	movlb	1	; select bank1
  2863  054D  022A               	subwf	(printf@val+3)^(0+128),w
  2864  054E  1D03               	skipz
  2865  054F  2D60               	goto	u3615
  2866  0550  0020               	movlb	0	; select bank0
  2867  0551  0862               	movf	??_printf+4,w
  2868  0552  0021               	movlb	1	; select bank1
  2869  0553  0229               	subwf	(printf@val+2)^(0+128),w
  2870  0554  1D03               	skipz
  2871  0555  2D60               	goto	u3615
  2872  0556  0020               	movlb	0	; select bank0
  2873  0557  0861               	movf	??_printf+3,w
  2874  0558  0021               	movlb	1	; select bank1
  2875  0559  0228               	subwf	(printf@val+1)^(0+128),w
  2876  055A  1D03               	skipz
  2877  055B  2D60               	goto	u3615
  2878  055C  0020               	movlb	0	; select bank0
  2879  055D  0860               	movf	??_printf+2,w
  2880  055E  0021               	movlb	1	; select bank1
  2881  055F  0227               	subwf	printf@val^(0+128),w
  2882  0560                     u3615:	
  2883  0560  1C03               	btfss	3,0
  2884  0561  2D6C               	goto	l2507
  2885                           
  2886                           ;doprnt.c: 1138: break;
  2887  0562  3001               	movlw	1
  2888  0563  0020               	movlb	0	; select bank0
  2889  0564  00DE               	movwf	??_printf
  2890  0565  085E               	movf	??_printf,w
  2891  0566  0021               	movlb	1	; select bank1
  2892  0567  07BA               	addwf	printf@c^(0+128),f
  2893  0568  300A               	movlw	10
  2894  0569  063A               	xorwf	printf@c^(0+128),w
  2895  056A  1D03               	btfss	3,2
  2896  056B  2D35               	goto	l2501
  2897  056C                     l2507:	
  2898                           
  2899                           ;doprnt.c: 1142: width -= prec + c + exp;
  2900  056C  083A               	movf	printf@c^(0+128),w
  2901  056D  0020               	movlb	0	; select bank0
  2902  056E  00DE               	movwf	??_printf
  2903  056F  01DF               	clrf	??_printf+1
  2904  0570  1BDE               	btfsc	??_printf,7
  2905  0571  03DF               	decf	??_printf+1,f
  2906  0572  0021               	movlb	1	; select bank1
  2907  0573  0838               	movf	printf@prec^(0+128),w
  2908  0574  0020               	movlb	0	; select bank0
  2909  0575  075E               	addwf	??_printf,w
  2910  0576  00E0               	movwf	??_printf+2
  2911  0577  0021               	movlb	1	; select bank1
  2912  0578  0839               	movf	(printf@prec+1)^(0+128),w
  2913  0579  0020               	movlb	0	; select bank0
  2914  057A  3D5F               	addwfc	??_printf+1,w
  2915  057B  00E1               	movwf	??_printf+3
  2916  057C  0021               	movlb	1	; select bank1
  2917  057D  0831               	movf	printf@exp^(0+128),w
  2918  057E  0020               	movlb	0	; select bank0
  2919  057F  0760               	addwf	??_printf+2,w
  2920  0580  00E2               	movwf	??_printf+4
  2921  0581  0021               	movlb	1	; select bank1
  2922  0582  0832               	movf	(printf@exp+1)^(0+128),w
  2923  0583  0020               	movlb	0	; select bank0
  2924  0584  3D61               	addwfc	??_printf+3,w
  2925  0585  00E3               	movwf	??_printf+5
  2926  0586  0862               	movf	??_printf+4,w
  2927  0587  0021               	movlb	1	; select bank1
  2928  0588  02B3               	subwf	printf@width^(0+128),f
  2929  0589  0020               	movlb	0	; select bank0
  2930  058A  0863               	movf	??_printf+5,w
  2931  058B  0021               	movlb	1	; select bank1
  2932  058C  3BB4               	subwfb	(printf@width+1)^(0+128),f
  2933                           
  2934                           ;doprnt.c: 1143: if(
  2935                           ;doprnt.c: 1147: prec)
  2936  058D  0838               	movf	printf@prec^(0+128),w
  2937  058E  0439               	iorwf	(printf@prec+1)^(0+128),w
  2938  058F  1903               	btfsc	3,2
  2939  0590  2D95               	goto	l2511
  2940                           
  2941                           ;doprnt.c: 1148: width--;
  2942  0591  30FF               	movlw	255
  2943  0592  07B3               	addwf	printf@width^(0+128),f
  2944  0593  30FF               	movlw	255
  2945  0594  3DB4               	addwfc	(printf@width+1)^(0+128),f
  2946  0595                     l2511:	
  2947                           
  2948                           ;doprnt.c: 1149: if(flag & 0x03)
  2949  0595  3003               	movlw	3
  2950  0596  052B               	andwf	printf@flag^(0+128),w
  2951  0597  0020               	movlb	0	; select bank0
  2952  0598  00DE               	movwf	??_printf
  2953  0599  3000               	movlw	0
  2954  059A  0021               	movlb	1	; select bank1
  2955  059B  052C               	andwf	(printf@flag+1)^(0+128),w
  2956  059C  0020               	movlb	0	; select bank0
  2957  059D  00DF               	movwf	??_printf+1
  2958  059E  085E               	movf	??_printf,w
  2959  059F  045F               	iorwf	??_printf+1,w
  2960  05A0  1903               	btfsc	3,2
  2961  05A1  2DA7               	goto	l2519
  2962  05A2                     l2517:	
  2963                           
  2964                           ;doprnt.c: 1182: width--;
  2965  05A2  30FF               	movlw	255
  2966  05A3  0021               	movlb	1	; select bank1
  2967  05A4  07B3               	addwf	printf@width^(0+128),f
  2968  05A5  30FF               	movlw	255
  2969  05A6  3DB4               	addwfc	(printf@width+1)^(0+128),f
  2970  05A7                     l2519:	
  2971  05A7  0021               	movlb	1	; select bank1
  2972  05A8  0834               	movf	(printf@width+1)^(0+128),w
  2973  05A9  3A80               	xorlw	128
  2974  05AA  0020               	movlb	0	; select bank0
  2975  05AB  00DE               	movwf	??_printf
  2976  05AC  3080               	movlw	128
  2977  05AD  025E               	subwf	??_printf,w
  2978  05AE  1D03               	skipz
  2979  05AF  2DB3               	goto	u3655
  2980  05B0  3001               	movlw	1
  2981  05B1  0021               	movlb	1	; select bank1
  2982  05B2  0233               	subwf	printf@width^(0+128),w
  2983  05B3                     u3655:	
  2984  05B3  1C03               	btfss	3,0
  2985  05B4  2DBA               	goto	l2521
  2986                           
  2987                           ;doprnt.c: 1181: (putch(' ') );
  2988                           
  2989                           ;doprnt.c: 1175: {
  2990                           ;doprnt.c: 1180: while(width > 0) {
  2991                           
  2992                           ;doprnt.c: 1150: width--;
  2993  05B5  3020               	movlw	32
  2994  05B6  3196  262F  3181   	fcall	_putch
  2995  05B9  2DA2               	goto	l2517
  2996  05BA                     l2521:	
  2997                           
  2998                           ;doprnt.c: 1183: }
  2999                           ;doprnt.c: 1188: if(flag & 0x03)
  3000  05BA  3003               	movlw	3
  3001  05BB  0021               	movlb	1	; select bank1
  3002  05BC  052B               	andwf	printf@flag^(0+128),w
  3003  05BD  0020               	movlb	0	; select bank0
  3004  05BE  00DE               	movwf	??_printf
  3005  05BF  3000               	movlw	0
  3006  05C0  0021               	movlb	1	; select bank1
  3007  05C1  052C               	andwf	(printf@flag+1)^(0+128),w
  3008  05C2  0020               	movlb	0	; select bank0
  3009  05C3  00DF               	movwf	??_printf+1
  3010  05C4  085E               	movf	??_printf,w
  3011  05C5  045F               	iorwf	??_printf+1,w
  3012  05C6  1903               	btfsc	3,2
  3013  05C7  2DCC               	goto	l2531
  3014                           
  3015                           ;doprnt.c: 1190: (putch('-') );
  3016  05C8  302D               	movlw	45
  3017  05C9                     L5:	
  3018  05C9  3196  262F  3181   	fcall	_putch
  3019  05CC                     l2531:	
  3020                           ;doprnt.c: 1195: }
  3021                           ;doprnt.c: 1196: while(c--) {
  3022                           
  3023  05CC  30FF               	movlw	255
  3024  05CD  0020               	movlb	0	; select bank0
  3025  05CE  00DE               	movwf	??_printf
  3026  05CF  085E               	movf	??_printf,w
  3027  05D0  0021               	movlb	1	; select bank1
  3028  05D1  07BA               	addwf	printf@c^(0+128),f
  3029  05D2  0A3A               	incf	printf@c^(0+128),w
  3030  05D3  1903               	btfsc	3,2
  3031  05D4  2E29               	goto	l2537
  3032                           
  3033                           ;doprnt.c: 1200: {
  3034                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3035  05D5  0021               	movlb	1	; select bank1
  3036  05D6  083A               	movf	printf@c^(0+128),w
  3037  05D7  0020               	movlb	0	; select bank0
  3038  05D8  00DE               	movwf	??_printf
  3039  05D9  01DF               	clrf	??_printf+1
  3040  05DA  35DE               	lslf	??_printf,f
  3041  05DB  0DDF               	rlf	??_printf+1,f
  3042  05DC  35DE               	lslf	??_printf,f
  3043  05DD  0DDF               	rlf	??_printf+1,f
  3044  05DE  3000               	movlw	low (_dpowers| (0+32768))
  3045  05DF  075E               	addwf	??_printf,w
  3046  05E0  0084               	movwf	4
  3047  05E1  3090               	movlw	high (_dpowers| (0+32768))
  3048  05E2  3D5F               	addwfc	??_printf+1,w
  3049  05E3  0085               	movwf	5
  3050  05E4  3F00               	moviw [0]fsr0
  3051  05E5  00F0               	movwf	___lldiv@divisor
  3052  05E6  3F01               	moviw [1]fsr0
  3053  05E7  00F1               	movwf	___lldiv@divisor+1
  3054  05E8  3F02               	moviw [2]fsr0
  3055  05E9  00F2               	movwf	___lldiv@divisor+2
  3056  05EA  3F03               	moviw [3]fsr0
  3057  05EB  00F3               	movwf	___lldiv@divisor+3
  3058  05EC  0021               	movlb	1	; select bank1
  3059  05ED  082A               	movf	(printf@val+3)^(0+128),w
  3060  05EE  00F7               	movwf	___lldiv@dividend+3
  3061  05EF  0829               	movf	(printf@val+2)^(0+128),w
  3062  05F0  00F6               	movwf	___lldiv@dividend+2
  3063  05F1  0828               	movf	(printf@val+1)^(0+128),w
  3064  05F2  00F5               	movwf	___lldiv@dividend+1
  3065  05F3  0827               	movf	printf@val^(0+128),w
  3066  05F4  00F4               	movwf	___lldiv@dividend
  3067  05F5  3197  27AE  3181   	fcall	___lldiv
  3068  05F8  0873               	movf	?___lldiv+3,w
  3069  05F9  0021               	movlb	1	; select bank1
  3070  05FA  00B0               	movwf	(printf@tmpval+3)^(0+128)
  3071  05FB  0872               	movf	?___lldiv+2,w
  3072  05FC  00AF               	movwf	(printf@tmpval+2)^(0+128)
  3073  05FD  0871               	movf	?___lldiv+1,w
  3074  05FE  00AE               	movwf	(printf@tmpval+1)^(0+128)
  3075  05FF  0870               	movf	?___lldiv,w
  3076  0600  00AD               	movwf	printf@tmpval^(0+128)
  3077                           
  3078                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3079  0601  3000               	movlw	0
  3080  0602  00F3               	movwf	___llmod@divisor+3
  3081  0603  3000               	movlw	0
  3082  0604  00F2               	movwf	___llmod@divisor+2
  3083  0605  3000               	movlw	0
  3084  0606  00F1               	movwf	___llmod@divisor+1
  3085  0607  300A               	movlw	10
  3086  0608  00F0               	movwf	___llmod@divisor
  3087  0609  0830               	movf	(printf@tmpval+3)^(0+128),w
  3088  060A  00F7               	movwf	___llmod@dividend+3
  3089  060B  082F               	movf	(printf@tmpval+2)^(0+128),w
  3090  060C  00F6               	movwf	___llmod@dividend+2
  3091  060D  082E               	movf	(printf@tmpval+1)^(0+128),w
  3092  060E  00F5               	movwf	___llmod@dividend+1
  3093  060F  082D               	movf	printf@tmpval^(0+128),w
  3094  0610  00F4               	movwf	___llmod@dividend
  3095  0611  3197  2727  3181   	fcall	___llmod
  3096  0614  0873               	movf	?___llmod+3,w
  3097  0615  0021               	movlb	1	; select bank1
  3098  0616  00B0               	movwf	(printf@tmpval+3)^(0+128)
  3099  0617  0872               	movf	?___llmod+2,w
  3100  0618  00AF               	movwf	(printf@tmpval+2)^(0+128)
  3101  0619  0871               	movf	?___llmod+1,w
  3102  061A  00AE               	movwf	(printf@tmpval+1)^(0+128)
  3103  061B  0870               	movf	?___llmod,w
  3104  061C  00AD               	movwf	printf@tmpval^(0+128)
  3105                           
  3106                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  3107  061D  082D               	movf	printf@tmpval^(0+128),w
  3108  061E  3E30               	addlw	48
  3109  061F  2DC9               	goto	L5
  3110  0620                     l2533:	
  3111                           ;doprnt.c: 1204: }
  3112                           ;doprnt.c: 1206: }
  3113                           ;doprnt.c: 1207: while(exp > 0) {
  3114                           
  3115                           
  3116                           ;doprnt.c: 1208: (putch('0') );
  3117  0620  3030               	movlw	48
  3118  0621  3196  262F  3181   	fcall	_putch
  3119                           
  3120                           ;doprnt.c: 1209: exp--;
  3121  0624  30FF               	movlw	255
  3122  0625  0021               	movlb	1	; select bank1
  3123  0626  07B1               	addwf	printf@exp^(0+128),f
  3124  0627  30FF               	movlw	255
  3125  0628  3DB2               	addwfc	(printf@exp+1)^(0+128),f
  3126  0629                     l2537:	
  3127  0629  0832               	movf	(printf@exp+1)^(0+128),w
  3128  062A  3A80               	xorlw	128
  3129  062B  0020               	movlb	0	; select bank0
  3130  062C  00DE               	movwf	??_printf
  3131  062D  3080               	movlw	128
  3132  062E  025E               	subwf	??_printf,w
  3133  062F  1D03               	skipz
  3134  0630  2E34               	goto	u3685
  3135  0631  3001               	movlw	1
  3136  0632  0021               	movlb	1	; select bank1
  3137  0633  0231               	subwf	printf@exp^(0+128),w
  3138  0634                     u3685:	
  3139  0634  1803               	skipnc
  3140  0635  2E20               	goto	l2533
  3141                           
  3142                           ;doprnt.c: 1210: }
  3143                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3144  0636  0021               	movlb	1	; select bank1
  3145  0637  0839               	movf	(printf@prec+1)^(0+128),w
  3146  0638  3A80               	xorlw	128
  3147  0639  0020               	movlb	0	; select bank0
  3148  063A  00DE               	movwf	??_printf
  3149  063B  3080               	movlw	128
  3150  063C  025E               	subwf	??_printf,w
  3151  063D  1D03               	skipz
  3152  063E  2E42               	goto	u3695
  3153  063F  3009               	movlw	9
  3154  0640  0021               	movlb	1	; select bank1
  3155  0641  0238               	subwf	printf@prec^(0+128),w
  3156  0642                     u3695:	
  3157  0642  1C03               	skipc
  3158  0643  2E46               	goto	l2543
  3159                           
  3160                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3161  0644  3008               	movlw	8
  3162  0645  2E48               	goto	L3
  3163  0646                     l2543:	
  3164                           
  3165                           ;doprnt.c: 1213: else
  3166                           ;doprnt.c: 1214: c = prec;
  3167  0646  0021               	movlb	1	; select bank1
  3168  0647  0838               	movf	printf@prec^(0+128),w
  3169  0648                     L3:	
  3170  0648  0020               	movlb	0	; select bank0
  3171  0649  00DE               	movwf	??_printf
  3172  064A  085E               	movf	??_printf,w
  3173  064B  0021               	movlb	1	; select bank1
  3174  064C  00BA               	movwf	printf@c^(0+128)
  3175                           
  3176                           ;doprnt.c: 1215: prec -= c;
  3177  064D  083A               	movf	printf@c^(0+128),w
  3178  064E  0020               	movlb	0	; select bank0
  3179  064F  00DE               	movwf	??_printf
  3180  0650  01DF               	clrf	??_printf+1
  3181  0651  1BDE               	btfsc	??_printf,7
  3182  0652  03DF               	decf	??_printf+1,f
  3183  0653  085E               	movf	??_printf,w
  3184  0654  0021               	movlb	1	; select bank1
  3185  0655  02B8               	subwf	printf@prec^(0+128),f
  3186  0656  0020               	movlb	0	; select bank0
  3187  0657  085F               	movf	??_printf+1,w
  3188  0658  0021               	movlb	1	; select bank1
  3189  0659  3BB9               	subwfb	(printf@prec+1)^(0+128),f
  3190                           
  3191                           ;doprnt.c: 1219: if(c)
  3192  065A  083A               	movf	printf@c^(0+128),w
  3193  065B  1903               	btfsc	3,2
  3194  065C  2E61               	goto	l2549
  3195                           
  3196                           ;doprnt.c: 1221: (putch('.') );
  3197  065D  302E               	movlw	46
  3198  065E  3196  262F  3181   	fcall	_putch
  3199  0661                     l2549:	
  3200                           
  3201                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3202  0661  0021               	movlb	1	; select bank1
  3203  0662  083A               	movf	printf@c^(0+128),w
  3204  0663  318D  25BC  3181   	fcall	_scale
  3205  0666  0020               	movlb	0	; select bank0
  3206  0667  0838               	movf	?_scale,w
  3207  0668  0021               	movlb	1	; select bank1
  3208  0669  00A0               	movwf	_printf$755^(0+128)
  3209  066A  0020               	movlb	0	; select bank0
  3210  066B  0839               	movf	?_scale+1,w
  3211  066C  0021               	movlb	1	; select bank1
  3212  066D  00A1               	movwf	(_printf$755+1)^(0+128)
  3213  066E  0020               	movlb	0	; select bank0
  3214  066F  083A               	movf	?_scale+2,w
  3215  0670  0021               	movlb	1	; select bank1
  3216  0671  00A2               	movwf	(_printf$755+2)^(0+128)
  3217                           
  3218                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3219  0672  0820               	movf	_printf$755^(0+128),w
  3220  0673  0020               	movlb	0	; select bank0
  3221  0674  00AB               	movwf	___ftmul@f2
  3222  0675  0021               	movlb	1	; select bank1
  3223  0676  0821               	movf	(_printf$755+1)^(0+128),w
  3224  0677  0020               	movlb	0	; select bank0
  3225  0678  00AC               	movwf	___ftmul@f2+1
  3226  0679  0021               	movlb	1	; select bank1
  3227  067A  0822               	movf	(_printf$755+2)^(0+128),w
  3228  067B  0020               	movlb	0	; select bank0
  3229  067C  00AD               	movwf	___ftmul@f2+2
  3230  067D  0021               	movlb	1	; select bank1
  3231  067E  0835               	movf	printf@fval^(0+128),w
  3232  067F  0020               	movlb	0	; select bank0
  3233  0680  00A8               	movwf	___ftmul@f1
  3234  0681  0021               	movlb	1	; select bank1
  3235  0682  0836               	movf	(printf@fval+1)^(0+128),w
  3236  0683  0020               	movlb	0	; select bank0
  3237  0684  00A9               	movwf	___ftmul@f1+1
  3238  0685  0021               	movlb	1	; select bank1
  3239  0686  0837               	movf	(printf@fval+2)^(0+128),w
  3240  0687  0020               	movlb	0	; select bank0
  3241  0688  00AA               	movwf	___ftmul@f1+2
  3242  0689  3189  2186  3181   	fcall	___ftmul
  3243  068C  0020               	movlb	0	; select bank0
  3244  068D  0828               	movf	?___ftmul,w
  3245  068E  00C1               	movwf	___fttol@f1
  3246  068F  0829               	movf	?___ftmul+1,w
  3247  0690  00C2               	movwf	___fttol@f1+1
  3248  0691  082A               	movf	?___ftmul+2,w
  3249  0692  00C3               	movwf	___fttol@f1+2
  3250  0693  3188  2056  3181   	fcall	___fttol
  3251  0696  0020               	movlb	0	; select bank0
  3252  0697  0844               	movf	?___fttol+3,w
  3253  0698  0021               	movlb	1	; select bank1
  3254  0699  00AA               	movwf	(printf@val+3)^(0+128)
  3255  069A  0020               	movlb	0	; select bank0
  3256  069B  0843               	movf	?___fttol+2,w
  3257  069C  0021               	movlb	1	; select bank1
  3258  069D  00A9               	movwf	(printf@val+2)^(0+128)
  3259  069E  0020               	movlb	0	; select bank0
  3260  069F  0842               	movf	?___fttol+1,w
  3261  06A0  0021               	movlb	1	; select bank1
  3262  06A1  00A8               	movwf	(printf@val+1)^(0+128)
  3263  06A2  0020               	movlb	0	; select bank0
  3264  06A3  0841               	movf	?___fttol,w
  3265  06A4  0021               	movlb	1	; select bank1
  3266  06A5                     L4:	
  3267  06A5  00A7               	movwf	printf@val^(0+128)
  3268  06A6  30FF               	movlw	255
  3269  06A7  0020               	movlb	0	; select bank0
  3270  06A8  00DE               	movwf	??_printf
  3271  06A9  085E               	movf	??_printf,w
  3272  06AA  0021               	movlb	1	; select bank1
  3273  06AB  07BA               	addwf	printf@c^(0+128),f
  3274  06AC  0A3A               	incf	printf@c^(0+128),w
  3275  06AD  1903               	btfsc	3,2
  3276  06AE  2F30               	goto	l2565
  3277                           
  3278                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3279                           
  3280                           ;doprnt.c: 1228: while(c--) {
  3281  06AF  083A               	movf	printf@c^(0+128),w
  3282  06B0  0020               	movlb	0	; select bank0
  3283  06B1  00DE               	movwf	??_printf
  3284  06B2  01DF               	clrf	??_printf+1
  3285  06B3  35DE               	lslf	??_printf,f
  3286  06B4  0DDF               	rlf	??_printf+1,f
  3287  06B5  35DE               	lslf	??_printf,f
  3288  06B6  0DDF               	rlf	??_printf+1,f
  3289  06B7  3000               	movlw	low (_dpowers| (0+32768))
  3290  06B8  075E               	addwf	??_printf,w
  3291  06B9  0084               	movwf	4
  3292  06BA  3090               	movlw	high (_dpowers| (0+32768))
  3293  06BB  3D5F               	addwfc	??_printf+1,w
  3294  06BC  0085               	movwf	5
  3295  06BD  3F00               	moviw [0]fsr0
  3296  06BE  00F0               	movwf	___lldiv@divisor
  3297  06BF  3F01               	moviw [1]fsr0
  3298  06C0  00F1               	movwf	___lldiv@divisor+1
  3299  06C1  3F02               	moviw [2]fsr0
  3300  06C2  00F2               	movwf	___lldiv@divisor+2
  3301  06C3  3F03               	moviw [3]fsr0
  3302  06C4  00F3               	movwf	___lldiv@divisor+3
  3303  06C5  0021               	movlb	1	; select bank1
  3304  06C6  082A               	movf	(printf@val+3)^(0+128),w
  3305  06C7  00F7               	movwf	___lldiv@dividend+3
  3306  06C8  0829               	movf	(printf@val+2)^(0+128),w
  3307  06C9  00F6               	movwf	___lldiv@dividend+2
  3308  06CA  0828               	movf	(printf@val+1)^(0+128),w
  3309  06CB  00F5               	movwf	___lldiv@dividend+1
  3310  06CC  0827               	movf	printf@val^(0+128),w
  3311  06CD  00F4               	movwf	___lldiv@dividend
  3312  06CE  3197  27AE  3181   	fcall	___lldiv
  3313  06D1  0873               	movf	?___lldiv+3,w
  3314  06D2  0021               	movlb	1	; select bank1
  3315  06D3  00B0               	movwf	(printf@tmpval+3)^(0+128)
  3316  06D4  0872               	movf	?___lldiv+2,w
  3317  06D5  00AF               	movwf	(printf@tmpval+2)^(0+128)
  3318  06D6  0871               	movf	?___lldiv+1,w
  3319  06D7  00AE               	movwf	(printf@tmpval+1)^(0+128)
  3320  06D8  0870               	movf	?___lldiv,w
  3321  06D9  00AD               	movwf	printf@tmpval^(0+128)
  3322                           
  3323                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3324  06DA  3000               	movlw	0
  3325  06DB  00F3               	movwf	___llmod@divisor+3
  3326  06DC  3000               	movlw	0
  3327  06DD  00F2               	movwf	___llmod@divisor+2
  3328  06DE  3000               	movlw	0
  3329  06DF  00F1               	movwf	___llmod@divisor+1
  3330  06E0  300A               	movlw	10
  3331  06E1  00F0               	movwf	___llmod@divisor
  3332  06E2  0830               	movf	(printf@tmpval+3)^(0+128),w
  3333  06E3  00F7               	movwf	___llmod@dividend+3
  3334  06E4  082F               	movf	(printf@tmpval+2)^(0+128),w
  3335  06E5  00F6               	movwf	___llmod@dividend+2
  3336  06E6  082E               	movf	(printf@tmpval+1)^(0+128),w
  3337  06E7  00F5               	movwf	___llmod@dividend+1
  3338  06E8  082D               	movf	printf@tmpval^(0+128),w
  3339  06E9  00F4               	movwf	___llmod@dividend
  3340  06EA  3197  2727  3181   	fcall	___llmod
  3341  06ED  0873               	movf	?___llmod+3,w
  3342  06EE  0021               	movlb	1	; select bank1
  3343  06EF  00B0               	movwf	(printf@tmpval+3)^(0+128)
  3344  06F0  0872               	movf	?___llmod+2,w
  3345  06F1  00AF               	movwf	(printf@tmpval+2)^(0+128)
  3346  06F2  0871               	movf	?___llmod+1,w
  3347  06F3  00AE               	movwf	(printf@tmpval+1)^(0+128)
  3348  06F4  0870               	movf	?___llmod,w
  3349  06F5  00AD               	movwf	printf@tmpval^(0+128)
  3350                           
  3351                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  3352  06F6  082D               	movf	printf@tmpval^(0+128),w
  3353  06F7  3E30               	addlw	48
  3354  06F8  3196  262F  3181   	fcall	_putch
  3355                           
  3356                           ;doprnt.c: 1232: val %= dpowers[c];
  3357  06FB  0021               	movlb	1	; select bank1
  3358  06FC  083A               	movf	printf@c^(0+128),w
  3359  06FD  0020               	movlb	0	; select bank0
  3360  06FE  00DE               	movwf	??_printf
  3361  06FF  01DF               	clrf	??_printf+1
  3362  0700  35DE               	lslf	??_printf,f
  3363  0701  0DDF               	rlf	??_printf+1,f
  3364  0702  35DE               	lslf	??_printf,f
  3365  0703  0DDF               	rlf	??_printf+1,f
  3366  0704  3000               	movlw	low (_dpowers| (0+32768))
  3367  0705  075E               	addwf	??_printf,w
  3368  0706  0084               	movwf	4
  3369  0707  3090               	movlw	high (_dpowers| (0+32768))
  3370  0708  3D5F               	addwfc	??_printf+1,w
  3371  0709  0085               	movwf	5
  3372  070A  3F00               	moviw [0]fsr0
  3373  070B  00F0               	movwf	___llmod@divisor
  3374  070C  3F01               	moviw [1]fsr0
  3375  070D  00F1               	movwf	___llmod@divisor+1
  3376  070E  3F02               	moviw [2]fsr0
  3377  070F  00F2               	movwf	___llmod@divisor+2
  3378  0710  3F03               	moviw [3]fsr0
  3379  0711  00F3               	movwf	___llmod@divisor+3
  3380  0712  0021               	movlb	1	; select bank1
  3381  0713  082A               	movf	(printf@val+3)^(0+128),w
  3382  0714  00F7               	movwf	___llmod@dividend+3
  3383  0715  0829               	movf	(printf@val+2)^(0+128),w
  3384  0716  00F6               	movwf	___llmod@dividend+2
  3385  0717  0828               	movf	(printf@val+1)^(0+128),w
  3386  0718  00F5               	movwf	___llmod@dividend+1
  3387  0719  0827               	movf	printf@val^(0+128),w
  3388  071A  00F4               	movwf	___llmod@dividend
  3389  071B  3197  2727  3181   	fcall	___llmod
  3390  071E  0873               	movf	?___llmod+3,w
  3391  071F  0021               	movlb	1	; select bank1
  3392  0720  00AA               	movwf	(printf@val+3)^(0+128)
  3393  0721  0872               	movf	?___llmod+2,w
  3394  0722  00A9               	movwf	(printf@val+2)^(0+128)
  3395  0723  0871               	movf	?___llmod+1,w
  3396  0724  00A8               	movwf	(printf@val+1)^(0+128)
  3397  0725  0870               	movf	?___llmod,w
  3398  0726  2EA5               	goto	L4
  3399  0727                     l2561:	
  3400                           ;doprnt.c: 1233: }
  3401                           ;doprnt.c: 1235: while(prec) {
  3402                           
  3403                           
  3404                           ;doprnt.c: 1236: (putch('0') );
  3405  0727  3030               	movlw	48
  3406  0728  3196  262F  3181   	fcall	_putch
  3407                           
  3408                           ;doprnt.c: 1237: prec--;
  3409  072B  30FF               	movlw	255
  3410  072C  0021               	movlb	1	; select bank1
  3411  072D  07B8               	addwf	printf@prec^(0+128),f
  3412  072E  30FF               	movlw	255
  3413  072F  3DB9               	addwfc	(printf@prec+1)^(0+128),f
  3414  0730                     l2565:	
  3415  0730  0838               	movf	printf@prec^(0+128),w
  3416  0731  0439               	iorwf	(printf@prec+1)^(0+128),w
  3417  0732  1903               	btfsc	3,2
  3418  0733  29EF               	goto	l2607
  3419  0734  2F27               	goto	l2561
  3420  0735                     l2567:	
  3421                           ;doprnt.c: 1238: }
  3422                           ;doprnt.c: 1245: continue;
  3423                           
  3424                           
  3425                           ;doprnt.c: 1246: }
  3426                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3427  0735  0021               	movlb	1	; select bank1
  3428  0736  0838               	movf	printf@prec^(0+128),w
  3429  0737  0439               	iorwf	(printf@prec+1)^(0+128),w
  3430  0738  1D03               	btfss	3,2
  3431  0739  2F44               	goto	l245
  3432  073A  082A               	movf	(printf@val+3)^(0+128),w
  3433  073B  0429               	iorwf	(printf@val+2)^(0+128),w
  3434  073C  0428               	iorwf	(printf@val+1)^(0+128),w
  3435  073D  0427               	iorwf	printf@val^(0+128),w
  3436  073E  1D03               	skipz
  3437  073F  2F44               	goto	l245
  3438                           
  3439                           ;doprnt.c: 1291: prec++;
  3440  0740  3001               	movlw	1
  3441  0741  07B8               	addwf	printf@prec^(0+128),f
  3442  0742  3000               	movlw	0
  3443  0743  3DB9               	addwfc	(printf@prec+1)^(0+128),f
  3444  0744                     l245:	
  3445                           
  3446                           ;doprnt.c: 1339: if(c < prec)
  3447  0744  083A               	movf	printf@c^(0+128),w
  3448  0745  0020               	movlb	0	; select bank0
  3449  0746  00DE               	movwf	??_printf
  3450  0747  01DF               	clrf	??_printf+1
  3451  0748  1BDE               	btfsc	??_printf,7
  3452  0749  03DF               	decf	??_printf+1,f
  3453  074A  085F               	movf	??_printf+1,w
  3454  074B  3A80               	xorlw	128
  3455  074C  00E0               	movwf	??_printf+2
  3456  074D  0021               	movlb	1	; select bank1
  3457  074E  0839               	movf	(printf@prec+1)^(0+128),w
  3458  074F  3A80               	xorlw	128
  3459  0750  0020               	movlb	0	; select bank0
  3460  0751  0260               	subwf	??_printf+2,w
  3461  0752  1D03               	skipz
  3462  0753  2F58               	goto	u3755
  3463  0754  0021               	movlb	1	; select bank1
  3464  0755  0838               	movf	printf@prec^(0+128),w
  3465  0756  0020               	movlb	0	; select bank0
  3466  0757  025E               	subwf	??_printf,w
  3467  0758                     u3755:	
  3468  0758  1803               	skipnc
  3469  0759  2F62               	goto	l2575
  3470                           
  3471                           ;doprnt.c: 1340: c = prec;
  3472  075A  0021               	movlb	1	; select bank1
  3473  075B  0838               	movf	printf@prec^(0+128),w
  3474  075C  0020               	movlb	0	; select bank0
  3475  075D  00DE               	movwf	??_printf
  3476  075E  085E               	movf	??_printf,w
  3477  075F  0021               	movlb	1	; select bank1
  3478  0760  00BA               	movwf	printf@c^(0+128)
  3479  0761  2F7E               	goto	l247
  3480  0762                     l2575:	
  3481                           
  3482                           ;doprnt.c: 1341: else if(prec < c)
  3483  0762  0021               	movlb	1	; select bank1
  3484  0763  083A               	movf	printf@c^(0+128),w
  3485  0764  0020               	movlb	0	; select bank0
  3486  0765  00DE               	movwf	??_printf
  3487  0766  01DF               	clrf	??_printf+1
  3488  0767  1BDE               	btfsc	??_printf,7
  3489  0768  03DF               	decf	??_printf+1,f
  3490  0769  0021               	movlb	1	; select bank1
  3491  076A  0839               	movf	(printf@prec+1)^(0+128),w
  3492  076B  3A80               	xorlw	128
  3493  076C  0020               	movlb	0	; select bank0
  3494  076D  00E0               	movwf	??_printf+2
  3495  076E  085F               	movf	??_printf+1,w
  3496  076F  3A80               	xorlw	128
  3497  0770  0260               	subwf	??_printf+2,w
  3498  0771  1D03               	skipz
  3499  0772  2F76               	goto	u3765
  3500  0773  085E               	movf	??_printf,w
  3501  0774  0021               	movlb	1	; select bank1
  3502  0775  0238               	subwf	printf@prec^(0+128),w
  3503  0776                     u3765:	
  3504  0776  1803               	skipnc
  3505  0777  2F7E               	goto	l247
  3506                           
  3507                           ;doprnt.c: 1342: prec = c;
  3508  0778  0021               	movlb	1	; select bank1
  3509  0779  083A               	movf	printf@c^(0+128),w
  3510  077A  00B8               	movwf	printf@prec^(0+128)
  3511  077B  01B9               	clrf	(printf@prec+1)^(0+128)
  3512  077C  1BB8               	btfsc	printf@prec^(0+128),7
  3513  077D  03B9               	decf	(printf@prec+1)^(0+128),f
  3514  077E                     l247:	
  3515                           
  3516                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3517  077E  0021               	movlb	1	; select bank1
  3518  077F  0833               	movf	printf@width^(0+128),w
  3519  0780  0434               	iorwf	(printf@width+1)^(0+128),w
  3520  0781  1903               	btfsc	3,2
  3521  0782  2F95               	goto	l2583
  3522  0783  3003               	movlw	3
  3523  0784  052B               	andwf	printf@flag^(0+128),w
  3524  0785  0020               	movlb	0	; select bank0
  3525  0786  00DE               	movwf	??_printf
  3526  0787  3000               	movlw	0
  3527  0788  0021               	movlb	1	; select bank1
  3528  0789  052C               	andwf	(printf@flag+1)^(0+128),w
  3529  078A  0020               	movlb	0	; select bank0
  3530  078B  00DF               	movwf	??_printf+1
  3531  078C  085E               	movf	??_printf,w
  3532  078D  045F               	iorwf	??_printf+1,w
  3533  078E  1903               	btfsc	3,2
  3534  078F  2F95               	goto	l2583
  3535                           
  3536                           ;doprnt.c: 1346: width--;
  3537  0790  30FF               	movlw	255
  3538  0791  0021               	movlb	1	; select bank1
  3539  0792  07B3               	addwf	printf@width^(0+128),f
  3540  0793  30FF               	movlw	255
  3541  0794  3DB4               	addwfc	(printf@width+1)^(0+128),f
  3542  0795                     l2583:	
  3543                           
  3544                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3545  0795  0021               	movlb	1	; select bank1
  3546  0796  1F2C               	btfss	(printf@flag+1)^(0+128),6
  3547  0797  2FB1               	goto	l2591
  3548                           
  3549                           ;doprnt.c: 1349: if(width > prec)
  3550  0798  0839               	movf	(printf@prec+1)^(0+128),w
  3551  0799  3A80               	xorlw	128
  3552  079A  0020               	movlb	0	; select bank0
  3553  079B  00DE               	movwf	??_printf
  3554  079C  0021               	movlb	1	; select bank1
  3555  079D  0834               	movf	(printf@width+1)^(0+128),w
  3556  079E  3A80               	xorlw	128
  3557  079F  0020               	movlb	0	; select bank0
  3558  07A0  025E               	subwf	??_printf,w
  3559  07A1  1D03               	skipz
  3560  07A2  2FA6               	goto	u3805
  3561  07A3  0021               	movlb	1	; select bank1
  3562  07A4  0833               	movf	printf@width^(0+128),w
  3563  07A5  0238               	subwf	printf@prec^(0+128),w
  3564  07A6                     u3805:	
  3565  07A6  1803               	skipnc
  3566  07A7  2FAE               	goto	l2589
  3567                           
  3568                           ;doprnt.c: 1350: width -= prec;
  3569  07A8  0021               	movlb	1	; select bank1
  3570  07A9  0838               	movf	printf@prec^(0+128),w
  3571  07AA  02B3               	subwf	printf@width^(0+128),f
  3572  07AB  0839               	movf	(printf@prec+1)^(0+128),w
  3573  07AC  3BB4               	subwfb	(printf@width+1)^(0+128),f
  3574  07AD  2FB1               	goto	l2591
  3575  07AE                     l2589:	
  3576                           
  3577                           ;doprnt.c: 1351: else
  3578                           ;doprnt.c: 1352: width = 0;
  3579  07AE  0021               	movlb	1	; select bank1
  3580  07AF  01B3               	clrf	printf@width^(0+128)
  3581  07B0  01B4               	clrf	(printf@width+1)^(0+128)
  3582  07B1                     l2591:	
  3583                           
  3584                           ;doprnt.c: 1353: }
  3585                           ;doprnt.c: 1381: if(width > c)
  3586  07B1  083A               	movf	printf@c^(0+128),w
  3587  07B2  0020               	movlb	0	; select bank0
  3588  07B3  00DE               	movwf	??_printf
  3589  07B4  01DF               	clrf	??_printf+1
  3590  07B5  1BDE               	btfsc	??_printf,7
  3591  07B6  03DF               	decf	??_printf+1,f
  3592  07B7  085F               	movf	??_printf+1,w
  3593  07B8  3A80               	xorlw	128
  3594  07B9  00E0               	movwf	??_printf+2
  3595  07BA  0021               	movlb	1	; select bank1
  3596  07BB  0834               	movf	(printf@width+1)^(0+128),w
  3597  07BC  3A80               	xorlw	128
  3598  07BD  0020               	movlb	0	; select bank0
  3599  07BE  0260               	subwf	??_printf+2,w
  3600  07BF  1D03               	skipz
  3601  07C0  2FC5               	goto	u3815
  3602  07C1  0021               	movlb	1	; select bank1
  3603  07C2  0833               	movf	printf@width^(0+128),w
  3604  07C3  0020               	movlb	0	; select bank0
  3605  07C4  025E               	subwf	??_printf,w
  3606  07C5                     u3815:	
  3607  07C5  1803               	skipnc
  3608  07C6  2FD6               	goto	l2595
  3609                           
  3610                           ;doprnt.c: 1382: width -= c;
  3611  07C7  0021               	movlb	1	; select bank1
  3612  07C8  083A               	movf	printf@c^(0+128),w
  3613  07C9  0020               	movlb	0	; select bank0
  3614  07CA  00DE               	movwf	??_printf
  3615  07CB  01DF               	clrf	??_printf+1
  3616  07CC  1BDE               	btfsc	??_printf,7
  3617  07CD  03DF               	decf	??_printf+1,f
  3618  07CE  085E               	movf	??_printf,w
  3619  07CF  0021               	movlb	1	; select bank1
  3620  07D0  02B3               	subwf	printf@width^(0+128),f
  3621  07D1  0020               	movlb	0	; select bank0
  3622  07D2  085F               	movf	??_printf+1,w
  3623  07D3  0021               	movlb	1	; select bank1
  3624  07D4  3BB4               	subwfb	(printf@width+1)^(0+128),f
  3625  07D5  2FD9               	goto	l2597
  3626  07D6                     l2595:	
  3627                           
  3628                           ;doprnt.c: 1383: else
  3629                           ;doprnt.c: 1384: width = 0;
  3630  07D6  0021               	movlb	1	; select bank1
  3631  07D7  01B3               	clrf	printf@width^(0+128)
  3632  07D8  01B4               	clrf	(printf@width+1)^(0+128)
  3633  07D9                     l2597:	
  3634                           
  3635                           ;doprnt.c: 1422: {
  3636                           ;doprnt.c: 1424: if(width
  3637                           ;doprnt.c: 1428: )
  3638  07D9  0833               	movf	printf@width^(0+128),w
  3639  07DA  0434               	iorwf	(printf@width+1)^(0+128),w
  3640  07DB  1903               	btfsc	3,2
  3641  07DC  2FEA               	goto	l2603
  3642  07DD                     l2599:	
  3643                           ;doprnt.c: 1429: do
  3644                           
  3645                           
  3646                           ;doprnt.c: 1430: (putch(' ') );
  3647  07DD  3020               	movlw	32
  3648  07DE  3196  262F  3181   	fcall	_putch
  3649                           
  3650                           ;doprnt.c: 1431: while(--width);
  3651  07E1  30FF               	movlw	255
  3652  07E2  0021               	movlb	1	; select bank1
  3653  07E3  07B3               	addwf	printf@width^(0+128),f
  3654  07E4  30FF               	movlw	255
  3655  07E5  3DB4               	addwfc	(printf@width+1)^(0+128),f
  3656  07E6  0833               	movf	printf@width^(0+128),w
  3657  07E7  0434               	iorwf	(printf@width+1)^(0+128),w
  3658  07E8  1D03               	btfss	3,2
  3659  07E9  2FDD               	goto	l2599
  3660  07EA                     l2603:	
  3661                           
  3662                           ;doprnt.c: 1438: if(flag & 0x03)
  3663  07EA  3003               	movlw	3
  3664  07EB  052B               	andwf	printf@flag^(0+128),w
  3665  07EC  0020               	movlb	0	; select bank0
  3666  07ED  00DE               	movwf	??_printf
  3667  07EE  3000               	movlw	0
  3668  07EF  0021               	movlb	1	; select bank1
  3669  07F0  052C               	andwf	(printf@flag+1)^(0+128),w
  3670  07F1  0020               	movlb	0	; select bank0
  3671  07F2  00DF               	movwf	??_printf+1
  3672  07F3  085E               	movf	??_printf,w
  3673  07F4  045F               	iorwf	??_printf+1,w
  3674  07F5  1903               	btfsc	3,2
  3675  07F6  29EF               	goto	l2607
  3676                           
  3677                           ;doprnt.c: 1439: (putch('-') );
  3678  07F7  302D               	movlw	45
  3679  07F8  3196  262F  3181   	fcall	_putch
  3680  07FB  29EF               	goto	l2607
  3681  07FC                     l260:	
  3682                           ;doprnt.c: 1540: return 0;
  3683                           ;	Return value of _printf is never used
  3684                           
  3685                           ;doprnt.c: 1469: }
  3686                           ;doprnt.c: 1533: }
  3687                           ;doprnt.c: 1535: alldone:
  3688                           
  3689  07FC  0008               	return
  3690  07FD                     __end_of_printf:	
  3691                           
  3692                           	psect	text2
  3693  0DBC                     __ptext2:	
  3694 ;; *************** function _scale *****************
  3695 ;; Defined at:
  3696 ;;		line 425 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  scl             1    wreg     char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  scl             1   32[BANK0 ] char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  3   24[BANK0 ] char 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3710 ;;      Params:         0       3       0       0       0       0       0       0
  3711 ;;      Locals:         0       4       0       0       0       0       0       0
  3712 ;;      Temps:          0       2       0       0       0       0       0       0
  3713 ;;      Totals:         0       9       0       0       0       0       0       0
  3714 ;;Total ram usage:        9 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    2
  3717 ;; This function calls:
  3718 ;;		___awdiv
  3719 ;;		___awmod
  3720 ;;		___ftmul
  3721 ;;		___wmul
  3722 ;; This function is called by:
  3723 ;;		_printf
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _scale
  3729  0DBC                     _scale:	
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3733                           ;scale@scl stored from wreg
  3734  0DBC  0020               	movlb	0	; select bank0
  3735  0DBD  00C0               	movwf	scale@scl
  3736                           
  3737                           ;doprnt.c: 428: if(scl < 0) {
  3738  0DBE  1FC0               	btfss	scale@scl,7
  3739  0DBF  2EE1               	goto	l2083
  3740                           
  3741                           ;doprnt.c: 429: scl = -scl;
  3742  0DC0  09C0               	comf	scale@scl,f
  3743  0DC1  0AC0               	incf	scale@scl,f
  3744                           
  3745                           ;doprnt.c: 430: if(scl>=110)
  3746  0DC2  0840               	movf	scale@scl,w
  3747  0DC3  3A80               	xorlw	128
  3748  0DC4  3E12               	addlw	-238
  3749  0DC5  1C03               	skipc
  3750  0DC6  2E65               	goto	l2073
  3751                           
  3752                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3753  0DC7  300A               	movlw	10
  3754  0DC8  00F7               	movwf	___awdiv@divisor
  3755  0DC9  3000               	movlw	0
  3756  0DCA  00F8               	movwf	___awdiv@divisor+1
  3757  0DCB  0840               	movf	scale@scl,w
  3758  0DCC  00F2               	movwf	___awmod@dividend
  3759  0DCD  01F3               	clrf	___awmod@dividend+1
  3760  0DCE  1BF2               	btfsc	___awmod@dividend,7
  3761  0DCF  03F3               	decf	___awmod@dividend+1,f
  3762  0DD0  3064               	movlw	100
  3763  0DD1  00F0               	movwf	___awmod@divisor
  3764  0DD2  3000               	movlw	0
  3765  0DD3  00F1               	movwf	___awmod@divisor+1
  3766  0DD4  3197  2769  318D   	fcall	___awmod
  3767  0DD7  0871               	movf	?___awmod+1,w
  3768  0DD8  00FA               	movwf	___awdiv@dividend+1
  3769  0DD9  0870               	movf	?___awmod,w
  3770  0DDA  00F9               	movwf	___awdiv@dividend
  3771  0DDB  3188  2004  318D   	fcall	___awdiv
  3772  0DDE  0877               	movf	?___awdiv,w
  3773  0DDF  3E09               	addlw	9
  3774  0DE0  0020               	movlb	0	; select bank0
  3775  0DE1  00A4               	movwf	___wmul@multiplier
  3776  0DE2  3000               	movlw	0
  3777  0DE3  3D78               	addwfc	?___awdiv+1,w
  3778  0DE4  00A5               	movwf	___wmul@multiplier+1
  3779  0DE5  3003               	movlw	3
  3780  0DE6  00A6               	movwf	___wmul@multiplicand
  3781  0DE7  3000               	movlw	0
  3782  0DE8  00A7               	movwf	___wmul@multiplicand+1
  3783  0DE9  3180  2004  318D   	fcall	___wmul
  3784  0DEC  0020               	movlb	0	; select bank0
  3785  0DED  0825               	movf	?___wmul+1,w
  3786  0DEE  0085               	movwf	5
  3787  0DEF  0824               	movf	?___wmul,w
  3788  0DF0  0084               	movwf	4
  3789  0DF1  3028               	movlw	low (__npowers_| (0+32768))
  3790  0DF2  0784               	addwf	4,f
  3791  0DF3  3090               	movlw	high (__npowers_| (0+32768))
  3792  0DF4  3D85               	addwfc	5,f
  3793  0DF5  3F00               	moviw [0]fsr0
  3794  0DF6  00A8               	movwf	___ftmul@f1
  3795  0DF7  3F01               	moviw [1]fsr0
  3796  0DF8  00A9               	movwf	___ftmul@f1+1
  3797  0DF9  3F02               	moviw [2]fsr0
  3798  0DFA  00AA               	movwf	___ftmul@f1+2
  3799  0DFB  3064               	movlw	100
  3800  0DFC  00F7               	movwf	___awdiv@divisor
  3801  0DFD  3000               	movlw	0
  3802  0DFE  00F8               	movwf	___awdiv@divisor+1
  3803  0DFF  0840               	movf	scale@scl,w
  3804  0E00  00F9               	movwf	___awdiv@dividend
  3805  0E01  01FA               	clrf	___awdiv@dividend+1
  3806  0E02  1BF9               	btfsc	___awdiv@dividend,7
  3807  0E03  03FA               	decf	___awdiv@dividend+1,f
  3808  0E04  3188  2004  318D   	fcall	___awdiv
  3809  0E07  0877               	movf	?___awdiv,w
  3810  0E08  3E12               	addlw	18
  3811  0E09  0020               	movlb	0	; select bank0
  3812  0E0A  00A4               	movwf	___wmul@multiplier
  3813  0E0B  3000               	movlw	0
  3814  0E0C  3D78               	addwfc	?___awdiv+1,w
  3815  0E0D  00A5               	movwf	___wmul@multiplier+1
  3816  0E0E  3003               	movlw	3
  3817  0E0F  00A6               	movwf	___wmul@multiplicand
  3818  0E10  3000               	movlw	0
  3819  0E11  00A7               	movwf	___wmul@multiplicand+1
  3820  0E12  3180  2004  318D   	fcall	___wmul
  3821  0E15  0020               	movlb	0	; select bank0
  3822  0E16  0825               	movf	?___wmul+1,w
  3823  0E17  0085               	movwf	5
  3824  0E18  0824               	movf	?___wmul,w
  3825  0E19  0084               	movwf	4
  3826  0E1A  3028               	movlw	low (__npowers_| (0+32768))
  3827  0E1B  0784               	addwf	4,f
  3828  0E1C  3090               	movlw	high (__npowers_| (0+32768))
  3829  0E1D  3D85               	addwfc	5,f
  3830  0E1E  3F00               	moviw [0]fsr0
  3831  0E1F  00AB               	movwf	___ftmul@f2
  3832  0E20  3F01               	moviw [1]fsr0
  3833  0E21  00AC               	movwf	___ftmul@f2+1
  3834  0E22  3F02               	moviw [2]fsr0
  3835  0E23  00AD               	movwf	___ftmul@f2+2
  3836  0E24  3189  2186  318D   	fcall	___ftmul
  3837  0E27  0020               	movlb	0	; select bank0
  3838  0E28  0828               	movf	?___ftmul,w
  3839  0E29  00BD               	movwf	_scale$754
  3840  0E2A  0829               	movf	?___ftmul+1,w
  3841  0E2B  00BE               	movwf	_scale$754+1
  3842  0E2C  082A               	movf	?___ftmul+2,w
  3843  0E2D  00BF               	movwf	_scale$754+2
  3844                           
  3845                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3846  0E2E  0840               	movf	scale@scl,w
  3847  0E2F  00F2               	movwf	___awmod@dividend
  3848  0E30  01F3               	clrf	___awmod@dividend+1
  3849  0E31  1BF2               	btfsc	___awmod@dividend,7
  3850  0E32  03F3               	decf	___awmod@dividend+1,f
  3851  0E33  300A               	movlw	10
  3852  0E34  00F0               	movwf	___awmod@divisor
  3853  0E35  3000               	movlw	0
  3854  0E36  00F1               	movwf	___awmod@divisor+1
  3855  0E37  3197  2769  318D   	fcall	___awmod
  3856  0E3A  0871               	movf	?___awmod+1,w
  3857  0E3B  0020               	movlb	0	; select bank0
  3858  0E3C  00A5               	movwf	___wmul@multiplier+1
  3859  0E3D  0870               	movf	?___awmod,w
  3860  0E3E  00A4               	movwf	___wmul@multiplier
  3861  0E3F  3003               	movlw	3
  3862  0E40  00A6               	movwf	___wmul@multiplicand
  3863  0E41  3000               	movlw	0
  3864  0E42  00A7               	movwf	___wmul@multiplicand+1
  3865  0E43  3180  2004  318D   	fcall	___wmul
  3866  0E46  0020               	movlb	0	; select bank0
  3867  0E47  0825               	movf	?___wmul+1,w
  3868  0E48  0085               	movwf	5
  3869  0E49  0824               	movf	?___wmul,w
  3870  0E4A  0084               	movwf	4
  3871  0E4B  3028               	movlw	low (__npowers_| (0+32768))
  3872  0E4C  0784               	addwf	4,f
  3873  0E4D  3090               	movlw	high (__npowers_| (0+32768))
  3874  0E4E  3D85               	addwfc	5,f
  3875  0E4F  3F00               	moviw [0]fsr0
  3876  0E50  00A8               	movwf	___ftmul@f1
  3877  0E51  3F01               	moviw [1]fsr0
  3878  0E52  00A9               	movwf	___ftmul@f1+1
  3879  0E53  3F02               	moviw [2]fsr0
  3880  0E54  00AA               	movwf	___ftmul@f1+2
  3881  0E55  083D               	movf	_scale$754,w
  3882  0E56  00AB               	movwf	___ftmul@f2
  3883  0E57  083E               	movf	_scale$754+1,w
  3884  0E58  00AC               	movwf	___ftmul@f2+1
  3885  0E59  083F               	movf	_scale$754+2,w
  3886  0E5A  00AD               	movwf	___ftmul@f2+2
  3887  0E5B  3189  2186         	fcall	___ftmul
  3888  0E5D  0020               	movlb	0	; select bank0
  3889  0E5E  0828               	movf	?___ftmul,w
  3890  0E5F  00B8               	movwf	?_scale
  3891  0E60  0829               	movf	?___ftmul+1,w
  3892  0E61  00B9               	movwf	?_scale+1
  3893  0E62  082A               	movf	?___ftmul+2,w
  3894  0E63  00BA               	movwf	?_scale+2
  3895  0E64  0008               	return
  3896  0E65                     l2073:	
  3897                           
  3898                           ;doprnt.c: 432: else if(scl > 10)
  3899  0E65  0840               	movf	scale@scl,w
  3900  0E66  3A80               	xorlw	128
  3901  0E67  3E75               	addlw	-139
  3902  0E68  1C03               	skipc
  3903  0E69  2EC4               	goto	l2079
  3904                           
  3905                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3906  0E6A  0840               	movf	scale@scl,w
  3907  0E6B  00F2               	movwf	___awmod@dividend
  3908  0E6C  01F3               	clrf	___awmod@dividend+1
  3909  0E6D  1BF2               	btfsc	___awmod@dividend,7
  3910  0E6E  03F3               	decf	___awmod@dividend+1,f
  3911  0E6F  300A               	movlw	10
  3912  0E70  00F0               	movwf	___awmod@divisor
  3913  0E71  3000               	movlw	0
  3914  0E72  00F1               	movwf	___awmod@divisor+1
  3915  0E73  3197  2769  318D   	fcall	___awmod
  3916  0E76  0871               	movf	?___awmod+1,w
  3917  0E77  0020               	movlb	0	; select bank0
  3918  0E78  00A5               	movwf	___wmul@multiplier+1
  3919  0E79  0870               	movf	?___awmod,w
  3920  0E7A  00A4               	movwf	___wmul@multiplier
  3921  0E7B  3003               	movlw	3
  3922  0E7C  00A6               	movwf	___wmul@multiplicand
  3923  0E7D  3000               	movlw	0
  3924  0E7E  00A7               	movwf	___wmul@multiplicand+1
  3925  0E7F  3180  2004  318D   	fcall	___wmul
  3926  0E82  0020               	movlb	0	; select bank0
  3927  0E83  0825               	movf	?___wmul+1,w
  3928  0E84  0085               	movwf	5
  3929  0E85  0824               	movf	?___wmul,w
  3930  0E86  0084               	movwf	4
  3931  0E87  3028               	movlw	low (__npowers_| (0+32768))
  3932  0E88  0784               	addwf	4,f
  3933  0E89  3090               	movlw	high (__npowers_| (0+32768))
  3934  0E8A  3D85               	addwfc	5,f
  3935  0E8B  3F00               	moviw [0]fsr0
  3936  0E8C  00A8               	movwf	___ftmul@f1
  3937  0E8D  3F01               	moviw [1]fsr0
  3938  0E8E  00A9               	movwf	___ftmul@f1+1
  3939  0E8F  3F02               	moviw [2]fsr0
  3940  0E90  00AA               	movwf	___ftmul@f1+2
  3941  0E91  300A               	movlw	10
  3942  0E92  00F7               	movwf	___awdiv@divisor
  3943  0E93  3000               	movlw	0
  3944  0E94  00F8               	movwf	___awdiv@divisor+1
  3945  0E95  0840               	movf	scale@scl,w
  3946  0E96  00F9               	movwf	___awdiv@dividend
  3947  0E97  01FA               	clrf	___awdiv@dividend+1
  3948  0E98  1BF9               	btfsc	___awdiv@dividend,7
  3949  0E99  03FA               	decf	___awdiv@dividend+1,f
  3950  0E9A  3188  2004  318D   	fcall	___awdiv
  3951  0E9D  0877               	movf	?___awdiv,w
  3952  0E9E  3E09               	addlw	9
  3953  0E9F  0020               	movlb	0	; select bank0
  3954  0EA0  00A4               	movwf	___wmul@multiplier
  3955  0EA1  3000               	movlw	0
  3956  0EA2  3D78               	addwfc	?___awdiv+1,w
  3957  0EA3  00A5               	movwf	___wmul@multiplier+1
  3958  0EA4  3003               	movlw	3
  3959  0EA5  00A6               	movwf	___wmul@multiplicand
  3960  0EA6  3000               	movlw	0
  3961  0EA7  00A7               	movwf	___wmul@multiplicand+1
  3962  0EA8  3180  2004  318D   	fcall	___wmul
  3963  0EAB  0020               	movlb	0	; select bank0
  3964  0EAC  0825               	movf	?___wmul+1,w
  3965  0EAD  0085               	movwf	5
  3966  0EAE  0824               	movf	?___wmul,w
  3967  0EAF  0084               	movwf	4
  3968  0EB0  3028               	movlw	low (__npowers_| (0+32768))
  3969  0EB1  0784               	addwf	4,f
  3970  0EB2  3090               	movlw	high (__npowers_| (0+32768))
  3971  0EB3  3D85               	addwfc	5,f
  3972  0EB4  3F00               	moviw [0]fsr0
  3973  0EB5  00AB               	movwf	___ftmul@f2
  3974  0EB6  3F01               	moviw [1]fsr0
  3975  0EB7  00AC               	movwf	___ftmul@f2+1
  3976  0EB8  3F02               	moviw [2]fsr0
  3977  0EB9  00AD               	movwf	___ftmul@f2+2
  3978  0EBA  3189  2186         	fcall	___ftmul
  3979  0EBC  0020               	movlb	0	; select bank0
  3980  0EBD  0828               	movf	?___ftmul,w
  3981  0EBE  00B8               	movwf	?_scale
  3982  0EBF  0829               	movf	?___ftmul+1,w
  3983  0EC0  00B9               	movwf	?_scale+1
  3984  0EC1  082A               	movf	?___ftmul+2,w
  3985  0EC2  00BA               	movwf	?_scale+2
  3986  0EC3  0008               	return
  3987  0EC4                     l2079:	
  3988                           
  3989                           ;doprnt.c: 434: return _npowers_[scl];
  3990  0EC4  0840               	movf	scale@scl,w
  3991  0EC5  00BB               	movwf	??_scale
  3992  0EC6  01BC               	clrf	??_scale+1
  3993  0EC7  083B               	movf	??_scale,w
  3994  0EC8  00A4               	movwf	___wmul@multiplier
  3995  0EC9  083C               	movf	??_scale+1,w
  3996  0ECA  00A5               	movwf	___wmul@multiplier+1
  3997  0ECB  3003               	movlw	3
  3998  0ECC  00A6               	movwf	___wmul@multiplicand
  3999  0ECD  3000               	movlw	0
  4000  0ECE  00A7               	movwf	___wmul@multiplicand+1
  4001  0ECF  3180  2004         	fcall	___wmul
  4002  0ED1  0020               	movlb	0	; select bank0
  4003  0ED2  0825               	movf	?___wmul+1,w
  4004  0ED3  0085               	movwf	5
  4005  0ED4  0824               	movf	?___wmul,w
  4006  0ED5  0084               	movwf	4
  4007  0ED6  3028               	movlw	low (__npowers_| (0+32768))
  4008  0ED7  0784               	addwf	4,f
  4009  0ED8  3090               	movlw	high (__npowers_| (0+32768))
  4010  0ED9  3D85               	addwfc	5,f
  4011  0EDA  3F00               	moviw [0]fsr0
  4012  0EDB  00B8               	movwf	?_scale
  4013  0EDC  3F01               	moviw [1]fsr0
  4014  0EDD  00B9               	movwf	?_scale+1
  4015  0EDE  3F02               	moviw [2]fsr0
  4016  0EDF  00BA               	movwf	?_scale+2
  4017  0EE0  0008               	return
  4018  0EE1                     l2083:	
  4019                           
  4020                           ;doprnt.c: 435: }
  4021                           ;doprnt.c: 436: if(scl>=110)
  4022  0EE1  0840               	movf	scale@scl,w
  4023  0EE2  3A80               	xorlw	128
  4024  0EE3  3E12               	addlw	-238
  4025  0EE4  1C03               	skipc
  4026  0EE5  2F84               	goto	l2091
  4027                           
  4028                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4029  0EE6  300A               	movlw	10
  4030  0EE7  00F7               	movwf	___awdiv@divisor
  4031  0EE8  3000               	movlw	0
  4032  0EE9  00F8               	movwf	___awdiv@divisor+1
  4033  0EEA  0840               	movf	scale@scl,w
  4034  0EEB  00F2               	movwf	___awmod@dividend
  4035  0EEC  01F3               	clrf	___awmod@dividend+1
  4036  0EED  1BF2               	btfsc	___awmod@dividend,7
  4037  0EEE  03F3               	decf	___awmod@dividend+1,f
  4038  0EEF  3064               	movlw	100
  4039  0EF0  00F0               	movwf	___awmod@divisor
  4040  0EF1  3000               	movlw	0
  4041  0EF2  00F1               	movwf	___awmod@divisor+1
  4042  0EF3  3197  2769  318D   	fcall	___awmod
  4043  0EF6  0871               	movf	?___awmod+1,w
  4044  0EF7  00FA               	movwf	___awdiv@dividend+1
  4045  0EF8  0870               	movf	?___awmod,w
  4046  0EF9  00F9               	movwf	___awdiv@dividend
  4047  0EFA  3188  2004  318D   	fcall	___awdiv
  4048  0EFD  0877               	movf	?___awdiv,w
  4049  0EFE  3E09               	addlw	9
  4050  0EFF  0020               	movlb	0	; select bank0
  4051  0F00  00A4               	movwf	___wmul@multiplier
  4052  0F01  3000               	movlw	0
  4053  0F02  3D78               	addwfc	?___awdiv+1,w
  4054  0F03  00A5               	movwf	___wmul@multiplier+1
  4055  0F04  3003               	movlw	3
  4056  0F05  00A6               	movwf	___wmul@multiplicand
  4057  0F06  3000               	movlw	0
  4058  0F07  00A7               	movwf	___wmul@multiplicand+1
  4059  0F08  3180  2004  318D   	fcall	___wmul
  4060  0F0B  0020               	movlb	0	; select bank0
  4061  0F0C  0825               	movf	?___wmul+1,w
  4062  0F0D  0085               	movwf	5
  4063  0F0E  0824               	movf	?___wmul,w
  4064  0F0F  0084               	movwf	4
  4065  0F10  304F               	movlw	low (__powers_| (0+32768))
  4066  0F11  0784               	addwf	4,f
  4067  0F12  3090               	movlw	high (__powers_| (0+32768))
  4068  0F13  3D85               	addwfc	5,f
  4069  0F14  3F00               	moviw [0]fsr0
  4070  0F15  00A8               	movwf	___ftmul@f1
  4071  0F16  3F01               	moviw [1]fsr0
  4072  0F17  00A9               	movwf	___ftmul@f1+1
  4073  0F18  3F02               	moviw [2]fsr0
  4074  0F19  00AA               	movwf	___ftmul@f1+2
  4075  0F1A  3064               	movlw	100
  4076  0F1B  00F7               	movwf	___awdiv@divisor
  4077  0F1C  3000               	movlw	0
  4078  0F1D  00F8               	movwf	___awdiv@divisor+1
  4079  0F1E  0840               	movf	scale@scl,w
  4080  0F1F  00F9               	movwf	___awdiv@dividend
  4081  0F20  01FA               	clrf	___awdiv@dividend+1
  4082  0F21  1BF9               	btfsc	___awdiv@dividend,7
  4083  0F22  03FA               	decf	___awdiv@dividend+1,f
  4084  0F23  3188  2004  318D   	fcall	___awdiv
  4085  0F26  0877               	movf	?___awdiv,w
  4086  0F27  3E12               	addlw	18
  4087  0F28  0020               	movlb	0	; select bank0
  4088  0F29  00A4               	movwf	___wmul@multiplier
  4089  0F2A  3000               	movlw	0
  4090  0F2B  3D78               	addwfc	?___awdiv+1,w
  4091  0F2C  00A5               	movwf	___wmul@multiplier+1
  4092  0F2D  3003               	movlw	3
  4093  0F2E  00A6               	movwf	___wmul@multiplicand
  4094  0F2F  3000               	movlw	0
  4095  0F30  00A7               	movwf	___wmul@multiplicand+1
  4096  0F31  3180  2004  318D   	fcall	___wmul
  4097  0F34  0020               	movlb	0	; select bank0
  4098  0F35  0825               	movf	?___wmul+1,w
  4099  0F36  0085               	movwf	5
  4100  0F37  0824               	movf	?___wmul,w
  4101  0F38  0084               	movwf	4
  4102  0F39  304F               	movlw	low (__powers_| (0+32768))
  4103  0F3A  0784               	addwf	4,f
  4104  0F3B  3090               	movlw	high (__powers_| (0+32768))
  4105  0F3C  3D85               	addwfc	5,f
  4106  0F3D  3F00               	moviw [0]fsr0
  4107  0F3E  00AB               	movwf	___ftmul@f2
  4108  0F3F  3F01               	moviw [1]fsr0
  4109  0F40  00AC               	movwf	___ftmul@f2+1
  4110  0F41  3F02               	moviw [2]fsr0
  4111  0F42  00AD               	movwf	___ftmul@f2+2
  4112  0F43  3189  2186  318D   	fcall	___ftmul
  4113  0F46  0020               	movlb	0	; select bank0
  4114  0F47  0828               	movf	?___ftmul,w
  4115  0F48  00BD               	movwf	_scale$754
  4116  0F49  0829               	movf	?___ftmul+1,w
  4117  0F4A  00BE               	movwf	_scale$754+1
  4118  0F4B  082A               	movf	?___ftmul+2,w
  4119  0F4C  00BF               	movwf	_scale$754+2
  4120                           
  4121                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4122  0F4D  0840               	movf	scale@scl,w
  4123  0F4E  00F2               	movwf	___awmod@dividend
  4124  0F4F  01F3               	clrf	___awmod@dividend+1
  4125  0F50  1BF2               	btfsc	___awmod@dividend,7
  4126  0F51  03F3               	decf	___awmod@dividend+1,f
  4127  0F52  300A               	movlw	10
  4128  0F53  00F0               	movwf	___awmod@divisor
  4129  0F54  3000               	movlw	0
  4130  0F55  00F1               	movwf	___awmod@divisor+1
  4131  0F56  3197  2769  318D   	fcall	___awmod
  4132  0F59  0871               	movf	?___awmod+1,w
  4133  0F5A  0020               	movlb	0	; select bank0
  4134  0F5B  00A5               	movwf	___wmul@multiplier+1
  4135  0F5C  0870               	movf	?___awmod,w
  4136  0F5D  00A4               	movwf	___wmul@multiplier
  4137  0F5E  3003               	movlw	3
  4138  0F5F  00A6               	movwf	___wmul@multiplicand
  4139  0F60  3000               	movlw	0
  4140  0F61  00A7               	movwf	___wmul@multiplicand+1
  4141  0F62  3180  2004  318D   	fcall	___wmul
  4142  0F65  0020               	movlb	0	; select bank0
  4143  0F66  0825               	movf	?___wmul+1,w
  4144  0F67  0085               	movwf	5
  4145  0F68  0824               	movf	?___wmul,w
  4146  0F69  0084               	movwf	4
  4147  0F6A  304F               	movlw	low (__powers_| (0+32768))
  4148  0F6B  0784               	addwf	4,f
  4149  0F6C  3090               	movlw	high (__powers_| (0+32768))
  4150  0F6D  3D85               	addwfc	5,f
  4151  0F6E  3F00               	moviw [0]fsr0
  4152  0F6F  00A8               	movwf	___ftmul@f1
  4153  0F70  3F01               	moviw [1]fsr0
  4154  0F71  00A9               	movwf	___ftmul@f1+1
  4155  0F72  3F02               	moviw [2]fsr0
  4156  0F73  00AA               	movwf	___ftmul@f1+2
  4157  0F74  083D               	movf	_scale$754,w
  4158  0F75  00AB               	movwf	___ftmul@f2
  4159  0F76  083E               	movf	_scale$754+1,w
  4160  0F77  00AC               	movwf	___ftmul@f2+1
  4161  0F78  083F               	movf	_scale$754+2,w
  4162  0F79  00AD               	movwf	___ftmul@f2+2
  4163  0F7A  3189  2186         	fcall	___ftmul
  4164  0F7C  0020               	movlb	0	; select bank0
  4165  0F7D  0828               	movf	?___ftmul,w
  4166  0F7E  00B8               	movwf	?_scale
  4167  0F7F  0829               	movf	?___ftmul+1,w
  4168  0F80  00B9               	movwf	?_scale+1
  4169  0F81  082A               	movf	?___ftmul+2,w
  4170  0F82  00BA               	movwf	?_scale+2
  4171  0F83  0008               	return
  4172  0F84                     l2091:	
  4173                           
  4174                           ;doprnt.c: 438: else if(scl > 10)
  4175  0F84  0840               	movf	scale@scl,w
  4176  0F85  3A80               	xorlw	128
  4177  0F86  3E75               	addlw	-139
  4178  0F87  1C03               	skipc
  4179  0F88  2FE3               	goto	l2097
  4180                           
  4181                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4182  0F89  0840               	movf	scale@scl,w
  4183  0F8A  00F2               	movwf	___awmod@dividend
  4184  0F8B  01F3               	clrf	___awmod@dividend+1
  4185  0F8C  1BF2               	btfsc	___awmod@dividend,7
  4186  0F8D  03F3               	decf	___awmod@dividend+1,f
  4187  0F8E  300A               	movlw	10
  4188  0F8F  00F0               	movwf	___awmod@divisor
  4189  0F90  3000               	movlw	0
  4190  0F91  00F1               	movwf	___awmod@divisor+1
  4191  0F92  3197  2769  318D   	fcall	___awmod
  4192  0F95  0871               	movf	?___awmod+1,w
  4193  0F96  0020               	movlb	0	; select bank0
  4194  0F97  00A5               	movwf	___wmul@multiplier+1
  4195  0F98  0870               	movf	?___awmod,w
  4196  0F99  00A4               	movwf	___wmul@multiplier
  4197  0F9A  3003               	movlw	3
  4198  0F9B  00A6               	movwf	___wmul@multiplicand
  4199  0F9C  3000               	movlw	0
  4200  0F9D  00A7               	movwf	___wmul@multiplicand+1
  4201  0F9E  3180  2004  318D   	fcall	___wmul
  4202  0FA1  0020               	movlb	0	; select bank0
  4203  0FA2  0825               	movf	?___wmul+1,w
  4204  0FA3  0085               	movwf	5
  4205  0FA4  0824               	movf	?___wmul,w
  4206  0FA5  0084               	movwf	4
  4207  0FA6  304F               	movlw	low (__powers_| (0+32768))
  4208  0FA7  0784               	addwf	4,f
  4209  0FA8  3090               	movlw	high (__powers_| (0+32768))
  4210  0FA9  3D85               	addwfc	5,f
  4211  0FAA  3F00               	moviw [0]fsr0
  4212  0FAB  00A8               	movwf	___ftmul@f1
  4213  0FAC  3F01               	moviw [1]fsr0
  4214  0FAD  00A9               	movwf	___ftmul@f1+1
  4215  0FAE  3F02               	moviw [2]fsr0
  4216  0FAF  00AA               	movwf	___ftmul@f1+2
  4217  0FB0  300A               	movlw	10
  4218  0FB1  00F7               	movwf	___awdiv@divisor
  4219  0FB2  3000               	movlw	0
  4220  0FB3  00F8               	movwf	___awdiv@divisor+1
  4221  0FB4  0840               	movf	scale@scl,w
  4222  0FB5  00F9               	movwf	___awdiv@dividend
  4223  0FB6  01FA               	clrf	___awdiv@dividend+1
  4224  0FB7  1BF9               	btfsc	___awdiv@dividend,7
  4225  0FB8  03FA               	decf	___awdiv@dividend+1,f
  4226  0FB9  3188  2004  318D   	fcall	___awdiv
  4227  0FBC  0877               	movf	?___awdiv,w
  4228  0FBD  3E09               	addlw	9
  4229  0FBE  0020               	movlb	0	; select bank0
  4230  0FBF  00A4               	movwf	___wmul@multiplier
  4231  0FC0  3000               	movlw	0
  4232  0FC1  3D78               	addwfc	?___awdiv+1,w
  4233  0FC2  00A5               	movwf	___wmul@multiplier+1
  4234  0FC3  3003               	movlw	3
  4235  0FC4  00A6               	movwf	___wmul@multiplicand
  4236  0FC5  3000               	movlw	0
  4237  0FC6  00A7               	movwf	___wmul@multiplicand+1
  4238  0FC7  3180  2004  318D   	fcall	___wmul
  4239  0FCA  0020               	movlb	0	; select bank0
  4240  0FCB  0825               	movf	?___wmul+1,w
  4241  0FCC  0085               	movwf	5
  4242  0FCD  0824               	movf	?___wmul,w
  4243  0FCE  0084               	movwf	4
  4244  0FCF  304F               	movlw	low (__powers_| (0+32768))
  4245  0FD0  0784               	addwf	4,f
  4246  0FD1  3090               	movlw	high (__powers_| (0+32768))
  4247  0FD2  3D85               	addwfc	5,f
  4248  0FD3  3F00               	moviw [0]fsr0
  4249  0FD4  00AB               	movwf	___ftmul@f2
  4250  0FD5  3F01               	moviw [1]fsr0
  4251  0FD6  00AC               	movwf	___ftmul@f2+1
  4252  0FD7  3F02               	moviw [2]fsr0
  4253  0FD8  00AD               	movwf	___ftmul@f2+2
  4254  0FD9  3189  2186         	fcall	___ftmul
  4255  0FDB  0020               	movlb	0	; select bank0
  4256  0FDC  0828               	movf	?___ftmul,w
  4257  0FDD  00B8               	movwf	?_scale
  4258  0FDE  0829               	movf	?___ftmul+1,w
  4259  0FDF  00B9               	movwf	?_scale+1
  4260  0FE0  082A               	movf	?___ftmul+2,w
  4261  0FE1  00BA               	movwf	?_scale+2
  4262  0FE2  0008               	return
  4263  0FE3                     l2097:	
  4264                           
  4265                           ;doprnt.c: 440: return _powers_[scl];
  4266  0FE3  0840               	movf	scale@scl,w
  4267  0FE4  00BB               	movwf	??_scale
  4268  0FE5  01BC               	clrf	??_scale+1
  4269  0FE6  083B               	movf	??_scale,w
  4270  0FE7  00A4               	movwf	___wmul@multiplier
  4271  0FE8  083C               	movf	??_scale+1,w
  4272  0FE9  00A5               	movwf	___wmul@multiplier+1
  4273  0FEA  3003               	movlw	3
  4274  0FEB  00A6               	movwf	___wmul@multiplicand
  4275  0FEC  3000               	movlw	0
  4276  0FED  00A7               	movwf	___wmul@multiplicand+1
  4277  0FEE  3180  2004         	fcall	___wmul
  4278  0FF0  0020               	movlb	0	; select bank0
  4279  0FF1  0825               	movf	?___wmul+1,w
  4280  0FF2  0085               	movwf	5
  4281  0FF3  0824               	movf	?___wmul,w
  4282  0FF4  0084               	movwf	4
  4283  0FF5  304F               	movlw	low (__powers_| (0+32768))
  4284  0FF6  0784               	addwf	4,f
  4285  0FF7  3090               	movlw	high (__powers_| (0+32768))
  4286  0FF8  3D85               	addwfc	5,f
  4287  0FF9  3F00               	moviw [0]fsr0
  4288  0FFA  00B8               	movwf	?_scale
  4289  0FFB  3F01               	moviw [1]fsr0
  4290  0FFC  00B9               	movwf	?_scale+1
  4291  0FFD  3F02               	moviw [2]fsr0
  4292  0FFE  00BA               	movwf	?_scale+2
  4293  0FFF  0008               	return
  4294  1000                     __end_of_scale:	
  4295                           
  4296                           	psect	text3
  4297  162F                     __ptext3:	
  4298 ;; *************** function _putch *****************
  4299 ;; Defined at:
  4300 ;;		line 111 in file "mcc_generated_files/eusart.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  txData          1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  txData          1    1[COMMON] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4314 ;;      Params:         0       0       0       0       0       0       0       0
  4315 ;;      Locals:         1       0       0       0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0
  4317 ;;      Totals:         1       0       0       0       0       0       0       0
  4318 ;;Total ram usage:        1 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    1
  4321 ;; This function calls:
  4322 ;;		_EUSART_Write
  4323 ;; This function is called by:
  4324 ;;		_printf
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           
  4329                           ;psect for function _putch
  4330  162F                     _putch:	
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4334                           ;putch@txData stored from wreg
  4335  162F  00F1               	movwf	putch@txData
  4336                           
  4337                           ;eusart.c: 113: EUSART_Write(txData);
  4338  1630  0871               	movf	putch@txData,w
  4339  1631  3196  2642         	fcall	_EUSART_Write
  4340  1633  0008               	return
  4341  1634                     __end_of_putch:	
  4342                           
  4343                           	psect	text4
  4344  1642                     __ptext4:	
  4345 ;; *************** function _EUSART_Write *****************
  4346 ;; Defined at:
  4347 ;;		line 97 in file "mcc_generated_files/eusart.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  txData          1    wreg     unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  txData          1    0[COMMON] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4361 ;;      Params:         0       0       0       0       0       0       0       0
  4362 ;;      Locals:         1       0       0       0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0
  4364 ;;      Totals:         1       0       0       0       0       0       0       0
  4365 ;;Total ram usage:        1 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_putch
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function _EUSART_Write
  4376  1642                     _EUSART_Write:	
  4377                           
  4378                           ;incstack = 0
  4379                           ; Regs used in _EUSART_Write: [wreg]
  4380                           ;EUSART_Write@txData stored from wreg
  4381  1642  00F0               	movwf	EUSART_Write@txData
  4382  1643                     l71:	
  4383                           ;eusart.c: 100: {
  4384                           
  4385                           ;eusart.c: 99: while(0 == PIR1bits.TXIF)
  4386                           
  4387  1643  0020               	movlb	0	; select bank0
  4388  1644  1E11               	btfss	17,4	;volatile
  4389  1645  2E43               	goto	l71
  4390                           
  4391                           ;eusart.c: 101: }
  4392                           ;eusart.c: 103: TXREG = txData;
  4393  1646  0870               	movf	EUSART_Write@txData,w
  4394  1647  0023               	movlb	3	; select bank3
  4395  1648  009A               	movwf	26	;volatile
  4396  1649  0008               	return
  4397  164A                     __end_of_EUSART_Write:	
  4398                           
  4399                           	psect	text5
  4400  165E                     __ptext5:	
  4401 ;; *************** function _isdigit *****************
  4402 ;; Defined at:
  4403 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/isdigit.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  c               1    wreg     unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  c               1    1[COMMON] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;		None               void
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4417 ;;      Params:         0       0       0       0       0       0       0       0
  4418 ;;      Locals:         2       0       0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0
  4420 ;;      Totals:         2       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        2 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_printf
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _isdigit
  4432  165E                     _isdigit:	
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4436                           ;isdigit@c stored from wreg
  4437  165E  00F1               	movwf	isdigit@c
  4438  165F  01F0               	clrf	_isdigit$537
  4439  1660  303A               	movlw	58
  4440  1661  0271               	subwf	isdigit@c,w
  4441  1662  1803               	skipnc
  4442  1663  2E6A               	goto	l2109
  4443  1664  3030               	movlw	48
  4444  1665  0271               	subwf	isdigit@c,w
  4445  1666  1C03               	skipc
  4446  1667  2E6A               	goto	l2109
  4447  1668  01F0               	clrf	_isdigit$537
  4448  1669  0AF0               	incf	_isdigit$537,f
  4449  166A                     l2109:	
  4450  166A  0C70               	rrf	_isdigit$537,w
  4451  166B  0008               	return
  4452  166C                     __end_of_isdigit:	
  4453                           
  4454                           	psect	text6
  4455  0084                     __ptext6:	
  4456 ;; *************** function _fround *****************
  4457 ;; Defined at:
  4458 ;;		line 409 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  prec            1    wreg     unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  prec            1   37[BANK0 ] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  3   24[BANK0 ] unsigned char 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4472 ;;      Params:         0       3       0       0       0       0       0       0
  4473 ;;      Locals:         0       7       0       0       0       0       0       0
  4474 ;;      Temps:          0       4       0       0       0       0       0       0
  4475 ;;      Totals:         0      14       0       0       0       0       0       0
  4476 ;;Total ram usage:       14 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    2
  4479 ;; This function calls:
  4480 ;;		___awdiv
  4481 ;;		___awmod
  4482 ;;		___ftmul
  4483 ;;		___wmul
  4484 ;; This function is called by:
  4485 ;;		_printf
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function _fround
  4491  0084                     _fround:	
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4495                           ;fround@prec stored from wreg
  4496  0084  0020               	movlb	0	; select bank0
  4497  0085  00C5               	movwf	fround@prec
  4498                           
  4499                           ;doprnt.c: 413: if(prec>=110)
  4500  0086  306E               	movlw	110
  4501  0087  0245               	subwf	fround@prec,w
  4502  0088  1C03               	skipc
  4503  0089  2944               	goto	l2049
  4504                           
  4505                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4506  008A  300A               	movlw	10
  4507  008B  00F7               	movwf	___awdiv@divisor
  4508  008C  3000               	movlw	0
  4509  008D  00F8               	movwf	___awdiv@divisor+1
  4510  008E  0845               	movf	fround@prec,w
  4511  008F  00BB               	movwf	??_fround
  4512  0090  01BC               	clrf	??_fround+1
  4513  0091  083B               	movf	??_fround,w
  4514  0092  00F2               	movwf	___awmod@dividend
  4515  0093  083C               	movf	??_fround+1,w
  4516  0094  00F3               	movwf	___awmod@dividend+1
  4517  0095  3064               	movlw	100
  4518  0096  00F0               	movwf	___awmod@divisor
  4519  0097  3000               	movlw	0
  4520  0098  00F1               	movwf	___awmod@divisor+1
  4521  0099  3197  2769  3180   	fcall	___awmod
  4522  009C  0871               	movf	?___awmod+1,w
  4523  009D  00FA               	movwf	___awdiv@dividend+1
  4524  009E  0870               	movf	?___awmod,w
  4525  009F  00F9               	movwf	___awdiv@dividend
  4526  00A0  3188  2004  3180   	fcall	___awdiv
  4527  00A3  0877               	movf	?___awdiv,w
  4528  00A4  3E09               	addlw	9
  4529  00A5  0020               	movlb	0	; select bank0
  4530  00A6  00A4               	movwf	___wmul@multiplier
  4531  00A7  3000               	movlw	0
  4532  00A8  3D78               	addwfc	?___awdiv+1,w
  4533  00A9  00A5               	movwf	___wmul@multiplier+1
  4534  00AA  3003               	movlw	3
  4535  00AB  00A6               	movwf	___wmul@multiplicand
  4536  00AC  3000               	movlw	0
  4537  00AD  00A7               	movwf	___wmul@multiplicand+1
  4538  00AE  3180  2004  3180   	fcall	___wmul
  4539  00B1  0020               	movlb	0	; select bank0
  4540  00B2  0825               	movf	?___wmul+1,w
  4541  00B3  0085               	movwf	5
  4542  00B4  0824               	movf	?___wmul,w
  4543  00B5  0084               	movwf	4
  4544  00B6  3028               	movlw	low (__npowers_| (0+32768))
  4545  00B7  0784               	addwf	4,f
  4546  00B8  3090               	movlw	high (__npowers_| (0+32768))
  4547  00B9  3D85               	addwfc	5,f
  4548  00BA  3F00               	moviw [0]fsr0
  4549  00BB  00A8               	movwf	___ftmul@f1
  4550  00BC  3F01               	moviw [1]fsr0
  4551  00BD  00A9               	movwf	___ftmul@f1+1
  4552  00BE  3F02               	moviw [2]fsr0
  4553  00BF  00AA               	movwf	___ftmul@f1+2
  4554  00C0  3064               	movlw	100
  4555  00C1  00F7               	movwf	___awdiv@divisor
  4556  00C2  3000               	movlw	0
  4557  00C3  00F8               	movwf	___awdiv@divisor+1
  4558  00C4  0845               	movf	fround@prec,w
  4559  00C5  00BD               	movwf	??_fround+2
  4560  00C6  01BE               	clrf	??_fround+3
  4561  00C7  083D               	movf	??_fround+2,w
  4562  00C8  00F9               	movwf	___awdiv@dividend
  4563  00C9  083E               	movf	??_fround+3,w
  4564  00CA  00FA               	movwf	___awdiv@dividend+1
  4565  00CB  3188  2004  3180   	fcall	___awdiv
  4566  00CE  0877               	movf	?___awdiv,w
  4567  00CF  3E12               	addlw	18
  4568  00D0  0020               	movlb	0	; select bank0
  4569  00D1  00A4               	movwf	___wmul@multiplier
  4570  00D2  3000               	movlw	0
  4571  00D3  3D78               	addwfc	?___awdiv+1,w
  4572  00D4  00A5               	movwf	___wmul@multiplier+1
  4573  00D5  3003               	movlw	3
  4574  00D6  00A6               	movwf	___wmul@multiplicand
  4575  00D7  3000               	movlw	0
  4576  00D8  00A7               	movwf	___wmul@multiplicand+1
  4577  00D9  3180  2004  3180   	fcall	___wmul
  4578  00DC  0020               	movlb	0	; select bank0
  4579  00DD  0825               	movf	?___wmul+1,w
  4580  00DE  0085               	movwf	5
  4581  00DF  0824               	movf	?___wmul,w
  4582  00E0  0084               	movwf	4
  4583  00E1  3028               	movlw	low (__npowers_| (0+32768))
  4584  00E2  0784               	addwf	4,f
  4585  00E3  3090               	movlw	high (__npowers_| (0+32768))
  4586  00E4  3D85               	addwfc	5,f
  4587  00E5  3F00               	moviw [0]fsr0
  4588  00E6  00AB               	movwf	___ftmul@f2
  4589  00E7  3F01               	moviw [1]fsr0
  4590  00E8  00AC               	movwf	___ftmul@f2+1
  4591  00E9  3F02               	moviw [2]fsr0
  4592  00EA  00AD               	movwf	___ftmul@f2+2
  4593  00EB  3189  2186  3180   	fcall	___ftmul
  4594  00EE  0020               	movlb	0	; select bank0
  4595  00EF  0828               	movf	?___ftmul,w
  4596  00F0  00C2               	movwf	_fround$752
  4597  00F1  0829               	movf	?___ftmul+1,w
  4598  00F2  00C3               	movwf	_fround$752+1
  4599  00F3  082A               	movf	?___ftmul+2,w
  4600  00F4  00C4               	movwf	_fround$752+2
  4601                           
  4602                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4603  00F5  0845               	movf	fround@prec,w
  4604  00F6  00BB               	movwf	??_fround
  4605  00F7  01BC               	clrf	??_fround+1
  4606  00F8  083B               	movf	??_fround,w
  4607  00F9  00F2               	movwf	___awmod@dividend
  4608  00FA  083C               	movf	??_fround+1,w
  4609  00FB  00F3               	movwf	___awmod@dividend+1
  4610  00FC  300A               	movlw	10
  4611  00FD  00F0               	movwf	___awmod@divisor
  4612  00FE  3000               	movlw	0
  4613  00FF  00F1               	movwf	___awmod@divisor+1
  4614  0100  3197  2769  3180   	fcall	___awmod
  4615  0103  0871               	movf	?___awmod+1,w
  4616  0104  0020               	movlb	0	; select bank0
  4617  0105  00A5               	movwf	___wmul@multiplier+1
  4618  0106  0870               	movf	?___awmod,w
  4619  0107  00A4               	movwf	___wmul@multiplier
  4620  0108  3003               	movlw	3
  4621  0109  00A6               	movwf	___wmul@multiplicand
  4622  010A  3000               	movlw	0
  4623  010B  00A7               	movwf	___wmul@multiplicand+1
  4624  010C  3180  2004  3180   	fcall	___wmul
  4625  010F  0020               	movlb	0	; select bank0
  4626  0110  0825               	movf	?___wmul+1,w
  4627  0111  0085               	movwf	5
  4628  0112  0824               	movf	?___wmul,w
  4629  0113  0084               	movwf	4
  4630  0114  3028               	movlw	low (__npowers_| (0+32768))
  4631  0115  0784               	addwf	4,f
  4632  0116  3090               	movlw	high (__npowers_| (0+32768))
  4633  0117  3D85               	addwfc	5,f
  4634  0118  3F00               	moviw [0]fsr0
  4635  0119  00A8               	movwf	___ftmul@f1
  4636  011A  3F01               	moviw [1]fsr0
  4637  011B  00A9               	movwf	___ftmul@f1+1
  4638  011C  3F02               	moviw [2]fsr0
  4639  011D  00AA               	movwf	___ftmul@f1+2
  4640  011E  0842               	movf	_fround$752,w
  4641  011F  00AB               	movwf	___ftmul@f2
  4642  0120  0843               	movf	_fround$752+1,w
  4643  0121  00AC               	movwf	___ftmul@f2+1
  4644  0122  0844               	movf	_fround$752+2,w
  4645  0123  00AD               	movwf	___ftmul@f2+2
  4646  0124  3189  2186  3180   	fcall	___ftmul
  4647  0127  0020               	movlb	0	; select bank0
  4648  0128  0828               	movf	?___ftmul,w
  4649  0129  00BF               	movwf	_fround$753
  4650  012A  0829               	movf	?___ftmul+1,w
  4651  012B  00C0               	movwf	_fround$753+1
  4652  012C  082A               	movf	?___ftmul+2,w
  4653  012D  00C1               	movwf	_fround$753+2
  4654                           
  4655                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4656  012E  3000               	movlw	0
  4657  012F  00A8               	movwf	___ftmul@f1
  4658  0130  3000               	movlw	0
  4659  0131  00A9               	movwf	___ftmul@f1+1
  4660  0132  303F               	movlw	63
  4661  0133  00AA               	movwf	___ftmul@f1+2
  4662  0134  083F               	movf	_fround$753,w
  4663  0135  00AB               	movwf	___ftmul@f2
  4664  0136  0840               	movf	_fround$753+1,w
  4665  0137  00AC               	movwf	___ftmul@f2+1
  4666  0138  0841               	movf	_fround$753+2,w
  4667  0139  00AD               	movwf	___ftmul@f2+2
  4668  013A  3189  2186         	fcall	___ftmul
  4669  013C  0020               	movlb	0	; select bank0
  4670  013D  0828               	movf	?___ftmul,w
  4671  013E  00B8               	movwf	?_fround
  4672  013F  0829               	movf	?___ftmul+1,w
  4673  0140  00B9               	movwf	?_fround+1
  4674  0141  082A               	movf	?___ftmul+2,w
  4675  0142  00BA               	movwf	?_fround+2
  4676  0143  0008               	return
  4677  0144                     l2049:	
  4678                           
  4679                           ;doprnt.c: 415: else if(prec > 10)
  4680  0144  300B               	movlw	11
  4681  0145  0245               	subwf	fround@prec,w
  4682  0146  1C03               	skipc
  4683  0147  29BC               	goto	l2057
  4684                           
  4685                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4686  0148  0845               	movf	fround@prec,w
  4687  0149  00BB               	movwf	??_fround
  4688  014A  01BC               	clrf	??_fround+1
  4689  014B  083B               	movf	??_fround,w
  4690  014C  00F2               	movwf	___awmod@dividend
  4691  014D  083C               	movf	??_fround+1,w
  4692  014E  00F3               	movwf	___awmod@dividend+1
  4693  014F  300A               	movlw	10
  4694  0150  00F0               	movwf	___awmod@divisor
  4695  0151  3000               	movlw	0
  4696  0152  00F1               	movwf	___awmod@divisor+1
  4697  0153  3197  2769  3180   	fcall	___awmod
  4698  0156  0871               	movf	?___awmod+1,w
  4699  0157  0020               	movlb	0	; select bank0
  4700  0158  00A5               	movwf	___wmul@multiplier+1
  4701  0159  0870               	movf	?___awmod,w
  4702  015A  00A4               	movwf	___wmul@multiplier
  4703  015B  3003               	movlw	3
  4704  015C  00A6               	movwf	___wmul@multiplicand
  4705  015D  3000               	movlw	0
  4706  015E  00A7               	movwf	___wmul@multiplicand+1
  4707  015F  3180  2004  3180   	fcall	___wmul
  4708  0162  0020               	movlb	0	; select bank0
  4709  0163  0825               	movf	?___wmul+1,w
  4710  0164  0085               	movwf	5
  4711  0165  0824               	movf	?___wmul,w
  4712  0166  0084               	movwf	4
  4713  0167  3028               	movlw	low (__npowers_| (0+32768))
  4714  0168  0784               	addwf	4,f
  4715  0169  3090               	movlw	high (__npowers_| (0+32768))
  4716  016A  3D85               	addwfc	5,f
  4717  016B  3F00               	moviw [0]fsr0
  4718  016C  00A8               	movwf	___ftmul@f1
  4719  016D  3F01               	moviw [1]fsr0
  4720  016E  00A9               	movwf	___ftmul@f1+1
  4721  016F  3F02               	moviw [2]fsr0
  4722  0170  00AA               	movwf	___ftmul@f1+2
  4723  0171  300A               	movlw	10
  4724  0172  00F7               	movwf	___awdiv@divisor
  4725  0173  3000               	movlw	0
  4726  0174  00F8               	movwf	___awdiv@divisor+1
  4727  0175  0845               	movf	fround@prec,w
  4728  0176  00BD               	movwf	??_fround+2
  4729  0177  01BE               	clrf	??_fround+3
  4730  0178  083D               	movf	??_fround+2,w
  4731  0179  00F9               	movwf	___awdiv@dividend
  4732  017A  083E               	movf	??_fround+3,w
  4733  017B  00FA               	movwf	___awdiv@dividend+1
  4734  017C  3188  2004  3180   	fcall	___awdiv
  4735  017F  0877               	movf	?___awdiv,w
  4736  0180  3E09               	addlw	9
  4737  0181  0020               	movlb	0	; select bank0
  4738  0182  00A4               	movwf	___wmul@multiplier
  4739  0183  3000               	movlw	0
  4740  0184  3D78               	addwfc	?___awdiv+1,w
  4741  0185  00A5               	movwf	___wmul@multiplier+1
  4742  0186  3003               	movlw	3
  4743  0187  00A6               	movwf	___wmul@multiplicand
  4744  0188  3000               	movlw	0
  4745  0189  00A7               	movwf	___wmul@multiplicand+1
  4746  018A  3180  2004  3180   	fcall	___wmul
  4747  018D  0020               	movlb	0	; select bank0
  4748  018E  0825               	movf	?___wmul+1,w
  4749  018F  0085               	movwf	5
  4750  0190  0824               	movf	?___wmul,w
  4751  0191  0084               	movwf	4
  4752  0192  3028               	movlw	low (__npowers_| (0+32768))
  4753  0193  0784               	addwf	4,f
  4754  0194  3090               	movlw	high (__npowers_| (0+32768))
  4755  0195  3D85               	addwfc	5,f
  4756  0196  3F00               	moviw [0]fsr0
  4757  0197  00AB               	movwf	___ftmul@f2
  4758  0198  3F01               	moviw [1]fsr0
  4759  0199  00AC               	movwf	___ftmul@f2+1
  4760  019A  3F02               	moviw [2]fsr0
  4761  019B  00AD               	movwf	___ftmul@f2+2
  4762  019C  3189  2186  3180   	fcall	___ftmul
  4763  019F  0020               	movlb	0	; select bank0
  4764  01A0  0828               	movf	?___ftmul,w
  4765  01A1  00C2               	movwf	_fround$752
  4766  01A2  0829               	movf	?___ftmul+1,w
  4767  01A3  00C3               	movwf	_fround$752+1
  4768  01A4  082A               	movf	?___ftmul+2,w
  4769  01A5  00C4               	movwf	_fround$752+2
  4770                           
  4771                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4772  01A6  3000               	movlw	0
  4773  01A7  00A8               	movwf	___ftmul@f1
  4774  01A8  3000               	movlw	0
  4775  01A9  00A9               	movwf	___ftmul@f1+1
  4776  01AA  303F               	movlw	63
  4777  01AB  00AA               	movwf	___ftmul@f1+2
  4778  01AC  0842               	movf	_fround$752,w
  4779  01AD  00AB               	movwf	___ftmul@f2
  4780  01AE  0843               	movf	_fround$752+1,w
  4781  01AF  00AC               	movwf	___ftmul@f2+1
  4782  01B0  0844               	movf	_fround$752+2,w
  4783  01B1  00AD               	movwf	___ftmul@f2+2
  4784  01B2  3189  2186         	fcall	___ftmul
  4785  01B4  0020               	movlb	0	; select bank0
  4786  01B5  0828               	movf	?___ftmul,w
  4787  01B6  00B8               	movwf	?_fround
  4788  01B7  0829               	movf	?___ftmul+1,w
  4789  01B8  00B9               	movwf	?_fround+1
  4790  01B9  082A               	movf	?___ftmul+2,w
  4791  01BA  00BA               	movwf	?_fround+2
  4792  01BB  0008               	return
  4793  01BC                     l2057:	
  4794                           
  4795                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4796  01BC  3000               	movlw	0
  4797  01BD  00A8               	movwf	___ftmul@f1
  4798  01BE  3000               	movlw	0
  4799  01BF  00A9               	movwf	___ftmul@f1+1
  4800  01C0  303F               	movlw	63
  4801  01C1  00AA               	movwf	___ftmul@f1+2
  4802  01C2  0845               	movf	fround@prec,w
  4803  01C3  00BB               	movwf	??_fround
  4804  01C4  01BC               	clrf	??_fround+1
  4805  01C5  083B               	movf	??_fround,w
  4806  01C6  00A4               	movwf	___wmul@multiplier
  4807  01C7  083C               	movf	??_fround+1,w
  4808  01C8  00A5               	movwf	___wmul@multiplier+1
  4809  01C9  3003               	movlw	3
  4810  01CA  00A6               	movwf	___wmul@multiplicand
  4811  01CB  3000               	movlw	0
  4812  01CC  00A7               	movwf	___wmul@multiplicand+1
  4813  01CD  3180  2004  3180   	fcall	___wmul
  4814  01D0  0020               	movlb	0	; select bank0
  4815  01D1  0825               	movf	?___wmul+1,w
  4816  01D2  0085               	movwf	5
  4817  01D3  0824               	movf	?___wmul,w
  4818  01D4  0084               	movwf	4
  4819  01D5  3028               	movlw	low (__npowers_| (0+32768))
  4820  01D6  0784               	addwf	4,f
  4821  01D7  3090               	movlw	high (__npowers_| (0+32768))
  4822  01D8  3D85               	addwfc	5,f
  4823  01D9  3F00               	moviw [0]fsr0
  4824  01DA  00AB               	movwf	___ftmul@f2
  4825  01DB  3F01               	moviw [1]fsr0
  4826  01DC  00AC               	movwf	___ftmul@f2+1
  4827  01DD  3F02               	moviw [2]fsr0
  4828  01DE  00AD               	movwf	___ftmul@f2+2
  4829  01DF  3189  2186         	fcall	___ftmul
  4830  01E1  0020               	movlb	0	; select bank0
  4831  01E2  0828               	movf	?___ftmul,w
  4832  01E3  00B8               	movwf	?_fround
  4833  01E4  0829               	movf	?___ftmul+1,w
  4834  01E5  00B9               	movwf	?_fround+1
  4835  01E6  082A               	movf	?___ftmul+2,w
  4836  01E7  00BA               	movwf	?_fround+2
  4837  01E8  0008               	return
  4838  01E9                     __end_of_fround:	
  4839                           
  4840                           	psect	text7
  4841  0004                     __ptext7:	
  4842 ;; *************** function ___wmul *****************
  4843 ;; Defined at:
  4844 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  multiplier      2    4[BANK0 ] unsigned int 
  4847 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  product         2   12[COMMON] unsigned int 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  2    4[BANK0 ] unsigned int 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4859 ;;      Params:         0       4       0       0       0       0       0       0
  4860 ;;      Locals:         2       0       0       0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0
  4862 ;;      Totals:         2       4       0       0       0       0       0       0
  4863 ;;Total ram usage:        6 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_fround
  4869 ;;		_scale
  4870 ;;		_printf
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function ___wmul
  4876  0004                     ___wmul:	
  4877                           
  4878                           ;incstack = 0
  4879                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4880  0004  01FC               	clrf	___wmul@product
  4881  0005  01FD               	clrf	___wmul@product+1
  4882  0006                     l1781:	
  4883  0006  0020               	movlb	0	; select bank0
  4884  0007  1C24               	btfss	___wmul@multiplier,0
  4885  0008  280D               	goto	l344
  4886  0009  0826               	movf	___wmul@multiplicand,w
  4887  000A  07FC               	addwf	___wmul@product,f
  4888  000B  0827               	movf	___wmul@multiplicand+1,w
  4889  000C  3DFD               	addwfc	___wmul@product+1,f
  4890  000D                     l344:	
  4891  000D  3001               	movlw	1
  4892  000E                     u2155:	
  4893  000E  35A6               	lslf	___wmul@multiplicand,f
  4894  000F  0DA7               	rlf	___wmul@multiplicand+1,f
  4895  0010  0B89               	decfsz	9,f
  4896  0011  280E               	goto	u2155
  4897  0012  3001               	movlw	1
  4898  0013                     u2165:	
  4899  0013  36A5               	lsrf	___wmul@multiplier+1,f
  4900  0014  0CA4               	rrf	___wmul@multiplier,f
  4901  0015  0B89               	decfsz	9,f
  4902  0016  2813               	goto	u2165
  4903  0017  0824               	movf	___wmul@multiplier,w
  4904  0018  0425               	iorwf	___wmul@multiplier+1,w
  4905  0019  1D03               	btfss	3,2
  4906  001A  2806               	goto	l1781
  4907  001B  087D               	movf	___wmul@product+1,w
  4908  001C  00A5               	movwf	?___wmul+1
  4909  001D  087C               	movf	___wmul@product,w
  4910  001E  00A4               	movwf	?___wmul
  4911  001F  0008               	return
  4912  0020                     __end_of___wmul:	
  4913                           
  4914                           	psect	text8
  4915  0986                     __ptext8:	
  4916 ;; *************** function ___ftmul *****************
  4917 ;; Defined at:
  4918 ;;		line 62 in file "/Applications/microchip/xc8/v1.38/sources/common/ftmul.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  f1              3    8[BANK0 ] float 
  4921 ;;  f2              3   11[BANK0 ] float 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  4924 ;;  sign            1   23[BANK0 ] unsigned char 
  4925 ;;  cntr            1   22[BANK0 ] unsigned char 
  4926 ;;  exp             1   18[BANK0 ] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  3    8[BANK0 ] float 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0, pclath, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4936 ;;      Params:         0       6       0       0       0       0       0       0
  4937 ;;      Locals:         0       6       0       0       0       0       0       0
  4938 ;;      Temps:          0       4       0       0       0       0       0       0
  4939 ;;      Totals:         0      16       0       0       0       0       0       0
  4940 ;;Total ram usage:       16 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    1
  4943 ;; This function calls:
  4944 ;;		___ftpack
  4945 ;; This function is called by:
  4946 ;;		_main
  4947 ;;		_fround
  4948 ;;		_scale
  4949 ;;		_printf
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function ___ftmul
  4955  0986                     ___ftmul:	
  4956                           
  4957                           ;incstack = 0
  4958                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4959  0986  0020               	movlb	0	; select bank0
  4960  0987  0828               	movf	___ftmul@f1,w
  4961  0988  00AE               	movwf	??___ftmul
  4962  0989  0829               	movf	___ftmul@f1+1,w
  4963  098A  00AF               	movwf	??___ftmul+1
  4964  098B  082A               	movf	___ftmul@f1+2,w
  4965  098C  00B0               	movwf	??___ftmul+2
  4966  098D  1003               	clrc
  4967  098E  0D2F               	rlf	??___ftmul+1,w
  4968  098F  0D30               	rlf	??___ftmul+2,w
  4969  0990  00B1               	movwf	??___ftmul+3
  4970  0991  0831               	movf	??___ftmul+3,w
  4971  0992  00B2               	movwf	___ftmul@exp
  4972  0993  0832               	movf	___ftmul@exp,w
  4973  0994  1D03               	btfss	3,2
  4974  0995  299D               	goto	l1951
  4975  0996  3000               	movlw	0
  4976  0997  00A8               	movwf	?___ftmul
  4977  0998  3000               	movlw	0
  4978  0999  00A9               	movwf	?___ftmul+1
  4979  099A  3000               	movlw	0
  4980  099B  00AA               	movwf	?___ftmul+2
  4981  099C  0008               	return
  4982  099D                     l1951:	
  4983  099D  082B               	movf	___ftmul@f2,w
  4984  099E  00AE               	movwf	??___ftmul
  4985  099F  082C               	movf	___ftmul@f2+1,w
  4986  09A0  00AF               	movwf	??___ftmul+1
  4987  09A1  082D               	movf	___ftmul@f2+2,w
  4988  09A2  00B0               	movwf	??___ftmul+2
  4989  09A3  1003               	clrc
  4990  09A4  0D2F               	rlf	??___ftmul+1,w
  4991  09A5  0D30               	rlf	??___ftmul+2,w
  4992  09A6  00B1               	movwf	??___ftmul+3
  4993  09A7  0831               	movf	??___ftmul+3,w
  4994  09A8  00B7               	movwf	___ftmul@sign
  4995  09A9  0837               	movf	___ftmul@sign,w
  4996  09AA  1D03               	btfss	3,2
  4997  09AB  29B3               	goto	l1957
  4998  09AC  3000               	movlw	0
  4999  09AD  00A8               	movwf	?___ftmul
  5000  09AE  3000               	movlw	0
  5001  09AF  00A9               	movwf	?___ftmul+1
  5002  09B0  3000               	movlw	0
  5003  09B1  00AA               	movwf	?___ftmul+2
  5004  09B2  0008               	return
  5005  09B3                     l1957:	
  5006  09B3  0837               	movf	___ftmul@sign,w
  5007  09B4  3E7B               	addlw	123
  5008  09B5  00AE               	movwf	??___ftmul
  5009  09B6  082E               	movf	??___ftmul,w
  5010  09B7  07B2               	addwf	___ftmul@exp,f
  5011  09B8  0828               	movf	___ftmul@f1,w
  5012  09B9  00AE               	movwf	??___ftmul
  5013  09BA  0829               	movf	___ftmul@f1+1,w
  5014  09BB  00AF               	movwf	??___ftmul+1
  5015  09BC  082A               	movf	___ftmul@f1+2,w
  5016  09BD  00B0               	movwf	??___ftmul+2
  5017  09BE  3010               	movlw	16
  5018  09BF                     u2625:	
  5019  09BF  36B0               	lsrf	??___ftmul+2,f
  5020  09C0  0CAF               	rrf	??___ftmul+1,f
  5021  09C1  0CAE               	rrf	??___ftmul,f
  5022  09C2  0B89               	decfsz	9,f
  5023  09C3  29BF               	goto	u2625
  5024  09C4  082E               	movf	??___ftmul,w
  5025  09C5  00B1               	movwf	??___ftmul+3
  5026  09C6  0831               	movf	??___ftmul+3,w
  5027  09C7  00B7               	movwf	___ftmul@sign
  5028  09C8  082B               	movf	___ftmul@f2,w
  5029  09C9  00AE               	movwf	??___ftmul
  5030  09CA  082C               	movf	___ftmul@f2+1,w
  5031  09CB  00AF               	movwf	??___ftmul+1
  5032  09CC  082D               	movf	___ftmul@f2+2,w
  5033  09CD  00B0               	movwf	??___ftmul+2
  5034  09CE  3010               	movlw	16
  5035  09CF                     u2635:	
  5036  09CF  36B0               	lsrf	??___ftmul+2,f
  5037  09D0  0CAF               	rrf	??___ftmul+1,f
  5038  09D1  0CAE               	rrf	??___ftmul,f
  5039  09D2  0B89               	decfsz	9,f
  5040  09D3  29CF               	goto	u2635
  5041  09D4  082E               	movf	??___ftmul,w
  5042  09D5  00B1               	movwf	??___ftmul+3
  5043  09D6  0831               	movf	??___ftmul+3,w
  5044  09D7  06B7               	xorwf	___ftmul@sign,f
  5045  09D8  3080               	movlw	128
  5046  09D9  00AE               	movwf	??___ftmul
  5047  09DA  082E               	movf	??___ftmul,w
  5048  09DB  05B7               	andwf	___ftmul@sign,f
  5049  09DC  17A9               	bsf	___ftmul@f1+1,7
  5050  09DD  17AC               	bsf	___ftmul@f2+1,7
  5051  09DE  30FF               	movlw	255
  5052  09DF  05AB               	andwf	___ftmul@f2,f
  5053  09E0  30FF               	movlw	255
  5054  09E1  05AC               	andwf	___ftmul@f2+1,f
  5055  09E2  3000               	movlw	0
  5056  09E3  05AD               	andwf	___ftmul@f2+2,f
  5057  09E4  3000               	movlw	0
  5058  09E5  00B3               	movwf	___ftmul@f3_as_product
  5059  09E6  3000               	movlw	0
  5060  09E7  00B4               	movwf	___ftmul@f3_as_product+1
  5061  09E8  3000               	movlw	0
  5062  09E9  00B5               	movwf	___ftmul@f3_as_product+2
  5063  09EA  3007               	movlw	7
  5064  09EB  00AE               	movwf	??___ftmul
  5065  09EC  082E               	movf	??___ftmul,w
  5066  09ED  00B6               	movwf	___ftmul@cntr
  5067  09EE                     l1969:	
  5068  09EE  1C28               	btfss	___ftmul@f1,0
  5069  09EF  29F6               	goto	l1973
  5070  09F0  082B               	movf	___ftmul@f2,w
  5071  09F1  07B3               	addwf	___ftmul@f3_as_product,f
  5072  09F2  082C               	movf	___ftmul@f2+1,w
  5073  09F3  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  5074  09F4  082D               	movf	___ftmul@f2+2,w
  5075  09F5  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  5076  09F6                     l1973:	
  5077  09F6  3001               	movlw	1
  5078  09F7                     u2655:	
  5079  09F7  36AA               	lsrf	___ftmul@f1+2,f
  5080  09F8  0CA9               	rrf	___ftmul@f1+1,f
  5081  09F9  0CA8               	rrf	___ftmul@f1,f
  5082  09FA  0B89               	decfsz	9,f
  5083  09FB  29F7               	goto	u2655
  5084  09FC  3001               	movlw	1
  5085  09FD                     u2665:	
  5086  09FD  35AB               	lslf	___ftmul@f2,f
  5087  09FE  0DAC               	rlf	___ftmul@f2+1,f
  5088  09FF  0DAD               	rlf	___ftmul@f2+2,f
  5089  0A00  0B89               	decfsz	9,f
  5090  0A01  29FD               	goto	u2665
  5091  0A02  3001               	movlw	1
  5092  0A03  02B6               	subwf	___ftmul@cntr,f
  5093  0A04  1D03               	btfss	3,2
  5094  0A05  29EE               	goto	l1969
  5095  0A06  3009               	movlw	9
  5096  0A07  00AE               	movwf	??___ftmul
  5097  0A08  082E               	movf	??___ftmul,w
  5098  0A09  00B6               	movwf	___ftmul@cntr
  5099  0A0A                     l1981:	
  5100  0A0A  1C28               	btfss	___ftmul@f1,0
  5101  0A0B  2A12               	goto	l1985
  5102  0A0C  082B               	movf	___ftmul@f2,w
  5103  0A0D  07B3               	addwf	___ftmul@f3_as_product,f
  5104  0A0E  082C               	movf	___ftmul@f2+1,w
  5105  0A0F  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  5106  0A10  082D               	movf	___ftmul@f2+2,w
  5107  0A11  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  5108  0A12                     l1985:	
  5109  0A12  3001               	movlw	1
  5110  0A13                     u2695:	
  5111  0A13  36AA               	lsrf	___ftmul@f1+2,f
  5112  0A14  0CA9               	rrf	___ftmul@f1+1,f
  5113  0A15  0CA8               	rrf	___ftmul@f1,f
  5114  0A16  0B89               	decfsz	9,f
  5115  0A17  2A13               	goto	u2695
  5116  0A18  3001               	movlw	1
  5117  0A19                     u2705:	
  5118  0A19  36B5               	lsrf	___ftmul@f3_as_product+2,f
  5119  0A1A  0CB4               	rrf	___ftmul@f3_as_product+1,f
  5120  0A1B  0CB3               	rrf	___ftmul@f3_as_product,f
  5121  0A1C  0B89               	decfsz	9,f
  5122  0A1D  2A19               	goto	u2705
  5123  0A1E  3001               	movlw	1
  5124  0A1F  02B6               	subwf	___ftmul@cntr,f
  5125  0A20  1D03               	btfss	3,2
  5126  0A21  2A0A               	goto	l1981
  5127  0A22  0833               	movf	___ftmul@f3_as_product,w
  5128  0A23  00F0               	movwf	___ftpack@arg
  5129  0A24  0834               	movf	___ftmul@f3_as_product+1,w
  5130  0A25  00F1               	movwf	___ftpack@arg+1
  5131  0A26  0835               	movf	___ftmul@f3_as_product+2,w
  5132  0A27  00F2               	movwf	___ftpack@arg+2
  5133  0A28  0832               	movf	___ftmul@exp,w
  5134  0A29  00AE               	movwf	??___ftmul
  5135  0A2A  082E               	movf	??___ftmul,w
  5136  0A2B  00F3               	movwf	___ftpack@exp
  5137  0A2C  0837               	movf	___ftmul@sign,w
  5138  0A2D  00AF               	movwf	??___ftmul+1
  5139  0A2E  082F               	movf	??___ftmul+1,w
  5140  0A2F  00F4               	movwf	___ftpack@sign
  5141  0A30  3180  2020         	fcall	___ftpack
  5142  0A32  0870               	movf	?___ftpack,w
  5143  0A33  0020               	movlb	0	; select bank0
  5144  0A34  00A8               	movwf	?___ftmul
  5145  0A35  0871               	movf	?___ftpack+1,w
  5146  0A36  00A9               	movwf	?___ftmul+1
  5147  0A37  0872               	movf	?___ftpack+2,w
  5148  0A38  00AA               	movwf	?___ftmul+2
  5149  0A39  0008               	return
  5150  0A3A                     __end_of___ftmul:	
  5151                           
  5152                           	psect	text9
  5153  1769                     __ptext9:	
  5154 ;; *************** function ___awmod *****************
  5155 ;; Defined at:
  5156 ;;		line 6 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  divisor         2    0[COMMON] int 
  5159 ;;  dividend        2    2[COMMON] int 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  sign            1    6[COMMON] unsigned char 
  5162 ;;  counter         1    5[COMMON] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  2    0[COMMON] int 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5172 ;;      Params:         4       0       0       0       0       0       0       0
  5173 ;;      Locals:         2       0       0       0       0       0       0       0
  5174 ;;      Temps:          1       0       0       0       0       0       0       0
  5175 ;;      Totals:         7       0       0       0       0       0       0       0
  5176 ;;Total ram usage:        7 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_fround
  5182 ;;		_scale
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           
  5187                           ;psect for function ___awmod
  5188  1769                     ___awmod:	
  5189                           
  5190                           ;incstack = 0
  5191                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5192  1769  01F6               	clrf	___awmod@sign
  5193  176A  1FF3               	btfss	___awmod@dividend+1,7
  5194  176B  2F73               	goto	l1845
  5195  176C  09F2               	comf	___awmod@dividend,f
  5196  176D  09F3               	comf	___awmod@dividend+1,f
  5197  176E  0AF2               	incf	___awmod@dividend,f
  5198  176F  1903               	skipnz
  5199  1770  0AF3               	incf	___awmod@dividend+1,f
  5200  1771  01F6               	clrf	___awmod@sign
  5201  1772  0AF6               	incf	___awmod@sign,f
  5202  1773                     l1845:	
  5203  1773  1FF1               	btfss	___awmod@divisor+1,7
  5204  1774  2F7A               	goto	l1849
  5205  1775  09F0               	comf	___awmod@divisor,f
  5206  1776  09F1               	comf	___awmod@divisor+1,f
  5207  1777  0AF0               	incf	___awmod@divisor,f
  5208  1778  1903               	skipnz
  5209  1779  0AF1               	incf	___awmod@divisor+1,f
  5210  177A                     l1849:	
  5211  177A  0870               	movf	___awmod@divisor,w
  5212  177B  0471               	iorwf	___awmod@divisor+1,w
  5213  177C  1903               	btfsc	3,2
  5214  177D  2FA1               	goto	l1867
  5215  177E  01F5               	clrf	___awmod@counter
  5216  177F  0AF5               	incf	___awmod@counter,f
  5217  1780                     l1857:	
  5218  1780  1BF1               	btfsc	___awmod@divisor+1,7
  5219  1781  2F8C               	goto	l1859
  5220  1782  3001               	movlw	1
  5221  1783                     u2315:	
  5222  1783  35F0               	lslf	___awmod@divisor,f
  5223  1784  0DF1               	rlf	___awmod@divisor+1,f
  5224  1785  0B89               	decfsz	9,f
  5225  1786  2F83               	goto	u2315
  5226  1787  3001               	movlw	1
  5227  1788  00F4               	movwf	??___awmod
  5228  1789  0874               	movf	??___awmod,w
  5229  178A  07F5               	addwf	___awmod@counter,f
  5230  178B  2F80               	goto	l1857
  5231  178C                     l1859:	
  5232  178C  0871               	movf	___awmod@divisor+1,w
  5233  178D  0273               	subwf	___awmod@dividend+1,w
  5234  178E  1D03               	skipz
  5235  178F  2F92               	goto	u2335
  5236  1790  0870               	movf	___awmod@divisor,w
  5237  1791  0272               	subwf	___awmod@dividend,w
  5238  1792                     u2335:	
  5239  1792  1C03               	skipc
  5240  1793  2F98               	goto	l1863
  5241  1794  0870               	movf	___awmod@divisor,w
  5242  1795  02F2               	subwf	___awmod@dividend,f
  5243  1796  0871               	movf	___awmod@divisor+1,w
  5244  1797  3BF3               	subwfb	___awmod@dividend+1,f
  5245  1798                     l1863:	
  5246  1798  3001               	movlw	1
  5247  1799                     u2345:	
  5248  1799  36F1               	lsrf	___awmod@divisor+1,f
  5249  179A  0CF0               	rrf	___awmod@divisor,f
  5250  179B  0B89               	decfsz	9,f
  5251  179C  2F99               	goto	u2345
  5252  179D  3001               	movlw	1
  5253  179E  02F5               	subwf	___awmod@counter,f
  5254  179F  1D03               	btfss	3,2
  5255  17A0  2F8C               	goto	l1859
  5256  17A1                     l1867:	
  5257  17A1  0876               	movf	___awmod@sign,w
  5258  17A2  1903               	btfsc	3,2
  5259  17A3  2FA9               	goto	l1871
  5260  17A4  09F2               	comf	___awmod@dividend,f
  5261  17A5  09F3               	comf	___awmod@dividend+1,f
  5262  17A6  0AF2               	incf	___awmod@dividend,f
  5263  17A7  1903               	skipnz
  5264  17A8  0AF3               	incf	___awmod@dividend+1,f
  5265  17A9                     l1871:	
  5266  17A9  0873               	movf	___awmod@dividend+1,w
  5267  17AA  00F1               	movwf	?___awmod+1
  5268  17AB  0872               	movf	___awmod@dividend,w
  5269  17AC  00F0               	movwf	?___awmod
  5270  17AD  0008               	return
  5271  17AE                     __end_of___awmod:	
  5272                           
  5273                           	psect	text10
  5274  0804                     __ptext10:	
  5275 ;; *************** function ___awdiv *****************
  5276 ;; Defined at:
  5277 ;;		line 6 in file "/Applications/microchip/xc8/v1.38/sources/common/awdiv.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  divisor         2    7[COMMON] int 
  5280 ;;  dividend        2    9[COMMON] int 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  quotient        2    2[BANK0 ] int 
  5283 ;;  sign            1    1[BANK0 ] unsigned char 
  5284 ;;  counter         1    0[BANK0 ] unsigned char 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  2    7[COMMON] int 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5294 ;;      Params:         4       0       0       0       0       0       0       0
  5295 ;;      Locals:         0       4       0       0       0       0       0       0
  5296 ;;      Temps:          1       0       0       0       0       0       0       0
  5297 ;;      Totals:         5       4       0       0       0       0       0       0
  5298 ;;Total ram usage:        9 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_fround
  5304 ;;		_scale
  5305 ;;		_printf
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function ___awdiv
  5311  0804                     ___awdiv:	
  5312                           
  5313                           ;incstack = 0
  5314                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5315  0804  0020               	movlb	0	; select bank0
  5316  0805  01A1               	clrf	___awdiv@sign
  5317  0806  1FF8               	btfss	___awdiv@divisor+1,7
  5318  0807  280F               	goto	l1801
  5319  0808  09F7               	comf	___awdiv@divisor,f
  5320  0809  09F8               	comf	___awdiv@divisor+1,f
  5321  080A  0AF7               	incf	___awdiv@divisor,f
  5322  080B  1903               	skipnz
  5323  080C  0AF8               	incf	___awdiv@divisor+1,f
  5324  080D  01A1               	clrf	___awdiv@sign
  5325  080E  0AA1               	incf	___awdiv@sign,f
  5326  080F                     l1801:	
  5327  080F  1FFA               	btfss	___awdiv@dividend+1,7
  5328  0810  281A               	goto	l1807
  5329  0811  09F9               	comf	___awdiv@dividend,f
  5330  0812  09FA               	comf	___awdiv@dividend+1,f
  5331  0813  0AF9               	incf	___awdiv@dividend,f
  5332  0814  1903               	skipnz
  5333  0815  0AFA               	incf	___awdiv@dividend+1,f
  5334  0816  3001               	movlw	1
  5335  0817  00FB               	movwf	??___awdiv
  5336  0818  087B               	movf	??___awdiv,w
  5337  0819  06A1               	xorwf	___awdiv@sign,f
  5338  081A                     l1807:	
  5339  081A  01A2               	clrf	___awdiv@quotient
  5340  081B  01A3               	clrf	___awdiv@quotient+1
  5341  081C  0877               	movf	___awdiv@divisor,w
  5342  081D  0478               	iorwf	___awdiv@divisor+1,w
  5343  081E  1903               	btfsc	3,2
  5344  081F  2849               	goto	l1829
  5345  0820  01A0               	clrf	___awdiv@counter
  5346  0821  0AA0               	incf	___awdiv@counter,f
  5347  0822                     l1817:	
  5348  0822  1BF8               	btfsc	___awdiv@divisor+1,7
  5349  0823  282E               	goto	l1819
  5350  0824  3001               	movlw	1
  5351  0825                     u2215:	
  5352  0825  35F7               	lslf	___awdiv@divisor,f
  5353  0826  0DF8               	rlf	___awdiv@divisor+1,f
  5354  0827  0B89               	decfsz	9,f
  5355  0828  2825               	goto	u2215
  5356  0829  3001               	movlw	1
  5357  082A  00FB               	movwf	??___awdiv
  5358  082B  087B               	movf	??___awdiv,w
  5359  082C  07A0               	addwf	___awdiv@counter,f
  5360  082D  2822               	goto	l1817
  5361  082E                     l1819:	
  5362  082E  3001               	movlw	1
  5363  082F                     u2235:	
  5364  082F  35A2               	lslf	___awdiv@quotient,f
  5365  0830  0DA3               	rlf	___awdiv@quotient+1,f
  5366  0831  0B89               	decfsz	9,f
  5367  0832  282F               	goto	u2235
  5368  0833  0878               	movf	___awdiv@divisor+1,w
  5369  0834  027A               	subwf	___awdiv@dividend+1,w
  5370  0835  1D03               	skipz
  5371  0836  2839               	goto	u2245
  5372  0837  0877               	movf	___awdiv@divisor,w
  5373  0838  0279               	subwf	___awdiv@dividend,w
  5374  0839                     u2245:	
  5375  0839  1C03               	skipc
  5376  083A  2840               	goto	l1825
  5377  083B  0877               	movf	___awdiv@divisor,w
  5378  083C  02F9               	subwf	___awdiv@dividend,f
  5379  083D  0878               	movf	___awdiv@divisor+1,w
  5380  083E  3BFA               	subwfb	___awdiv@dividend+1,f
  5381  083F  1422               	bsf	___awdiv@quotient,0
  5382  0840                     l1825:	
  5383  0840  3001               	movlw	1
  5384  0841                     u2255:	
  5385  0841  36F8               	lsrf	___awdiv@divisor+1,f
  5386  0842  0CF7               	rrf	___awdiv@divisor,f
  5387  0843  0B89               	decfsz	9,f
  5388  0844  2841               	goto	u2255
  5389  0845  3001               	movlw	1
  5390  0846  02A0               	subwf	___awdiv@counter,f
  5391  0847  1D03               	btfss	3,2
  5392  0848  282E               	goto	l1819
  5393  0849                     l1829:	
  5394  0849  0821               	movf	___awdiv@sign,w
  5395  084A  1903               	btfsc	3,2
  5396  084B  2851               	goto	l1833
  5397  084C  09A2               	comf	___awdiv@quotient,f
  5398  084D  09A3               	comf	___awdiv@quotient+1,f
  5399  084E  0AA2               	incf	___awdiv@quotient,f
  5400  084F  1903               	skipnz
  5401  0850  0AA3               	incf	___awdiv@quotient+1,f
  5402  0851                     l1833:	
  5403  0851  0823               	movf	___awdiv@quotient+1,w
  5404  0852  00F8               	movwf	?___awdiv+1
  5405  0853  0822               	movf	___awdiv@quotient,w
  5406  0854  00F7               	movwf	?___awdiv
  5407  0855  0008               	return
  5408  0856                     __end_of___awdiv:	
  5409                           
  5410                           	psect	text11
  5411  0A3A                     __ptext11:	
  5412 ;; *************** function __tdiv_to_l_ *****************
  5413 ;; Defined at:
  5414 ;;		line 60 in file "/Applications/microchip/xc8/v1.38/sources/common/ftdivl.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  f1              3    0[COMMON] float 
  5417 ;;  f2              3    3[COMMON] float 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  quot            4    0[BANK0 ] unsigned long 
  5420 ;;  exp1            1    5[BANK0 ] unsigned char 
  5421 ;;  cntr            1    4[BANK0 ] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  4    0[COMMON] unsigned long 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5431 ;;      Params:         6       0       0       0       0       0       0       0
  5432 ;;      Locals:         0       6       0       0       0       0       0       0
  5433 ;;      Temps:          4       0       0       0       0       0       0       0
  5434 ;;      Totals:        10       6       0       0       0       0       0       0
  5435 ;;Total ram usage:       16 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_printf
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           
  5445                           ;psect for function __tdiv_to_l_
  5446  0A3A                     __tdiv_to_l_:	
  5447                           
  5448                           ;incstack = 0
  5449                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5450  0A3A  0870               	movf	__tdiv_to_l_@f1,w
  5451  0A3B  00F6               	movwf	??__tdiv_to_l_
  5452  0A3C  0871               	movf	__tdiv_to_l_@f1+1,w
  5453  0A3D  00F7               	movwf	??__tdiv_to_l_+1
  5454  0A3E  0872               	movf	__tdiv_to_l_@f1+2,w
  5455  0A3F  00F8               	movwf	??__tdiv_to_l_+2
  5456  0A40  1003               	clrc
  5457  0A41  0D77               	rlf	??__tdiv_to_l_+1,w
  5458  0A42  0D78               	rlf	??__tdiv_to_l_+2,w
  5459  0A43  00F9               	movwf	??__tdiv_to_l_+3
  5460  0A44  0879               	movf	??__tdiv_to_l_+3,w
  5461  0A45  0020               	movlb	0	; select bank0
  5462  0A46  00A5               	movwf	__tdiv_to_l_@exp1
  5463  0A47  0825               	movf	__tdiv_to_l_@exp1,w
  5464  0A48  1D03               	btfss	3,2
  5465  0A49  2A53               	goto	l2119
  5466  0A4A  3000               	movlw	0
  5467  0A4B  00F3               	movwf	?__tdiv_to_l_+3
  5468  0A4C  3000               	movlw	0
  5469  0A4D  00F2               	movwf	?__tdiv_to_l_+2
  5470  0A4E  3000               	movlw	0
  5471  0A4F  00F1               	movwf	?__tdiv_to_l_+1
  5472  0A50  3000               	movlw	0
  5473  0A51  00F0               	movwf	?__tdiv_to_l_
  5474  0A52  0008               	return
  5475  0A53                     l2119:	
  5476  0A53  0873               	movf	__tdiv_to_l_@f2,w
  5477  0A54  00F6               	movwf	??__tdiv_to_l_
  5478  0A55  0874               	movf	__tdiv_to_l_@f2+1,w
  5479  0A56  00F7               	movwf	??__tdiv_to_l_+1
  5480  0A57  0875               	movf	__tdiv_to_l_@f2+2,w
  5481  0A58  00F8               	movwf	??__tdiv_to_l_+2
  5482  0A59  1003               	clrc
  5483  0A5A  0D77               	rlf	??__tdiv_to_l_+1,w
  5484  0A5B  0D78               	rlf	??__tdiv_to_l_+2,w
  5485  0A5C  00F9               	movwf	??__tdiv_to_l_+3
  5486  0A5D  0879               	movf	??__tdiv_to_l_+3,w
  5487  0A5E  00A4               	movwf	__tdiv_to_l_@cntr
  5488  0A5F  0824               	movf	__tdiv_to_l_@cntr,w
  5489  0A60  1D03               	btfss	3,2
  5490  0A61  2A6B               	goto	l579
  5491  0A62  3000               	movlw	0
  5492  0A63  00F3               	movwf	?__tdiv_to_l_+3
  5493  0A64  3000               	movlw	0
  5494  0A65  00F2               	movwf	?__tdiv_to_l_+2
  5495  0A66  3000               	movlw	0
  5496  0A67  00F1               	movwf	?__tdiv_to_l_+1
  5497  0A68  3000               	movlw	0
  5498  0A69  00F0               	movwf	?__tdiv_to_l_
  5499  0A6A  0008               	return
  5500  0A6B                     l579:	
  5501  0A6B  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5502  0A6C  30FF               	movlw	255
  5503  0A6D  05F0               	andwf	__tdiv_to_l_@f1,f
  5504  0A6E  30FF               	movlw	255
  5505  0A6F  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5506  0A70  3000               	movlw	0
  5507  0A71  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5508  0A72  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5509  0A73  30FF               	movlw	255
  5510  0A74  05F3               	andwf	__tdiv_to_l_@f2,f
  5511  0A75  30FF               	movlw	255
  5512  0A76  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5513  0A77  3000               	movlw	0
  5514  0A78  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5515  0A79  3000               	movlw	0
  5516  0A7A  00A3               	movwf	__tdiv_to_l_@quot+3
  5517  0A7B  3000               	movlw	0
  5518  0A7C  00A2               	movwf	__tdiv_to_l_@quot+2
  5519  0A7D  3000               	movlw	0
  5520  0A7E  00A1               	movwf	__tdiv_to_l_@quot+1
  5521  0A7F  3000               	movlw	0
  5522  0A80  00A0               	movwf	__tdiv_to_l_@quot
  5523  0A81  307F               	movlw	127
  5524  0A82  02A5               	subwf	__tdiv_to_l_@exp1,f
  5525  0A83  3098               	movlw	152
  5526  0A84  0724               	addwf	__tdiv_to_l_@cntr,w
  5527  0A85  00F6               	movwf	??__tdiv_to_l_
  5528  0A86  0876               	movf	??__tdiv_to_l_,w
  5529  0A87  02A5               	subwf	__tdiv_to_l_@exp1,f
  5530  0A88  3018               	movlw	24
  5531  0A89  00F6               	movwf	??__tdiv_to_l_
  5532  0A8A  0876               	movf	??__tdiv_to_l_,w
  5533  0A8B  00A4               	movwf	__tdiv_to_l_@cntr
  5534  0A8C                     l2133:	
  5535  0A8C  3001               	movlw	1
  5536  0A8D                     u2835:	
  5537  0A8D  35A0               	lslf	__tdiv_to_l_@quot,f
  5538  0A8E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5539  0A8F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5540  0A90  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5541  0A91  0B89               	decfsz	9,f
  5542  0A92  2A8D               	goto	u2835
  5543  0A93  0875               	movf	__tdiv_to_l_@f2+2,w
  5544  0A94  0272               	subwf	__tdiv_to_l_@f1+2,w
  5545  0A95  1D03               	skipz
  5546  0A96  2A9D               	goto	u2845
  5547  0A97  0874               	movf	__tdiv_to_l_@f2+1,w
  5548  0A98  0271               	subwf	__tdiv_to_l_@f1+1,w
  5549  0A99  1D03               	skipz
  5550  0A9A  2A9D               	goto	u2845
  5551  0A9B  0873               	movf	__tdiv_to_l_@f2,w
  5552  0A9C  0270               	subwf	__tdiv_to_l_@f1,w
  5553  0A9D                     u2845:	
  5554  0A9D  1C03               	skipc
  5555  0A9E  2AA6               	goto	l2141
  5556  0A9F  0873               	movf	__tdiv_to_l_@f2,w
  5557  0AA0  02F0               	subwf	__tdiv_to_l_@f1,f
  5558  0AA1  0874               	movf	__tdiv_to_l_@f2+1,w
  5559  0AA2  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  5560  0AA3  0875               	movf	__tdiv_to_l_@f2+2,w
  5561  0AA4  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  5562  0AA5  1420               	bsf	__tdiv_to_l_@quot,0
  5563  0AA6                     l2141:	
  5564  0AA6  3001               	movlw	1
  5565  0AA7                     u2855:	
  5566  0AA7  35F0               	lslf	__tdiv_to_l_@f1,f
  5567  0AA8  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5568  0AA9  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5569  0AAA  0B89               	decfsz	9,f
  5570  0AAB  2AA7               	goto	u2855
  5571  0AAC  3001               	movlw	1
  5572  0AAD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5573  0AAE  1D03               	btfss	3,2
  5574  0AAF  2A8C               	goto	l2133
  5575  0AB0  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5576  0AB1  2ACE               	goto	l2153
  5577  0AB2  0825               	movf	__tdiv_to_l_@exp1,w
  5578  0AB3  3A80               	xorlw	128
  5579  0AB4  3E97               	addlw	151
  5580  0AB5  1803               	skipnc
  5581  0AB6  2AC0               	goto	l2151
  5582  0AB7  3000               	movlw	0
  5583  0AB8  00F3               	movwf	?__tdiv_to_l_+3
  5584  0AB9  3000               	movlw	0
  5585  0ABA  00F2               	movwf	?__tdiv_to_l_+2
  5586  0ABB  3000               	movlw	0
  5587  0ABC  00F1               	movwf	?__tdiv_to_l_+1
  5588  0ABD  3000               	movlw	0
  5589  0ABE  00F0               	movwf	?__tdiv_to_l_
  5590  0ABF  0008               	return
  5591  0AC0                     l2151:	
  5592  0AC0  3001               	movlw	1
  5593  0AC1                     u2895:	
  5594  0AC1  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  5595  0AC2  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5596  0AC3  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5597  0AC4  0CA0               	rrf	__tdiv_to_l_@quot,f
  5598  0AC5  0B89               	decfsz	9,f
  5599  0AC6  2AC1               	goto	u2895
  5600  0AC7  3001               	movlw	1
  5601  0AC8  00F6               	movwf	??__tdiv_to_l_
  5602  0AC9  0876               	movf	??__tdiv_to_l_,w
  5603  0ACA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5604  0ACB  1903               	btfsc	3,2
  5605  0ACC  2AE7               	goto	l2161
  5606  0ACD  2AC0               	goto	l2151
  5607  0ACE                     l2153:	
  5608  0ACE  3018               	movlw	24
  5609  0ACF  0225               	subwf	__tdiv_to_l_@exp1,w
  5610  0AD0  1C03               	skipc
  5611  0AD1  2AE4               	goto	l589
  5612  0AD2  3000               	movlw	0
  5613  0AD3  00F3               	movwf	?__tdiv_to_l_+3
  5614  0AD4  3000               	movlw	0
  5615  0AD5  00F2               	movwf	?__tdiv_to_l_+2
  5616  0AD6  3000               	movlw	0
  5617  0AD7  00F1               	movwf	?__tdiv_to_l_+1
  5618  0AD8  3000               	movlw	0
  5619  0AD9  00F0               	movwf	?__tdiv_to_l_
  5620  0ADA  0008               	return
  5621  0ADB                     l2159:	
  5622  0ADB  3001               	movlw	1
  5623  0ADC                     u2925:	
  5624  0ADC  35A0               	lslf	__tdiv_to_l_@quot,f
  5625  0ADD  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5626  0ADE  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5627  0ADF  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5628  0AE0  0B89               	decfsz	9,f
  5629  0AE1  2ADC               	goto	u2925
  5630  0AE2  3001               	movlw	1
  5631  0AE3  02A5               	subwf	__tdiv_to_l_@exp1,f
  5632  0AE4                     l589:	
  5633  0AE4  0825               	movf	__tdiv_to_l_@exp1,w
  5634  0AE5  1D03               	btfss	3,2
  5635  0AE6  2ADB               	goto	l2159
  5636  0AE7                     l2161:	
  5637  0AE7  0823               	movf	__tdiv_to_l_@quot+3,w
  5638  0AE8  00F3               	movwf	?__tdiv_to_l_+3
  5639  0AE9  0822               	movf	__tdiv_to_l_@quot+2,w
  5640  0AEA  00F2               	movwf	?__tdiv_to_l_+2
  5641  0AEB  0821               	movf	__tdiv_to_l_@quot+1,w
  5642  0AEC  00F1               	movwf	?__tdiv_to_l_+1
  5643  0AED  0820               	movf	__tdiv_to_l_@quot,w
  5644  0AEE  00F0               	movwf	?__tdiv_to_l_
  5645  0AEF  0008               	return
  5646  0AF0                     __end_of__tdiv_to_l_:	
  5647                           
  5648                           	psect	text12
  5649  0C9F                     __ptext12:	
  5650 ;; *************** function __div_to_l_ *****************
  5651 ;; Defined at:
  5652 ;;		line 60 in file "/Applications/microchip/xc8/v1.38/sources/common/fldivl.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  f1              3    0[COMMON] unsigned long 
  5655 ;;  f2              3    3[COMMON] unsigned long 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  quot            4    0[BANK0 ] unsigned long 
  5658 ;;  exp1            1    5[BANK0 ] unsigned char 
  5659 ;;  cntr            1    4[BANK0 ] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  4    0[COMMON] unsigned long 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5669 ;;      Params:         6       0       0       0       0       0       0       0
  5670 ;;      Locals:         0       6       0       0       0       0       0       0
  5671 ;;      Temps:          8       0       0       0       0       0       0       0
  5672 ;;      Totals:        14       6       0       0       0       0       0       0
  5673 ;;Total ram usage:       20 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_printf
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function __div_to_l_
  5684  0C9F                     __div_to_l_:	
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  5688  0C9F  3070               	movlw	low (__div_to_l_@f1| 0)
  5689  0CA0  0086               	movwf	6
  5690  0CA1  0187               	clrf	7
  5691  0CA2  3F40               	moviw [0]fsr1
  5692  0CA3  00F6               	movwf	??__div_to_l_
  5693  0CA4  3F41               	moviw [1]fsr1
  5694  0CA5  00F7               	movwf	??__div_to_l_+1
  5695  0CA6  3F42               	moviw [2]fsr1
  5696  0CA7  00F8               	movwf	??__div_to_l_+2
  5697  0CA8  3F43               	moviw [3]fsr1
  5698  0CA9  00F9               	movwf	??__div_to_l_+3
  5699  0CAA  1003               	clrc
  5700  0CAB  0D78               	rlf	??__div_to_l_+2,w
  5701  0CAC  0D79               	rlf	??__div_to_l_+3,w
  5702  0CAD  00FA               	movwf	??__div_to_l_+4
  5703  0CAE  087A               	movf	??__div_to_l_+4,w
  5704  0CAF  0020               	movlb	0	; select bank0
  5705  0CB0  00A5               	movwf	__div_to_l_@exp1
  5706  0CB1  0825               	movf	__div_to_l_@exp1,w
  5707  0CB2  1D03               	btfss	3,2
  5708  0CB3  2CBD               	goto	l2171
  5709  0CB4  3000               	movlw	0
  5710  0CB5  00F3               	movwf	?__div_to_l_+3
  5711  0CB6  3000               	movlw	0
  5712  0CB7  00F2               	movwf	?__div_to_l_+2
  5713  0CB8  3000               	movlw	0
  5714  0CB9  00F1               	movwf	?__div_to_l_+1
  5715  0CBA  3000               	movlw	0
  5716  0CBB  00F0               	movwf	?__div_to_l_
  5717  0CBC  0008               	return
  5718  0CBD                     l2171:	
  5719  0CBD  3073               	movlw	low (__div_to_l_@f2| 0)
  5720  0CBE  0086               	movwf	6
  5721  0CBF  0187               	clrf	7
  5722  0CC0  3F40               	moviw [0]fsr1
  5723  0CC1  00F6               	movwf	??__div_to_l_
  5724  0CC2  3F41               	moviw [1]fsr1
  5725  0CC3  00F7               	movwf	??__div_to_l_+1
  5726  0CC4  3F42               	moviw [2]fsr1
  5727  0CC5  00F8               	movwf	??__div_to_l_+2
  5728  0CC6  3F43               	moviw [3]fsr1
  5729  0CC7  00F9               	movwf	??__div_to_l_+3
  5730  0CC8  1003               	clrc
  5731  0CC9  0D78               	rlf	??__div_to_l_+2,w
  5732  0CCA  0D79               	rlf	??__div_to_l_+3,w
  5733  0CCB  00FA               	movwf	??__div_to_l_+4
  5734  0CCC  087A               	movf	??__div_to_l_+4,w
  5735  0CCD  00A4               	movwf	__div_to_l_@cntr
  5736  0CCE  0824               	movf	__div_to_l_@cntr,w
  5737  0CCF  1D03               	btfss	3,2
  5738  0CD0  2CDA               	goto	l2177
  5739  0CD1  3000               	movlw	0
  5740  0CD2  00F3               	movwf	?__div_to_l_+3
  5741  0CD3  3000               	movlw	0
  5742  0CD4  00F2               	movwf	?__div_to_l_+2
  5743  0CD5  3000               	movlw	0
  5744  0CD6  00F1               	movwf	?__div_to_l_+1
  5745  0CD7  3000               	movlw	0
  5746  0CD8  00F0               	movwf	?__div_to_l_
  5747  0CD9  0008               	return
  5748  0CDA                     l2177:	
  5749  0CDA  3070               	movlw	low (__div_to_l_@f1| 0)
  5750  0CDB  0086               	movwf	6
  5751  0CDC  0187               	clrf	7
  5752  0CDD  3000               	movlw	0
  5753  0CDE  0481               	iorwf	1,f
  5754  0CDF  3141               	addfsr 1,1
  5755  0CE0  3000               	movlw	0
  5756  0CE1  0481               	iorwf	1,f
  5757  0CE2  3141               	addfsr 1,1
  5758  0CE3  3080               	movlw	128
  5759  0CE4  0481               	iorwf	1,f
  5760  0CE5  3141               	addfsr 1,1
  5761  0CE6  3000               	movlw	0
  5762  0CE7  0481               	iorwf	1,f
  5763  0CE8  3070               	movlw	low (__div_to_l_@f1| 0)
  5764  0CE9  0086               	movwf	6
  5765  0CEA  0187               	clrf	7
  5766  0CEB  30FF               	movlw	255
  5767  0CEC  0581               	andwf	1,f
  5768  0CED  3141               	addfsr 1,1
  5769  0CEE  30FF               	movlw	255
  5770  0CEF  0581               	andwf	1,f
  5771  0CF0  3141               	addfsr 1,1
  5772  0CF1  30FF               	movlw	255
  5773  0CF2  0581               	andwf	1,f
  5774  0CF3  3141               	addfsr 1,1
  5775  0CF4  3000               	movlw	0
  5776  0CF5  0581               	andwf	1,f
  5777  0CF6  3073               	movlw	low (__div_to_l_@f2| 0)
  5778  0CF7  0086               	movwf	6
  5779  0CF8  0187               	clrf	7
  5780  0CF9  3000               	movlw	0
  5781  0CFA  0481               	iorwf	1,f
  5782  0CFB  3141               	addfsr 1,1
  5783  0CFC  3000               	movlw	0
  5784  0CFD  0481               	iorwf	1,f
  5785  0CFE  3141               	addfsr 1,1
  5786  0CFF  3080               	movlw	128
  5787  0D00  0481               	iorwf	1,f
  5788  0D01  3141               	addfsr 1,1
  5789  0D02  3000               	movlw	0
  5790  0D03  0481               	iorwf	1,f
  5791  0D04  3073               	movlw	low (__div_to_l_@f2| 0)
  5792  0D05  0086               	movwf	6
  5793  0D06  0187               	clrf	7
  5794  0D07  30FF               	movlw	255
  5795  0D08  0581               	andwf	1,f
  5796  0D09  3141               	addfsr 1,1
  5797  0D0A  30FF               	movlw	255
  5798  0D0B  0581               	andwf	1,f
  5799  0D0C  3141               	addfsr 1,1
  5800  0D0D  30FF               	movlw	255
  5801  0D0E  0581               	andwf	1,f
  5802  0D0F  3141               	addfsr 1,1
  5803  0D10  3000               	movlw	0
  5804  0D11  0581               	andwf	1,f
  5805  0D12  3000               	movlw	0
  5806  0D13  00A3               	movwf	__div_to_l_@quot+3
  5807  0D14  3000               	movlw	0
  5808  0D15  00A2               	movwf	__div_to_l_@quot+2
  5809  0D16  3000               	movlw	0
  5810  0D17  00A1               	movwf	__div_to_l_@quot+1
  5811  0D18  3000               	movlw	0
  5812  0D19  00A0               	movwf	__div_to_l_@quot
  5813  0D1A  307F               	movlw	127
  5814  0D1B  02A5               	subwf	__div_to_l_@exp1,f
  5815  0D1C  30A0               	movlw	160
  5816  0D1D  0724               	addwf	__div_to_l_@cntr,w
  5817  0D1E  00F6               	movwf	??__div_to_l_
  5818  0D1F  0876               	movf	??__div_to_l_,w
  5819  0D20  02A5               	subwf	__div_to_l_@exp1,f
  5820  0D21  3020               	movlw	32
  5821  0D22  00F6               	movwf	??__div_to_l_
  5822  0D23  0876               	movf	??__div_to_l_,w
  5823  0D24  00A4               	movwf	__div_to_l_@cntr
  5824  0D25                     l2187:	
  5825  0D25  3001               	movlw	1
  5826  0D26                     u2965:	
  5827  0D26  35A0               	lslf	__div_to_l_@quot,f
  5828  0D27  0DA1               	rlf	__div_to_l_@quot+1,f
  5829  0D28  0DA2               	rlf	__div_to_l_@quot+2,f
  5830  0D29  0DA3               	rlf	__div_to_l_@quot+3,f
  5831  0D2A  0B89               	decfsz	9,f
  5832  0D2B  2D26               	goto	u2965
  5833  0D2C  3073               	movlw	low (__div_to_l_@f2| 0)
  5834  0D2D  0086               	movwf	6
  5835  0D2E  0187               	clrf	7
  5836  0D2F  3F40               	moviw [0]fsr1
  5837  0D30  00F6               	movwf	??__div_to_l_
  5838  0D31  3F41               	moviw [1]fsr1
  5839  0D32  00F7               	movwf	??__div_to_l_+1
  5840  0D33  3F42               	moviw [2]fsr1
  5841  0D34  00F8               	movwf	??__div_to_l_+2
  5842  0D35  3F43               	moviw [3]fsr1
  5843  0D36  00F9               	movwf	??__div_to_l_+3
  5844  0D37  3070               	movlw	low (__div_to_l_@f1| 0)
  5845  0D38  0086               	movwf	6
  5846  0D39  0187               	clrf	7
  5847  0D3A  3F40               	moviw [0]fsr1
  5848  0D3B  00FA               	movwf	??__div_to_l_+4
  5849  0D3C  3F41               	moviw [1]fsr1
  5850  0D3D  00FB               	movwf	??__div_to_l_+5
  5851  0D3E  3F42               	moviw [2]fsr1
  5852  0D3F  00FC               	movwf	??__div_to_l_+6
  5853  0D40  3F43               	moviw [3]fsr1
  5854  0D41  00FD               	movwf	??__div_to_l_+7
  5855  0D42  0879               	movf	??__div_to_l_+3,w
  5856  0D43  027D               	subwf	??__div_to_l_+7,w
  5857  0D44  1D03               	skipz
  5858  0D45  2D50               	goto	u2975
  5859  0D46  0878               	movf	??__div_to_l_+2,w
  5860  0D47  027C               	subwf	??__div_to_l_+6,w
  5861  0D48  1D03               	skipz
  5862  0D49  2D50               	goto	u2975
  5863  0D4A  0877               	movf	??__div_to_l_+1,w
  5864  0D4B  027B               	subwf	??__div_to_l_+5,w
  5865  0D4C  1D03               	skipz
  5866  0D4D  2D50               	goto	u2975
  5867  0D4E  0876               	movf	??__div_to_l_,w
  5868  0D4F  027A               	subwf	??__div_to_l_+4,w
  5869  0D50                     u2975:	
  5870  0D50  1C03               	skipc
  5871  0D51  2D6D               	goto	l2195
  5872  0D52  3073               	movlw	low (__div_to_l_@f2| 0)
  5873  0D53  0086               	movwf	6
  5874  0D54  0187               	clrf	7
  5875  0D55  3F40               	moviw [0]fsr1
  5876  0D56  00F6               	movwf	??__div_to_l_
  5877  0D57  3F41               	moviw [1]fsr1
  5878  0D58  00F7               	movwf	??__div_to_l_+1
  5879  0D59  3F42               	moviw [2]fsr1
  5880  0D5A  00F8               	movwf	??__div_to_l_+2
  5881  0D5B  3F43               	moviw [3]fsr1
  5882  0D5C  00F9               	movwf	??__div_to_l_+3
  5883  0D5D  3070               	movlw	low (__div_to_l_@f1| 0)
  5884  0D5E  0086               	movwf	6
  5885  0D5F  0187               	clrf	7
  5886  0D60  0876               	movf	??__div_to_l_,w
  5887  0D61  0281               	subwf	1,f
  5888  0D62  3141               	addfsr 1,1
  5889  0D63  0877               	movf	??__div_to_l_+1,w
  5890  0D64  3B81               	subwfb	1,f
  5891  0D65  3141               	addfsr 1,1
  5892  0D66  0878               	movf	??__div_to_l_+2,w
  5893  0D67  3B81               	subwfb	1,f
  5894  0D68  3141               	addfsr 1,1
  5895  0D69  0879               	movf	??__div_to_l_+3,w
  5896  0D6A  3B81               	subwfb	1,f
  5897  0D6B  317D               	addfsr 1,-3
  5898  0D6C  1420               	bsf	__div_to_l_@quot,0
  5899  0D6D                     l2195:	
  5900  0D6D  3070               	movlw	low (__div_to_l_@f1| 0)
  5901  0D6E  0086               	movwf	6
  5902  0D6F  0187               	clrf	7
  5903  0D70  3581               	lslf	1,f
  5904  0D71  3141               	addfsr 1,1
  5905  0D72  0D81               	rlf	1,f
  5906  0D73  3141               	addfsr 1,1
  5907  0D74  0D81               	rlf	1,f
  5908  0D75  3141               	addfsr 1,1
  5909  0D76  0D81               	rlf	1,f
  5910  0D77  317D               	addfsr 1,-3
  5911  0D78  3001               	movlw	1
  5912  0D79  02A4               	subwf	__div_to_l_@cntr,f
  5913  0D7A  1D03               	btfss	3,2
  5914  0D7B  2D25               	goto	l2187
  5915  0D7C  1FA5               	btfss	__div_to_l_@exp1,7
  5916  0D7D  2D9A               	goto	l2207
  5917  0D7E  0825               	movf	__div_to_l_@exp1,w
  5918  0D7F  3A80               	xorlw	128
  5919  0D80  3E9F               	addlw	159
  5920  0D81  1803               	skipnc
  5921  0D82  2D8C               	goto	l2205
  5922  0D83  3000               	movlw	0
  5923  0D84  00F3               	movwf	?__div_to_l_+3
  5924  0D85  3000               	movlw	0
  5925  0D86  00F2               	movwf	?__div_to_l_+2
  5926  0D87  3000               	movlw	0
  5927  0D88  00F1               	movwf	?__div_to_l_+1
  5928  0D89  3000               	movlw	0
  5929  0D8A  00F0               	movwf	?__div_to_l_
  5930  0D8B  0008               	return
  5931  0D8C                     l2205:	
  5932  0D8C  3001               	movlw	1
  5933  0D8D                     u3015:	
  5934  0D8D  36A3               	lsrf	__div_to_l_@quot+3,f
  5935  0D8E  0CA2               	rrf	__div_to_l_@quot+2,f
  5936  0D8F  0CA1               	rrf	__div_to_l_@quot+1,f
  5937  0D90  0CA0               	rrf	__div_to_l_@quot,f
  5938  0D91  0B89               	decfsz	9,f
  5939  0D92  2D8D               	goto	u3015
  5940  0D93  3001               	movlw	1
  5941  0D94  00F6               	movwf	??__div_to_l_
  5942  0D95  0876               	movf	??__div_to_l_,w
  5943  0D96  07A5               	addwf	__div_to_l_@exp1,f
  5944  0D97  1903               	btfsc	3,2
  5945  0D98  2DB3               	goto	l2215
  5946  0D99  2D8C               	goto	l2205
  5947  0D9A                     l2207:	
  5948  0D9A  3020               	movlw	32
  5949  0D9B  0225               	subwf	__div_to_l_@exp1,w
  5950  0D9C  1C03               	skipc
  5951  0D9D  2DB0               	goto	l510
  5952  0D9E  3000               	movlw	0
  5953  0D9F  00F3               	movwf	?__div_to_l_+3
  5954  0DA0  3000               	movlw	0
  5955  0DA1  00F2               	movwf	?__div_to_l_+2
  5956  0DA2  3000               	movlw	0
  5957  0DA3  00F1               	movwf	?__div_to_l_+1
  5958  0DA4  3000               	movlw	0
  5959  0DA5  00F0               	movwf	?__div_to_l_
  5960  0DA6  0008               	return
  5961  0DA7                     l2213:	
  5962  0DA7  3001               	movlw	1
  5963  0DA8                     u3045:	
  5964  0DA8  35A0               	lslf	__div_to_l_@quot,f
  5965  0DA9  0DA1               	rlf	__div_to_l_@quot+1,f
  5966  0DAA  0DA2               	rlf	__div_to_l_@quot+2,f
  5967  0DAB  0DA3               	rlf	__div_to_l_@quot+3,f
  5968  0DAC  0B89               	decfsz	9,f
  5969  0DAD  2DA8               	goto	u3045
  5970  0DAE  3001               	movlw	1
  5971  0DAF  02A5               	subwf	__div_to_l_@exp1,f
  5972  0DB0                     l510:	
  5973  0DB0  0825               	movf	__div_to_l_@exp1,w
  5974  0DB1  1D03               	btfss	3,2
  5975  0DB2  2DA7               	goto	l2213
  5976  0DB3                     l2215:	
  5977  0DB3  0823               	movf	__div_to_l_@quot+3,w
  5978  0DB4  00F3               	movwf	?__div_to_l_+3
  5979  0DB5  0822               	movf	__div_to_l_@quot+2,w
  5980  0DB6  00F2               	movwf	?__div_to_l_+2
  5981  0DB7  0821               	movf	__div_to_l_@quot+1,w
  5982  0DB8  00F1               	movwf	?__div_to_l_+1
  5983  0DB9  0820               	movf	__div_to_l_@quot,w
  5984  0DBA  00F0               	movwf	?__div_to_l_
  5985  0DBB  0008               	return
  5986  0DBC                     __end_of__div_to_l_:	
  5987                           
  5988                           	psect	text13
  5989  16C4                     __ptext13:	
  5990 ;; *************** function ___lltoft *****************
  5991 ;; Defined at:
  5992 ;;		line 35 in file "/Applications/microchip/xc8/v1.38/sources/common/lltoft.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  c               4    8[COMMON] unsigned long 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  exp             1   13[COMMON] unsigned char 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  3    8[COMMON] float 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0, pclath, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6006 ;;      Params:         4       0       0       0       0       0       0       0
  6007 ;;      Locals:         1       0       0       0       0       0       0       0
  6008 ;;      Temps:          1       0       0       0       0       0       0       0
  6009 ;;      Totals:         6       0       0       0       0       0       0       0
  6010 ;;Total ram usage:        6 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    1
  6013 ;; This function calls:
  6014 ;;		___ftpack
  6015 ;; This function is called by:
  6016 ;;		_printf
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function ___lltoft
  6022  16C4                     ___lltoft:	
  6023                           
  6024                           ;incstack = 0
  6025                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6026  16C4  308E               	movlw	142
  6027  16C5  00FC               	movwf	??___lltoft
  6028  16C6  087C               	movf	??___lltoft,w
  6029  16C7  00FD               	movwf	___lltoft@exp
  6030  16C8                     l2345:	
  6031  16C8  30FF               	movlw	255
  6032  16C9  057B               	andwf	___lltoft@c+3,w
  6033  16CA  1903               	btfsc	3,2
  6034  16CB  2ED8               	goto	l2347
  6035  16CC  3001               	movlw	1
  6036  16CD                     u3345:	
  6037  16CD  36FB               	lsrf	___lltoft@c+3,f
  6038  16CE  0CFA               	rrf	___lltoft@c+2,f
  6039  16CF  0CF9               	rrf	___lltoft@c+1,f
  6040  16D0  0CF8               	rrf	___lltoft@c,f
  6041  16D1  0B89               	decfsz	9,f
  6042  16D2  2ECD               	goto	u3345
  6043  16D3  3001               	movlw	1
  6044  16D4  00FC               	movwf	??___lltoft
  6045  16D5  087C               	movf	??___lltoft,w
  6046  16D6  07FD               	addwf	___lltoft@exp,f
  6047  16D7  2EC8               	goto	l2345
  6048  16D8                     l2347:	
  6049  16D8  0878               	movf	___lltoft@c,w
  6050  16D9  00F0               	movwf	___ftpack@arg
  6051  16DA  0879               	movf	___lltoft@c+1,w
  6052  16DB  00F1               	movwf	___ftpack@arg+1
  6053  16DC  087A               	movf	___lltoft@c+2,w
  6054  16DD  00F2               	movwf	___ftpack@arg+2
  6055  16DE  087D               	movf	___lltoft@exp,w
  6056  16DF  00FC               	movwf	??___lltoft
  6057  16E0  087C               	movf	??___lltoft,w
  6058  16E1  00F3               	movwf	___ftpack@exp
  6059  16E2  01F4               	clrf	___ftpack@sign
  6060  16E3  3180  2020         	fcall	___ftpack
  6061  16E5  0870               	movf	?___ftpack,w
  6062  16E6  00F8               	movwf	?___lltoft
  6063  16E7  0871               	movf	?___ftpack+1,w
  6064  16E8  00F9               	movwf	?___lltoft+1
  6065  16E9  0872               	movf	?___ftpack+2,w
  6066  16EA  00FA               	movwf	?___lltoft+2
  6067  16EB  0008               	return
  6068  16EC                     __end_of___lltoft:	
  6069                           
  6070                           	psect	text14
  6071  1727                     __ptext14:	
  6072 ;; *************** function ___llmod *****************
  6073 ;; Defined at:
  6074 ;;		line 6 in file "/Applications/microchip/xc8/v1.38/sources/common/llmod.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  divisor         4    0[COMMON] unsigned long 
  6077 ;;  dividend        4    4[COMMON] unsigned long 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  counter         1    9[COMMON] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  4    0[COMMON] unsigned long 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6089 ;;      Params:         8       0       0       0       0       0       0       0
  6090 ;;      Locals:         1       0       0       0       0       0       0       0
  6091 ;;      Temps:          1       0       0       0       0       0       0       0
  6092 ;;      Totals:        10       0       0       0       0       0       0       0
  6093 ;;Total ram usage:       10 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_printf
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function ___llmod
  6104  1727                     ___llmod:	
  6105                           
  6106                           ;incstack = 0
  6107                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6108  1727  0873               	movf	___llmod@divisor+3,w
  6109  1728  0472               	iorwf	___llmod@divisor+2,w
  6110  1729  0471               	iorwf	___llmod@divisor+1,w
  6111  172A  0470               	iorwf	___llmod@divisor,w
  6112  172B  1903               	skipnz
  6113  172C  2F60               	goto	l2337
  6114  172D  01F9               	clrf	___llmod@counter
  6115  172E  0AF9               	incf	___llmod@counter,f
  6116  172F                     l2327:	
  6117  172F  1BF3               	btfsc	___llmod@divisor+3,7
  6118  1730  2F3D               	goto	l2329
  6119  1731  3001               	movlw	1
  6120  1732                     u3295:	
  6121  1732  35F0               	lslf	___llmod@divisor,f
  6122  1733  0DF1               	rlf	___llmod@divisor+1,f
  6123  1734  0DF2               	rlf	___llmod@divisor+2,f
  6124  1735  0DF3               	rlf	___llmod@divisor+3,f
  6125  1736  0B89               	decfsz	9,f
  6126  1737  2F32               	goto	u3295
  6127  1738  3001               	movlw	1
  6128  1739  00F8               	movwf	??___llmod
  6129  173A  0878               	movf	??___llmod,w
  6130  173B  07F9               	addwf	___llmod@counter,f
  6131  173C  2F2F               	goto	l2327
  6132  173D                     l2329:	
  6133  173D  0873               	movf	___llmod@divisor+3,w
  6134  173E  0277               	subwf	___llmod@dividend+3,w
  6135  173F  1D03               	skipz
  6136  1740  2F4B               	goto	u3315
  6137  1741  0872               	movf	___llmod@divisor+2,w
  6138  1742  0276               	subwf	___llmod@dividend+2,w
  6139  1743  1D03               	skipz
  6140  1744  2F4B               	goto	u3315
  6141  1745  0871               	movf	___llmod@divisor+1,w
  6142  1746  0275               	subwf	___llmod@dividend+1,w
  6143  1747  1D03               	skipz
  6144  1748  2F4B               	goto	u3315
  6145  1749  0870               	movf	___llmod@divisor,w
  6146  174A  0274               	subwf	___llmod@dividend,w
  6147  174B                     u3315:	
  6148  174B  1C03               	skipc
  6149  174C  2F55               	goto	l2333
  6150  174D  0870               	movf	___llmod@divisor,w
  6151  174E  02F4               	subwf	___llmod@dividend,f
  6152  174F  0871               	movf	___llmod@divisor+1,w
  6153  1750  3BF5               	subwfb	___llmod@dividend+1,f
  6154  1751  0872               	movf	___llmod@divisor+2,w
  6155  1752  3BF6               	subwfb	___llmod@dividend+2,f
  6156  1753  0873               	movf	___llmod@divisor+3,w
  6157  1754  3BF7               	subwfb	___llmod@dividend+3,f
  6158  1755                     l2333:	
  6159  1755  3001               	movlw	1
  6160  1756                     u3325:	
  6161  1756  36F3               	lsrf	___llmod@divisor+3,f
  6162  1757  0CF2               	rrf	___llmod@divisor+2,f
  6163  1758  0CF1               	rrf	___llmod@divisor+1,f
  6164  1759  0CF0               	rrf	___llmod@divisor,f
  6165  175A  0B89               	decfsz	9,f
  6166  175B  2F56               	goto	u3325
  6167  175C  3001               	movlw	1
  6168  175D  02F9               	subwf	___llmod@counter,f
  6169  175E  1D03               	btfss	3,2
  6170  175F  2F3D               	goto	l2329
  6171  1760                     l2337:	
  6172  1760  0877               	movf	___llmod@dividend+3,w
  6173  1761  00F3               	movwf	?___llmod+3
  6174  1762  0876               	movf	___llmod@dividend+2,w
  6175  1763  00F2               	movwf	?___llmod+2
  6176  1764  0875               	movf	___llmod@dividend+1,w
  6177  1765  00F1               	movwf	?___llmod+1
  6178  1766  0874               	movf	___llmod@dividend,w
  6179  1767  00F0               	movwf	?___llmod
  6180  1768  0008               	return
  6181  1769                     __end_of___llmod:	
  6182                           
  6183                           	psect	text15
  6184  17AE                     __ptext15:	
  6185 ;; *************** function ___lldiv *****************
  6186 ;; Defined at:
  6187 ;;		line 6 in file "/Applications/microchip/xc8/v1.38/sources/common/lldiv.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  divisor         4    0[COMMON] unsigned long 
  6190 ;;  dividend        4    4[COMMON] unsigned long 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  quotient        4    9[COMMON] unsigned long 
  6193 ;;  counter         1   13[COMMON] unsigned char 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  4    0[COMMON] unsigned long 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6203 ;;      Params:         8       0       0       0       0       0       0       0
  6204 ;;      Locals:         5       0       0       0       0       0       0       0
  6205 ;;      Temps:          1       0       0       0       0       0       0       0
  6206 ;;      Totals:        14       0       0       0       0       0       0       0
  6207 ;;Total ram usage:       14 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_printf
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function ___lldiv
  6218  17AE                     ___lldiv:	
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6222  17AE  3000               	movlw	0
  6223  17AF  00FC               	movwf	___lldiv@quotient+3
  6224  17B0  3000               	movlw	0
  6225  17B1  00FB               	movwf	___lldiv@quotient+2
  6226  17B2  3000               	movlw	0
  6227  17B3  00FA               	movwf	___lldiv@quotient+1
  6228  17B4  3000               	movlw	0
  6229  17B5  00F9               	movwf	___lldiv@quotient
  6230  17B6  0873               	movf	___lldiv@divisor+3,w
  6231  17B7  0472               	iorwf	___lldiv@divisor+2,w
  6232  17B8  0471               	iorwf	___lldiv@divisor+1,w
  6233  17B9  0470               	iorwf	___lldiv@divisor,w
  6234  17BA  1903               	skipnz
  6235  17BB  2FF7               	goto	l2317
  6236  17BC  01FD               	clrf	___lldiv@counter
  6237  17BD  0AFD               	incf	___lldiv@counter,f
  6238  17BE                     l2303:	
  6239  17BE  1BF3               	btfsc	___lldiv@divisor+3,7
  6240  17BF  2FCC               	goto	l2305
  6241  17C0  3001               	movlw	1
  6242  17C1                     u3225:	
  6243  17C1  35F0               	lslf	___lldiv@divisor,f
  6244  17C2  0DF1               	rlf	___lldiv@divisor+1,f
  6245  17C3  0DF2               	rlf	___lldiv@divisor+2,f
  6246  17C4  0DF3               	rlf	___lldiv@divisor+3,f
  6247  17C5  0B89               	decfsz	9,f
  6248  17C6  2FC1               	goto	u3225
  6249  17C7  3001               	movlw	1
  6250  17C8  00F8               	movwf	??___lldiv
  6251  17C9  0878               	movf	??___lldiv,w
  6252  17CA  07FD               	addwf	___lldiv@counter,f
  6253  17CB  2FBE               	goto	l2303
  6254  17CC                     l2305:	
  6255  17CC  3001               	movlw	1
  6256  17CD                     u3245:	
  6257  17CD  35F9               	lslf	___lldiv@quotient,f
  6258  17CE  0DFA               	rlf	___lldiv@quotient+1,f
  6259  17CF  0DFB               	rlf	___lldiv@quotient+2,f
  6260  17D0  0DFC               	rlf	___lldiv@quotient+3,f
  6261  17D1  0B89               	decfsz	9,f
  6262  17D2  2FCD               	goto	u3245
  6263  17D3  0873               	movf	___lldiv@divisor+3,w
  6264  17D4  0277               	subwf	___lldiv@dividend+3,w
  6265  17D5  1D03               	skipz
  6266  17D6  2FE1               	goto	u3255
  6267  17D7  0872               	movf	___lldiv@divisor+2,w
  6268  17D8  0276               	subwf	___lldiv@dividend+2,w
  6269  17D9  1D03               	skipz
  6270  17DA  2FE1               	goto	u3255
  6271  17DB  0871               	movf	___lldiv@divisor+1,w
  6272  17DC  0275               	subwf	___lldiv@dividend+1,w
  6273  17DD  1D03               	skipz
  6274  17DE  2FE1               	goto	u3255
  6275  17DF  0870               	movf	___lldiv@divisor,w
  6276  17E0  0274               	subwf	___lldiv@dividend,w
  6277  17E1                     u3255:	
  6278  17E1  1C03               	skipc
  6279  17E2  2FEC               	goto	l2313
  6280  17E3  0870               	movf	___lldiv@divisor,w
  6281  17E4  02F4               	subwf	___lldiv@dividend,f
  6282  17E5  0871               	movf	___lldiv@divisor+1,w
  6283  17E6  3BF5               	subwfb	___lldiv@dividend+1,f
  6284  17E7  0872               	movf	___lldiv@divisor+2,w
  6285  17E8  3BF6               	subwfb	___lldiv@dividend+2,f
  6286  17E9  0873               	movf	___lldiv@divisor+3,w
  6287  17EA  3BF7               	subwfb	___lldiv@dividend+3,f
  6288  17EB  1479               	bsf	___lldiv@quotient,0
  6289  17EC                     l2313:	
  6290  17EC  3001               	movlw	1
  6291  17ED                     u3265:	
  6292  17ED  36F3               	lsrf	___lldiv@divisor+3,f
  6293  17EE  0CF2               	rrf	___lldiv@divisor+2,f
  6294  17EF  0CF1               	rrf	___lldiv@divisor+1,f
  6295  17F0  0CF0               	rrf	___lldiv@divisor,f
  6296  17F1  0B89               	decfsz	9,f
  6297  17F2  2FED               	goto	u3265
  6298  17F3  3001               	movlw	1
  6299  17F4  02FD               	subwf	___lldiv@counter,f
  6300  17F5  1D03               	btfss	3,2
  6301  17F6  2FCC               	goto	l2305
  6302  17F7                     l2317:	
  6303  17F7  087C               	movf	___lldiv@quotient+3,w
  6304  17F8  00F3               	movwf	?___lldiv+3
  6305  17F9  087B               	movf	___lldiv@quotient+2,w
  6306  17FA  00F2               	movwf	?___lldiv+2
  6307  17FB  087A               	movf	___lldiv@quotient+1,w
  6308  17FC  00F1               	movwf	?___lldiv+1
  6309  17FD  0879               	movf	___lldiv@quotient,w
  6310  17FE  00F0               	movwf	?___lldiv
  6311  17FF  0008               	return
  6312  1800                     __end_of___lldiv:	
  6313                           
  6314                           	psect	text16
  6315  0856                     __ptext16:	
  6316 ;; *************** function ___fttol *****************
  6317 ;; Defined at:
  6318 ;;		line 44 in file "/Applications/microchip/xc8/v1.38/sources/common/fttol.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  f1              3   33[BANK0 ] float 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  lval            4   42[BANK0 ] unsigned long 
  6323 ;;  exp1            1   46[BANK0 ] unsigned char 
  6324 ;;  sign1           1   41[BANK0 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  4   33[BANK0 ] long 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6334 ;;      Params:         0       4       0       0       0       0       0       0
  6335 ;;      Locals:         0       6       0       0       0       0       0       0
  6336 ;;      Temps:          0       4       0       0       0       0       0       0
  6337 ;;      Totals:         0      14       0       0       0       0       0       0
  6338 ;;Total ram usage:       14 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_printf
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           
  6348                           ;psect for function ___fttol
  6349  0856                     ___fttol:	
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6353  0856  0020               	movlb	0	; select bank0
  6354  0857  0841               	movf	___fttol@f1,w
  6355  0858  00C5               	movwf	??___fttol
  6356  0859  0842               	movf	___fttol@f1+1,w
  6357  085A  00C6               	movwf	??___fttol+1
  6358  085B  0843               	movf	___fttol@f1+2,w
  6359  085C  00C7               	movwf	??___fttol+2
  6360  085D  1003               	clrc
  6361  085E  0D46               	rlf	??___fttol+1,w
  6362  085F  0D47               	rlf	??___fttol+2,w
  6363  0860  00C8               	movwf	??___fttol+3
  6364  0861  0848               	movf	??___fttol+3,w
  6365  0862  00CE               	movwf	___fttol@exp1
  6366  0863  084E               	movf	___fttol@exp1,w
  6367  0864  1D03               	btfss	3,2
  6368  0865  286F               	goto	l2261
  6369  0866  3000               	movlw	0
  6370  0867  00C4               	movwf	?___fttol+3
  6371  0868  3000               	movlw	0
  6372  0869  00C3               	movwf	?___fttol+2
  6373  086A  3000               	movlw	0
  6374  086B  00C2               	movwf	?___fttol+1
  6375  086C  3000               	movlw	0
  6376  086D  00C1               	movwf	?___fttol
  6377  086E  0008               	return
  6378  086F                     l2261:	
  6379  086F  0841               	movf	___fttol@f1,w
  6380  0870  00C5               	movwf	??___fttol
  6381  0871  0842               	movf	___fttol@f1+1,w
  6382  0872  00C6               	movwf	??___fttol+1
  6383  0873  0843               	movf	___fttol@f1+2,w
  6384  0874  00C7               	movwf	??___fttol+2
  6385  0875  3017               	movlw	23
  6386  0876                     u3125:	
  6387  0876  36C7               	lsrf	??___fttol+2,f
  6388  0877  0CC6               	rrf	??___fttol+1,f
  6389  0878  0CC5               	rrf	??___fttol,f
  6390  0879  0B89               	decfsz	9,f
  6391  087A  2876               	goto	u3125
  6392  087B  0845               	movf	??___fttol,w
  6393  087C  00C8               	movwf	??___fttol+3
  6394  087D  0848               	movf	??___fttol+3,w
  6395  087E  00C9               	movwf	___fttol@sign1
  6396  087F  17C2               	bsf	___fttol@f1+1,7
  6397  0880  30FF               	movlw	255
  6398  0881  05C1               	andwf	___fttol@f1,f
  6399  0882  30FF               	movlw	255
  6400  0883  05C2               	andwf	___fttol@f1+1,f
  6401  0884  3000               	movlw	0
  6402  0885  05C3               	andwf	___fttol@f1+2,f
  6403  0886  0841               	movf	___fttol@f1,w
  6404  0887  00CA               	movwf	___fttol@lval
  6405  0888  0842               	movf	___fttol@f1+1,w
  6406  0889  00CB               	movwf	___fttol@lval+1
  6407  088A  0843               	movf	___fttol@f1+2,w
  6408  088B  00CC               	movwf	___fttol@lval+2
  6409  088C  01CD               	clrf	___fttol@lval+3
  6410  088D  308E               	movlw	142
  6411  088E  02CE               	subwf	___fttol@exp1,f
  6412  088F  1FCE               	btfss	___fttol@exp1,7
  6413  0890  28AD               	goto	l2281
  6414  0891  084E               	movf	___fttol@exp1,w
  6415  0892  3A80               	xorlw	128
  6416  0893  3E8F               	addlw	143
  6417  0894  1803               	skipnc
  6418  0895  289F               	goto	l2279
  6419  0896  3000               	movlw	0
  6420  0897  00C4               	movwf	?___fttol+3
  6421  0898  3000               	movlw	0
  6422  0899  00C3               	movwf	?___fttol+2
  6423  089A  3000               	movlw	0
  6424  089B  00C2               	movwf	?___fttol+1
  6425  089C  3000               	movlw	0
  6426  089D  00C1               	movwf	?___fttol
  6427  089E  0008               	return
  6428  089F                     l2279:	
  6429  089F  3001               	movlw	1
  6430  08A0                     u3155:	
  6431  08A0  36CD               	lsrf	___fttol@lval+3,f
  6432  08A1  0CCC               	rrf	___fttol@lval+2,f
  6433  08A2  0CCB               	rrf	___fttol@lval+1,f
  6434  08A3  0CCA               	rrf	___fttol@lval,f
  6435  08A4  0B89               	decfsz	9,f
  6436  08A5  28A0               	goto	u3155
  6437  08A6  3001               	movlw	1
  6438  08A7  00C5               	movwf	??___fttol
  6439  08A8  0845               	movf	??___fttol,w
  6440  08A9  07CE               	addwf	___fttol@exp1,f
  6441  08AA  1903               	btfsc	3,2
  6442  08AB  28C6               	goto	l2289
  6443  08AC  289F               	goto	l2279
  6444  08AD                     l2281:	
  6445  08AD  3018               	movlw	24
  6446  08AE  024E               	subwf	___fttol@exp1,w
  6447  08AF  1C03               	skipc
  6448  08B0  28C3               	goto	l630
  6449  08B1  3000               	movlw	0
  6450  08B2  00C4               	movwf	?___fttol+3
  6451  08B3  3000               	movlw	0
  6452  08B4  00C3               	movwf	?___fttol+2
  6453  08B5  3000               	movlw	0
  6454  08B6  00C2               	movwf	?___fttol+1
  6455  08B7  3000               	movlw	0
  6456  08B8  00C1               	movwf	?___fttol
  6457  08B9  0008               	return
  6458  08BA                     l2287:	
  6459  08BA  3001               	movlw	1
  6460  08BB                     u3185:	
  6461  08BB  35CA               	lslf	___fttol@lval,f
  6462  08BC  0DCB               	rlf	___fttol@lval+1,f
  6463  08BD  0DCC               	rlf	___fttol@lval+2,f
  6464  08BE  0DCD               	rlf	___fttol@lval+3,f
  6465  08BF  0B89               	decfsz	9,f
  6466  08C0  28BB               	goto	u3185
  6467  08C1  3001               	movlw	1
  6468  08C2  02CE               	subwf	___fttol@exp1,f
  6469  08C3                     l630:	
  6470  08C3  084E               	movf	___fttol@exp1,w
  6471  08C4  1D03               	btfss	3,2
  6472  08C5  28BA               	goto	l2287
  6473  08C6                     l2289:	
  6474  08C6  0849               	movf	___fttol@sign1,w
  6475  08C7  1903               	btfsc	3,2
  6476  08C8  28D4               	goto	l2293
  6477  08C9  09CA               	comf	___fttol@lval,f
  6478  08CA  09CB               	comf	___fttol@lval+1,f
  6479  08CB  09CC               	comf	___fttol@lval+2,f
  6480  08CC  09CD               	comf	___fttol@lval+3,f
  6481  08CD  0ACA               	incf	___fttol@lval,f
  6482  08CE  1903               	skipnz
  6483  08CF  0ACB               	incf	___fttol@lval+1,f
  6484  08D0  1903               	skipnz
  6485  08D1  0ACC               	incf	___fttol@lval+2,f
  6486  08D2  1903               	skipnz
  6487  08D3  0ACD               	incf	___fttol@lval+3,f
  6488  08D4                     l2293:	
  6489  08D4  084D               	movf	___fttol@lval+3,w
  6490  08D5  00C4               	movwf	?___fttol+3
  6491  08D6  084C               	movf	___fttol@lval+2,w
  6492  08D7  00C3               	movwf	?___fttol+2
  6493  08D8  084B               	movf	___fttol@lval+1,w
  6494  08D9  00C2               	movwf	?___fttol+1
  6495  08DA  084A               	movf	___fttol@lval,w
  6496  08DB  00C1               	movwf	?___fttol
  6497  08DC  0008               	return
  6498  08DD                     __end_of___fttol:	
  6499                           
  6500                           	psect	text17
  6501  167F                     __ptext17:	
  6502 ;; *************** function ___ftsub *****************
  6503 ;; Defined at:
  6504 ;;		line 18 in file "/Applications/microchip/xc8/v1.38/sources/common/ftsub.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  f2              3   51[BANK0 ] float 
  6507 ;;  f1              3   54[BANK0 ] float 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  3   51[BANK0 ] float 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6519 ;;      Params:         0       6       0       0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0
  6522 ;;      Totals:         0       6       0       0       0       0       0       0
  6523 ;;Total ram usage:        6 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    2
  6526 ;; This function calls:
  6527 ;;		___ftadd
  6528 ;; This function is called by:
  6529 ;;		_printf
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           
  6534                           ;psect for function ___ftsub
  6535  167F                     ___ftsub:	
  6536                           
  6537                           ;incstack = 0
  6538                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6539  167F  0020               	movlb	0	; select bank0
  6540  1680  0855               	movf	___ftsub@f2+2,w
  6541  1681  0454               	iorwf	___ftsub@f2+1,w
  6542  1682  0453               	iorwf	___ftsub@f2,w
  6543  1683  1903               	skipnz
  6544  1684  2E87               	goto	l2251
  6545  1685  3080               	movlw	128
  6546  1686  06D5               	xorwf	___ftsub@f2+2,f
  6547  1687                     l2251:	
  6548  1687  0856               	movf	___ftsub@f1,w
  6549  1688  00C6               	movwf	___ftadd@f1
  6550  1689  0857               	movf	___ftsub@f1+1,w
  6551  168A  00C7               	movwf	___ftadd@f1+1
  6552  168B  0858               	movf	___ftsub@f1+2,w
  6553  168C  00C8               	movwf	___ftadd@f1+2
  6554  168D  0853               	movf	___ftsub@f2,w
  6555  168E  00C9               	movwf	___ftadd@f2
  6556  168F  0854               	movf	___ftsub@f2+1,w
  6557  1690  00CA               	movwf	___ftadd@f2+1
  6558  1691  0855               	movf	___ftsub@f2+2,w
  6559  1692  00CB               	movwf	___ftadd@f2+2
  6560  1693  318B  23A9         	fcall	___ftadd
  6561  1695  0020               	movlb	0	; select bank0
  6562  1696  0846               	movf	?___ftadd,w
  6563  1697  00D3               	movwf	?___ftsub
  6564  1698  0847               	movf	?___ftadd+1,w
  6565  1699  00D4               	movwf	?___ftsub+1
  6566  169A  0848               	movf	?___ftadd+2,w
  6567  169B  00D5               	movwf	?___ftsub+2
  6568  169C  0008               	return
  6569  169D                     __end_of___ftsub:	
  6570                           
  6571                           	psect	text18
  6572  0BA9                     __ptext18:	
  6573 ;; *************** function ___ftadd *****************
  6574 ;; Defined at:
  6575 ;;		line 86 in file "/Applications/microchip/xc8/v1.38/sources/common/ftadd.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  f1              3   38[BANK0 ] float 
  6578 ;;  f2              3   41[BANK0 ] float 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  exp1            1   50[BANK0 ] unsigned char 
  6581 ;;  exp2            1   49[BANK0 ] unsigned char 
  6582 ;;  sign            1   48[BANK0 ] unsigned char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  3   38[BANK0 ] float 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2, status,0, pclath, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6592 ;;      Params:         0       6       0       0       0       0       0       0
  6593 ;;      Locals:         0       3       0       0       0       0       0       0
  6594 ;;      Temps:          0       4       0       0       0       0       0       0
  6595 ;;      Totals:         0      13       0       0       0       0       0       0
  6596 ;;Total ram usage:       13 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    1
  6599 ;; This function calls:
  6600 ;;		___ftpack
  6601 ;; This function is called by:
  6602 ;;		_printf
  6603 ;;		___ftsub
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           
  6608                           ;psect for function ___ftadd
  6609  0BA9                     ___ftadd:	
  6610                           
  6611                           ;incstack = 0
  6612                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6613  0BA9  0020               	movlb	0	; select bank0
  6614  0BAA  0846               	movf	___ftadd@f1,w
  6615  0BAB  00CC               	movwf	??___ftadd
  6616  0BAC  0847               	movf	___ftadd@f1+1,w
  6617  0BAD  00CD               	movwf	??___ftadd+1
  6618  0BAE  0848               	movf	___ftadd@f1+2,w
  6619  0BAF  00CE               	movwf	??___ftadd+2
  6620  0BB0  1003               	clrc
  6621  0BB1  0D4D               	rlf	??___ftadd+1,w
  6622  0BB2  0D4E               	rlf	??___ftadd+2,w
  6623  0BB3  00CF               	movwf	??___ftadd+3
  6624  0BB4  084F               	movf	??___ftadd+3,w
  6625  0BB5  00D2               	movwf	___ftadd@exp1
  6626  0BB6  0849               	movf	___ftadd@f2,w
  6627  0BB7  00CC               	movwf	??___ftadd
  6628  0BB8  084A               	movf	___ftadd@f2+1,w
  6629  0BB9  00CD               	movwf	??___ftadd+1
  6630  0BBA  084B               	movf	___ftadd@f2+2,w
  6631  0BBB  00CE               	movwf	??___ftadd+2
  6632  0BBC  1003               	clrc
  6633  0BBD  0D4D               	rlf	??___ftadd+1,w
  6634  0BBE  0D4E               	rlf	??___ftadd+2,w
  6635  0BBF  00CF               	movwf	??___ftadd+3
  6636  0BC0  084F               	movf	??___ftadd+3,w
  6637  0BC1  00D1               	movwf	___ftadd@exp2
  6638  0BC2  0852               	movf	___ftadd@exp1,w
  6639  0BC3  1903               	btfsc	3,2
  6640  0BC4  2BD1               	goto	l1881
  6641  0BC5  0851               	movf	___ftadd@exp2,w
  6642  0BC6  0252               	subwf	___ftadd@exp1,w
  6643  0BC7  1803               	skipnc
  6644  0BC8  2BD8               	goto	l1885
  6645  0BC9  0352               	decf	___ftadd@exp1,w
  6646  0BCA  3AFF               	xorlw	255
  6647  0BCB  0751               	addwf	___ftadd@exp2,w
  6648  0BCC  00CC               	movwf	??___ftadd
  6649  0BCD  3019               	movlw	25
  6650  0BCE  024C               	subwf	??___ftadd,w
  6651  0BCF  1C03               	skipc
  6652  0BD0  2BD8               	goto	l1885
  6653  0BD1                     l1881:	
  6654  0BD1  0849               	movf	___ftadd@f2,w
  6655  0BD2  00C6               	movwf	?___ftadd
  6656  0BD3  084A               	movf	___ftadd@f2+1,w
  6657  0BD4  00C7               	movwf	?___ftadd+1
  6658  0BD5  084B               	movf	___ftadd@f2+2,w
  6659  0BD6  00C8               	movwf	?___ftadd+2
  6660  0BD7  0008               	return
  6661  0BD8                     l1885:	
  6662  0BD8  0851               	movf	___ftadd@exp2,w
  6663  0BD9  1903               	btfsc	3,2
  6664  0BDA  0008               	return
  6665  0BDB  0852               	movf	___ftadd@exp1,w
  6666  0BDC  0251               	subwf	___ftadd@exp2,w
  6667  0BDD  1803               	skipnc
  6668  0BDE  2BE7               	goto	l1891
  6669  0BDF  0351               	decf	___ftadd@exp2,w
  6670  0BE0  3AFF               	xorlw	255
  6671  0BE1  0752               	addwf	___ftadd@exp1,w
  6672  0BE2  00CC               	movwf	??___ftadd
  6673  0BE3  3019               	movlw	25
  6674  0BE4  024C               	subwf	??___ftadd,w
  6675  0BE5  1803               	btfsc	3,0
  6676  0BE6  0008               	return
  6677  0BE7                     l1891:	
  6678  0BE7  3006               	movlw	6
  6679  0BE8  00CC               	movwf	??___ftadd
  6680  0BE9  084C               	movf	??___ftadd,w
  6681  0BEA  00D0               	movwf	___ftadd@sign
  6682  0BEB  1BC8               	btfsc	___ftadd@f1+2,7
  6683  0BEC  17D0               	bsf	___ftadd@sign,7
  6684  0BED  1BCB               	btfsc	___ftadd@f2+2,7
  6685  0BEE  1750               	bsf	___ftadd@sign,6
  6686  0BEF  17C7               	bsf	___ftadd@f1+1,7
  6687  0BF0  30FF               	movlw	255
  6688  0BF1  05C6               	andwf	___ftadd@f1,f
  6689  0BF2  30FF               	movlw	255
  6690  0BF3  05C7               	andwf	___ftadd@f1+1,f
  6691  0BF4  3000               	movlw	0
  6692  0BF5  05C8               	andwf	___ftadd@f1+2,f
  6693  0BF6  17CA               	bsf	___ftadd@f2+1,7
  6694  0BF7  30FF               	movlw	255
  6695  0BF8  05C9               	andwf	___ftadd@f2,f
  6696  0BF9  30FF               	movlw	255
  6697  0BFA  05CA               	andwf	___ftadd@f2+1,f
  6698  0BFB  3000               	movlw	0
  6699  0BFC  05CB               	andwf	___ftadd@f2+2,f
  6700  0BFD  0851               	movf	___ftadd@exp2,w
  6701  0BFE  0252               	subwf	___ftadd@exp1,w
  6702  0BFF  1803               	skipnc
  6703  0C00  2C23               	goto	l1913
  6704  0C01                     l1903:	
  6705  0C01  3001               	movlw	1
  6706  0C02                     u2465:	
  6707  0C02  35C9               	lslf	___ftadd@f2,f
  6708  0C03  0DCA               	rlf	___ftadd@f2+1,f
  6709  0C04  0DCB               	rlf	___ftadd@f2+2,f
  6710  0C05  0B89               	decfsz	9,f
  6711  0C06  2C02               	goto	u2465
  6712  0C07  3001               	movlw	1
  6713  0C08  02D1               	subwf	___ftadd@exp2,f
  6714  0C09  0851               	movf	___ftadd@exp2,w
  6715  0C0A  0652               	xorwf	___ftadd@exp1,w
  6716  0C0B  1903               	skipnz
  6717  0C0C  2C1E               	goto	l1911
  6718  0C0D  3001               	movlw	1
  6719  0C0E  02D0               	subwf	___ftadd@sign,f
  6720  0C0F  0850               	movf	___ftadd@sign,w
  6721  0C10  3907               	andlw	7
  6722  0C11  1903               	btfsc	3,2
  6723  0C12  2C1E               	goto	l1911
  6724  0C13  2C01               	goto	l1903
  6725  0C14                     l1909:	
  6726  0C14  3001               	movlw	1
  6727  0C15                     u2495:	
  6728  0C15  36C8               	lsrf	___ftadd@f1+2,f
  6729  0C16  0CC7               	rrf	___ftadd@f1+1,f
  6730  0C17  0CC6               	rrf	___ftadd@f1,f
  6731  0C18  0B89               	decfsz	9,f
  6732  0C19  2C15               	goto	u2495
  6733  0C1A  3001               	movlw	1
  6734  0C1B  00CC               	movwf	??___ftadd
  6735  0C1C  084C               	movf	??___ftadd,w
  6736  0C1D  07D2               	addwf	___ftadd@exp1,f
  6737  0C1E                     l1911:	
  6738  0C1E  0852               	movf	___ftadd@exp1,w
  6739  0C1F  0651               	xorwf	___ftadd@exp2,w
  6740  0C20  1903               	btfsc	3,2
  6741  0C21  2C48               	goto	l553
  6742  0C22  2C14               	goto	l1909
  6743  0C23                     l1913:	
  6744  0C23  0852               	movf	___ftadd@exp1,w
  6745  0C24  0251               	subwf	___ftadd@exp2,w
  6746  0C25  1803               	skipnc
  6747  0C26  2C48               	goto	l553
  6748  0C27                     l1915:	
  6749  0C27  3001               	movlw	1
  6750  0C28                     u2525:	
  6751  0C28  35C6               	lslf	___ftadd@f1,f
  6752  0C29  0DC7               	rlf	___ftadd@f1+1,f
  6753  0C2A  0DC8               	rlf	___ftadd@f1+2,f
  6754  0C2B  0B89               	decfsz	9,f
  6755  0C2C  2C28               	goto	u2525
  6756  0C2D  3001               	movlw	1
  6757  0C2E  02D2               	subwf	___ftadd@exp1,f
  6758  0C2F  0851               	movf	___ftadd@exp2,w
  6759  0C30  0652               	xorwf	___ftadd@exp1,w
  6760  0C31  1903               	skipnz
  6761  0C32  2C44               	goto	l1923
  6762  0C33  3001               	movlw	1
  6763  0C34  02D0               	subwf	___ftadd@sign,f
  6764  0C35  0850               	movf	___ftadd@sign,w
  6765  0C36  3907               	andlw	7
  6766  0C37  1903               	btfsc	3,2
  6767  0C38  2C44               	goto	l1923
  6768  0C39  2C27               	goto	l1915
  6769  0C3A                     l1921:	
  6770  0C3A  3001               	movlw	1
  6771  0C3B                     u2555:	
  6772  0C3B  36CB               	lsrf	___ftadd@f2+2,f
  6773  0C3C  0CCA               	rrf	___ftadd@f2+1,f
  6774  0C3D  0CC9               	rrf	___ftadd@f2,f
  6775  0C3E  0B89               	decfsz	9,f
  6776  0C3F  2C3B               	goto	u2555
  6777  0C40  3001               	movlw	1
  6778  0C41  00CC               	movwf	??___ftadd
  6779  0C42  084C               	movf	??___ftadd,w
  6780  0C43  07D1               	addwf	___ftadd@exp2,f
  6781  0C44                     l1923:	
  6782  0C44  0852               	movf	___ftadd@exp1,w
  6783  0C45  0651               	xorwf	___ftadd@exp2,w
  6784  0C46  1D03               	skipz
  6785  0C47  2C3A               	goto	l1921
  6786  0C48                     l553:	
  6787  0C48  1FD0               	btfss	___ftadd@sign,7
  6788  0C49  2C5A               	goto	l1927
  6789  0C4A  30FF               	movlw	255
  6790  0C4B  06C6               	xorwf	___ftadd@f1,f
  6791  0C4C  30FF               	movlw	255
  6792  0C4D  06C7               	xorwf	___ftadd@f1+1,f
  6793  0C4E  30FF               	movlw	255
  6794  0C4F  06C8               	xorwf	___ftadd@f1+2,f
  6795  0C50  3001               	movlw	1
  6796  0C51  07C6               	addwf	___ftadd@f1,f
  6797  0C52  3000               	movlw	0
  6798  0C53  1803               	skipnc
  6799  0C54  3001               	movlw	1
  6800  0C55  07C7               	addwf	___ftadd@f1+1,f
  6801  0C56  3000               	movlw	0
  6802  0C57  1803               	skipnc
  6803  0C58  3001               	movlw	1
  6804  0C59  07C8               	addwf	___ftadd@f1+2,f
  6805  0C5A                     l1927:	
  6806  0C5A  1F50               	btfss	___ftadd@sign,6
  6807  0C5B  2C6C               	goto	l1931
  6808  0C5C  30FF               	movlw	255
  6809  0C5D  06C9               	xorwf	___ftadd@f2,f
  6810  0C5E  30FF               	movlw	255
  6811  0C5F  06CA               	xorwf	___ftadd@f2+1,f
  6812  0C60  30FF               	movlw	255
  6813  0C61  06CB               	xorwf	___ftadd@f2+2,f
  6814  0C62  3001               	movlw	1
  6815  0C63  07C9               	addwf	___ftadd@f2,f
  6816  0C64  3000               	movlw	0
  6817  0C65  1803               	skipnc
  6818  0C66  3001               	movlw	1
  6819  0C67  07CA               	addwf	___ftadd@f2+1,f
  6820  0C68  3000               	movlw	0
  6821  0C69  1803               	skipnc
  6822  0C6A  3001               	movlw	1
  6823  0C6B  07CB               	addwf	___ftadd@f2+2,f
  6824  0C6C                     l1931:	
  6825  0C6C  01D0               	clrf	___ftadd@sign
  6826  0C6D  0846               	movf	___ftadd@f1,w
  6827  0C6E  07C9               	addwf	___ftadd@f2,f
  6828  0C6F  0847               	movf	___ftadd@f1+1,w
  6829  0C70  3DCA               	addwfc	___ftadd@f2+1,f
  6830  0C71  0848               	movf	___ftadd@f1+2,w
  6831  0C72  3DCB               	addwfc	___ftadd@f2+2,f
  6832  0C73  1FCB               	btfss	___ftadd@f2+2,7
  6833  0C74  2C87               	goto	l1941
  6834  0C75  30FF               	movlw	255
  6835  0C76  06C9               	xorwf	___ftadd@f2,f
  6836  0C77  30FF               	movlw	255
  6837  0C78  06CA               	xorwf	___ftadd@f2+1,f
  6838  0C79  30FF               	movlw	255
  6839  0C7A  06CB               	xorwf	___ftadd@f2+2,f
  6840  0C7B  3001               	movlw	1
  6841  0C7C  07C9               	addwf	___ftadd@f2,f
  6842  0C7D  3000               	movlw	0
  6843  0C7E  1803               	skipnc
  6844  0C7F  3001               	movlw	1
  6845  0C80  07CA               	addwf	___ftadd@f2+1,f
  6846  0C81  3000               	movlw	0
  6847  0C82  1803               	skipnc
  6848  0C83  3001               	movlw	1
  6849  0C84  07CB               	addwf	___ftadd@f2+2,f
  6850  0C85  01D0               	clrf	___ftadd@sign
  6851  0C86  0AD0               	incf	___ftadd@sign,f
  6852  0C87                     l1941:	
  6853  0C87  0849               	movf	___ftadd@f2,w
  6854  0C88  00F0               	movwf	___ftpack@arg
  6855  0C89  084A               	movf	___ftadd@f2+1,w
  6856  0C8A  00F1               	movwf	___ftpack@arg+1
  6857  0C8B  084B               	movf	___ftadd@f2+2,w
  6858  0C8C  00F2               	movwf	___ftpack@arg+2
  6859  0C8D  0852               	movf	___ftadd@exp1,w
  6860  0C8E  00CC               	movwf	??___ftadd
  6861  0C8F  084C               	movf	??___ftadd,w
  6862  0C90  00F3               	movwf	___ftpack@exp
  6863  0C91  0850               	movf	___ftadd@sign,w
  6864  0C92  00CD               	movwf	??___ftadd+1
  6865  0C93  084D               	movf	??___ftadd+1,w
  6866  0C94  00F4               	movwf	___ftpack@sign
  6867  0C95  3180  2020         	fcall	___ftpack
  6868  0C97  0870               	movf	?___ftpack,w
  6869  0C98  0020               	movlb	0	; select bank0
  6870  0C99  00C6               	movwf	?___ftadd
  6871  0C9A  0871               	movf	?___ftpack+1,w
  6872  0C9B  00C7               	movwf	?___ftadd+1
  6873  0C9C  0872               	movf	?___ftpack+2,w
  6874  0C9D  00C8               	movwf	?___ftadd+2
  6875  0C9E  0008               	return
  6876  0C9F                     __end_of___ftadd:	
  6877                           
  6878                           	psect	text19
  6879  163A                     __ptext19:	
  6880 ;; *************** function ___ftneg *****************
  6881 ;; Defined at:
  6882 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/ftneg.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  f1              3    0[COMMON] float 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  3    0[COMMON] float 
  6889 ;; Registers used:
  6890 ;;		wreg
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6896 ;;      Params:         3       0       0       0       0       0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0
  6899 ;;      Totals:         3       0       0       0       0       0       0       0
  6900 ;;Total ram usage:        3 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_printf
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           
  6910                           ;psect for function ___ftneg
  6911  163A                     ___ftneg:	
  6912                           
  6913                           ;incstack = 0
  6914                           ; Regs used in ___ftneg: [wreg]
  6915  163A  0872               	movf	___ftneg@f1+2,w
  6916  163B  0471               	iorwf	___ftneg@f1+1,w
  6917  163C  0470               	iorwf	___ftneg@f1,w
  6918  163D  1903               	skipnz
  6919  163E  0008               	return
  6920  163F  3080               	movlw	128
  6921  1640  06F2               	xorwf	___ftneg@f1+2,f
  6922  1641  0008               	return
  6923  1642                     __end_of___ftneg:	
  6924                           
  6925                           	psect	text20
  6926  16EC                     __ptext20:	
  6927 ;; *************** function ___ftge *****************
  6928 ;; Defined at:
  6929 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/ftge.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  ff1             3    0[COMMON] float 
  6932 ;;  ff2             3    3[COMMON] float 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;		None               void
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6944 ;;      Params:         6       0       0       0       0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0
  6946 ;;      Temps:          3       0       0       0       0       0       0       0
  6947 ;;      Totals:         9       0       0       0       0       0       0       0
  6948 ;;Total ram usage:        9 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_main
  6954 ;;		_printf
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function ___ftge
  6960  16EC                     ___ftge:	
  6961                           
  6962                           ;incstack = 0
  6963                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6964  16EC  1FF2               	btfss	___ftge@ff1+2,7
  6965  16ED  2F02               	goto	l2223
  6966  16EE  0970               	comf	___ftge@ff1,w
  6967  16EF  00F6               	movwf	??___ftge
  6968  16F0  0971               	comf	___ftge@ff1+1,w
  6969  16F1  00F7               	movwf	??___ftge+1
  6970  16F2  0972               	comf	___ftge@ff1+2,w
  6971  16F3  00F8               	movwf	??___ftge+2
  6972  16F4  0AF6               	incf	??___ftge,f
  6973  16F5  1903               	skipnz
  6974  16F6  0AF7               	incf	??___ftge+1,f
  6975  16F7  1903               	skipnz
  6976  16F8  0AF8               	incf	??___ftge+2,f
  6977  16F9  3000               	movlw	0
  6978  16FA  0776               	addwf	??___ftge,w
  6979  16FB  00F0               	movwf	___ftge@ff1
  6980  16FC  3000               	movlw	0
  6981  16FD  3D77               	addwfc	??___ftge+1,w
  6982  16FE  00F1               	movwf	___ftge@ff1+1
  6983  16FF  3080               	movlw	128
  6984  1700  3D78               	addwfc	??___ftge+2,w
  6985  1701  00F2               	movwf	___ftge@ff1+2
  6986  1702                     l2223:	
  6987  1702  1FF5               	btfss	___ftge@ff2+2,7
  6988  1703  2F18               	goto	l2227
  6989  1704  0973               	comf	___ftge@ff2,w
  6990  1705  00F6               	movwf	??___ftge
  6991  1706  0974               	comf	___ftge@ff2+1,w
  6992  1707  00F7               	movwf	??___ftge+1
  6993  1708  0975               	comf	___ftge@ff2+2,w
  6994  1709  00F8               	movwf	??___ftge+2
  6995  170A  0AF6               	incf	??___ftge,f
  6996  170B  1903               	skipnz
  6997  170C  0AF7               	incf	??___ftge+1,f
  6998  170D  1903               	skipnz
  6999  170E  0AF8               	incf	??___ftge+2,f
  7000  170F  3000               	movlw	0
  7001  1710  0776               	addwf	??___ftge,w
  7002  1711  00F3               	movwf	___ftge@ff2
  7003  1712  3000               	movlw	0
  7004  1713  3D77               	addwfc	??___ftge+1,w
  7005  1714  00F4               	movwf	___ftge@ff2+1
  7006  1715  3080               	movlw	128
  7007  1716  3D78               	addwfc	??___ftge+2,w
  7008  1717  00F5               	movwf	___ftge@ff2+2
  7009  1718                     l2227:	
  7010  1718  3080               	movlw	128
  7011  1719  06F2               	xorwf	___ftge@ff1+2,f
  7012  171A  3080               	movlw	128
  7013  171B  06F5               	xorwf	___ftge@ff2+2,f
  7014  171C  0875               	movf	___ftge@ff2+2,w
  7015  171D  0272               	subwf	___ftge@ff1+2,w
  7016  171E  1D03               	skipz
  7017  171F  0008               	return
  7018  1720  0874               	movf	___ftge@ff2+1,w
  7019  1721  0271               	subwf	___ftge@ff1+1,w
  7020  1722  1D03               	skipz
  7021  1723  0008               	return
  7022  1724  0873               	movf	___ftge@ff2,w
  7023  1725  0270               	subwf	___ftge@ff1,w
  7024  1726  0008               	return
  7025  1727                     __end_of___ftge:	
  7026                           
  7027                           	psect	text21
  7028  166C                     __ptext21:	
  7029 ;; *************** function ___lwtoft *****************
  7030 ;; Defined at:
  7031 ;;		line 28 in file "/Applications/microchip/xc8/v1.38/sources/common/lwtoft.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  c               2    8[COMMON] unsigned int 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  3    8[COMMON] float 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0, pclath, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7045 ;;      Params:         3       0       0       0       0       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0
  7047 ;;      Temps:          1       0       0       0       0       0       0       0
  7048 ;;      Totals:         4       0       0       0       0       0       0       0
  7049 ;;Total ram usage:        4 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    1
  7052 ;; This function calls:
  7053 ;;		___ftpack
  7054 ;; This function is called by:
  7055 ;;		_main
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           
  7060                           ;psect for function ___lwtoft
  7061  166C                     ___lwtoft:	
  7062                           
  7063                           ;incstack = 0
  7064                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7065  166C  0878               	movf	___lwtoft@c,w
  7066  166D  00F0               	movwf	___ftpack@arg
  7067  166E  0879               	movf	___lwtoft@c+1,w
  7068  166F  00F1               	movwf	___ftpack@arg+1
  7069  1670  01F2               	clrf	___ftpack@arg+2
  7070  1671  308E               	movlw	142
  7071  1672  00FB               	movwf	??___lwtoft
  7072  1673  087B               	movf	??___lwtoft,w
  7073  1674  00F3               	movwf	___ftpack@exp
  7074  1675  01F4               	clrf	___ftpack@sign
  7075  1676  3180  2020         	fcall	___ftpack
  7076  1678  0870               	movf	?___ftpack,w
  7077  1679  00F8               	movwf	?___lwtoft
  7078  167A  0871               	movf	?___ftpack+1,w
  7079  167B  00F9               	movwf	?___lwtoft+1
  7080  167C  0872               	movf	?___ftpack+2,w
  7081  167D  00FA               	movwf	?___lwtoft+2
  7082  167E  0008               	return
  7083  167F                     __end_of___lwtoft:	
  7084                           
  7085                           	psect	text22
  7086  08DD                     __ptext22:	
  7087 ;; *************** function ___ftdiv *****************
  7088 ;; Defined at:
  7089 ;;		line 56 in file "/Applications/microchip/xc8/v1.38/sources/common/ftdiv.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  f2              3   24[BANK0 ] float 
  7092 ;;  f1              3   27[BANK0 ] float 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;  f3              3   35[BANK0 ] float 
  7095 ;;  sign            1   39[BANK0 ] unsigned char 
  7096 ;;  exp             1   38[BANK0 ] unsigned char 
  7097 ;;  cntr            1   34[BANK0 ] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  3   24[BANK0 ] float 
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0, pclath, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7107 ;;      Params:         0       6       0       0       0       0       0       0
  7108 ;;      Locals:         0       6       0       0       0       0       0       0
  7109 ;;      Temps:          0       4       0       0       0       0       0       0
  7110 ;;      Totals:         0      16       0       0       0       0       0       0
  7111 ;;Total ram usage:       16 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    1
  7114 ;; This function calls:
  7115 ;;		___ftpack
  7116 ;; This function is called by:
  7117 ;;		_main
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           
  7122                           ;psect for function ___ftdiv
  7123  08DD                     ___ftdiv:	
  7124                           
  7125                           ;incstack = 0
  7126                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7127  08DD  0020               	movlb	0	; select bank0
  7128  08DE  083B               	movf	___ftdiv@f1,w
  7129  08DF  00BE               	movwf	??___ftdiv
  7130  08E0  083C               	movf	___ftdiv@f1+1,w
  7131  08E1  00BF               	movwf	??___ftdiv+1
  7132  08E2  083D               	movf	___ftdiv@f1+2,w
  7133  08E3  00C0               	movwf	??___ftdiv+2
  7134  08E4  1003               	clrc
  7135  08E5  0D3F               	rlf	??___ftdiv+1,w
  7136  08E6  0D40               	rlf	??___ftdiv+2,w
  7137  08E7  00C1               	movwf	??___ftdiv+3
  7138  08E8  0841               	movf	??___ftdiv+3,w
  7139  08E9  00C6               	movwf	___ftdiv@exp
  7140  08EA  0846               	movf	___ftdiv@exp,w
  7141  08EB  1D03               	btfss	3,2
  7142  08EC  28F4               	goto	l2615
  7143  08ED  3000               	movlw	0
  7144  08EE  00B8               	movwf	?___ftdiv
  7145  08EF  3000               	movlw	0
  7146  08F0  00B9               	movwf	?___ftdiv+1
  7147  08F1  3000               	movlw	0
  7148  08F2  00BA               	movwf	?___ftdiv+2
  7149  08F3  0008               	return
  7150  08F4                     l2615:	
  7151  08F4  0838               	movf	___ftdiv@f2,w
  7152  08F5  00BE               	movwf	??___ftdiv
  7153  08F6  0839               	movf	___ftdiv@f2+1,w
  7154  08F7  00BF               	movwf	??___ftdiv+1
  7155  08F8  083A               	movf	___ftdiv@f2+2,w
  7156  08F9  00C0               	movwf	??___ftdiv+2
  7157  08FA  1003               	clrc
  7158  08FB  0D3F               	rlf	??___ftdiv+1,w
  7159  08FC  0D40               	rlf	??___ftdiv+2,w
  7160  08FD  00C1               	movwf	??___ftdiv+3
  7161  08FE  0841               	movf	??___ftdiv+3,w
  7162  08FF  00C7               	movwf	___ftdiv@sign
  7163  0900  0847               	movf	___ftdiv@sign,w
  7164  0901  1D03               	btfss	3,2
  7165  0902  290A               	goto	l2621
  7166  0903  3000               	movlw	0
  7167  0904  00B8               	movwf	?___ftdiv
  7168  0905  3000               	movlw	0
  7169  0906  00B9               	movwf	?___ftdiv+1
  7170  0907  3000               	movlw	0
  7171  0908  00BA               	movwf	?___ftdiv+2
  7172  0909  0008               	return
  7173  090A                     l2621:	
  7174  090A  3000               	movlw	0
  7175  090B  00C3               	movwf	___ftdiv@f3
  7176  090C  3000               	movlw	0
  7177  090D  00C4               	movwf	___ftdiv@f3+1
  7178  090E  3000               	movlw	0
  7179  090F  00C5               	movwf	___ftdiv@f3+2
  7180  0910  3089               	movlw	137
  7181  0911  0747               	addwf	___ftdiv@sign,w
  7182  0912  00BE               	movwf	??___ftdiv
  7183  0913  083E               	movf	??___ftdiv,w
  7184  0914  02C6               	subwf	___ftdiv@exp,f
  7185  0915  083B               	movf	___ftdiv@f1,w
  7186  0916  00BE               	movwf	??___ftdiv
  7187  0917  083C               	movf	___ftdiv@f1+1,w
  7188  0918  00BF               	movwf	??___ftdiv+1
  7189  0919  083D               	movf	___ftdiv@f1+2,w
  7190  091A  00C0               	movwf	??___ftdiv+2
  7191  091B  3010               	movlw	16
  7192  091C                     u3885:	
  7193  091C  36C0               	lsrf	??___ftdiv+2,f
  7194  091D  0CBF               	rrf	??___ftdiv+1,f
  7195  091E  0CBE               	rrf	??___ftdiv,f
  7196  091F  0B89               	decfsz	9,f
  7197  0920  291C               	goto	u3885
  7198  0921  083E               	movf	??___ftdiv,w
  7199  0922  00C1               	movwf	??___ftdiv+3
  7200  0923  0841               	movf	??___ftdiv+3,w
  7201  0924  00C7               	movwf	___ftdiv@sign
  7202  0925  0838               	movf	___ftdiv@f2,w
  7203  0926  00BE               	movwf	??___ftdiv
  7204  0927  0839               	movf	___ftdiv@f2+1,w
  7205  0928  00BF               	movwf	??___ftdiv+1
  7206  0929  083A               	movf	___ftdiv@f2+2,w
  7207  092A  00C0               	movwf	??___ftdiv+2
  7208  092B  3010               	movlw	16
  7209  092C                     u3895:	
  7210  092C  36C0               	lsrf	??___ftdiv+2,f
  7211  092D  0CBF               	rrf	??___ftdiv+1,f
  7212  092E  0CBE               	rrf	??___ftdiv,f
  7213  092F  0B89               	decfsz	9,f
  7214  0930  292C               	goto	u3895
  7215  0931  083E               	movf	??___ftdiv,w
  7216  0932  00C1               	movwf	??___ftdiv+3
  7217  0933  0841               	movf	??___ftdiv+3,w
  7218  0934  06C7               	xorwf	___ftdiv@sign,f
  7219  0935  3080               	movlw	128
  7220  0936  00BE               	movwf	??___ftdiv
  7221  0937  083E               	movf	??___ftdiv,w
  7222  0938  05C7               	andwf	___ftdiv@sign,f
  7223  0939  17BC               	bsf	___ftdiv@f1+1,7
  7224  093A  30FF               	movlw	255
  7225  093B  05BB               	andwf	___ftdiv@f1,f
  7226  093C  30FF               	movlw	255
  7227  093D  05BC               	andwf	___ftdiv@f1+1,f
  7228  093E  3000               	movlw	0
  7229  093F  05BD               	andwf	___ftdiv@f1+2,f
  7230  0940  17B9               	bsf	___ftdiv@f2+1,7
  7231  0941  30FF               	movlw	255
  7232  0942  05B8               	andwf	___ftdiv@f2,f
  7233  0943  30FF               	movlw	255
  7234  0944  05B9               	andwf	___ftdiv@f2+1,f
  7235  0945  3000               	movlw	0
  7236  0946  05BA               	andwf	___ftdiv@f2+2,f
  7237  0947  3018               	movlw	24
  7238  0948  00BE               	movwf	??___ftdiv
  7239  0949  083E               	movf	??___ftdiv,w
  7240  094A  00C2               	movwf	___ftdiv@cntr
  7241  094B                     l2635:	
  7242  094B  3001               	movlw	1
  7243  094C                     u3905:	
  7244  094C  35C3               	lslf	___ftdiv@f3,f
  7245  094D  0DC4               	rlf	___ftdiv@f3+1,f
  7246  094E  0DC5               	rlf	___ftdiv@f3+2,f
  7247  094F  0B89               	decfsz	9,f
  7248  0950  294C               	goto	u3905
  7249  0951  083A               	movf	___ftdiv@f2+2,w
  7250  0952  023D               	subwf	___ftdiv@f1+2,w
  7251  0953  1D03               	skipz
  7252  0954  295B               	goto	u3915
  7253  0955  0839               	movf	___ftdiv@f2+1,w
  7254  0956  023C               	subwf	___ftdiv@f1+1,w
  7255  0957  1D03               	skipz
  7256  0958  295B               	goto	u3915
  7257  0959  0838               	movf	___ftdiv@f2,w
  7258  095A  023B               	subwf	___ftdiv@f1,w
  7259  095B                     u3915:	
  7260  095B  1C03               	skipc
  7261  095C  2964               	goto	l2643
  7262  095D  0838               	movf	___ftdiv@f2,w
  7263  095E  02BB               	subwf	___ftdiv@f1,f
  7264  095F  0839               	movf	___ftdiv@f2+1,w
  7265  0960  3BBC               	subwfb	___ftdiv@f1+1,f
  7266  0961  083A               	movf	___ftdiv@f2+2,w
  7267  0962  3BBD               	subwfb	___ftdiv@f1+2,f
  7268  0963  1443               	bsf	___ftdiv@f3,0
  7269  0964                     l2643:	
  7270  0964  3001               	movlw	1
  7271  0965                     u3925:	
  7272  0965  35BB               	lslf	___ftdiv@f1,f
  7273  0966  0DBC               	rlf	___ftdiv@f1+1,f
  7274  0967  0DBD               	rlf	___ftdiv@f1+2,f
  7275  0968  0B89               	decfsz	9,f
  7276  0969  2965               	goto	u3925
  7277  096A  3001               	movlw	1
  7278  096B  02C2               	subwf	___ftdiv@cntr,f
  7279  096C  1D03               	btfss	3,2
  7280  096D  294B               	goto	l2635
  7281  096E  0843               	movf	___ftdiv@f3,w
  7282  096F  00F0               	movwf	___ftpack@arg
  7283  0970  0844               	movf	___ftdiv@f3+1,w
  7284  0971  00F1               	movwf	___ftpack@arg+1
  7285  0972  0845               	movf	___ftdiv@f3+2,w
  7286  0973  00F2               	movwf	___ftpack@arg+2
  7287  0974  0846               	movf	___ftdiv@exp,w
  7288  0975  00BE               	movwf	??___ftdiv
  7289  0976  083E               	movf	??___ftdiv,w
  7290  0977  00F3               	movwf	___ftpack@exp
  7291  0978  0847               	movf	___ftdiv@sign,w
  7292  0979  00BF               	movwf	??___ftdiv+1
  7293  097A  083F               	movf	??___ftdiv+1,w
  7294  097B  00F4               	movwf	___ftpack@sign
  7295  097C  3180  2020         	fcall	___ftpack
  7296  097E  0870               	movf	?___ftpack,w
  7297  097F  0020               	movlb	0	; select bank0
  7298  0980  00B8               	movwf	?___ftdiv
  7299  0981  0871               	movf	?___ftpack+1,w
  7300  0982  00B9               	movwf	?___ftdiv+1
  7301  0983  0872               	movf	?___ftpack+2,w
  7302  0984  00BA               	movwf	?___ftdiv+2
  7303  0985  0008               	return
  7304  0986                     __end_of___ftdiv:	
  7305                           
  7306                           	psect	text23
  7307  0020                     __ptext23:	
  7308 ;; *************** function ___ftpack *****************
  7309 ;; Defined at:
  7310 ;;		line 62 in file "/Applications/microchip/xc8/v1.38/sources/common/float.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  arg             3    0[COMMON] unsigned um
  7313 ;;  exp             1    3[COMMON] unsigned char 
  7314 ;;  sign            1    4[COMMON] unsigned char 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;		None
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  3    0[COMMON] float 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7326 ;;      Params:         5       0       0       0       0       0       0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0
  7328 ;;      Temps:          3       0       0       0       0       0       0       0
  7329 ;;      Totals:         8       0       0       0       0       0       0       0
  7330 ;;Total ram usage:        8 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		___ftadd
  7336 ;;		___ftdiv
  7337 ;;		___ftmul
  7338 ;;		___lltoft
  7339 ;;		___lwtoft
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           
  7344                           ;psect for function ___ftpack
  7345  0020                     ___ftpack:	
  7346                           
  7347                           ;incstack = 0
  7348                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7349  0020  0873               	movf	___ftpack@exp,w
  7350  0021  1903               	btfsc	3,2
  7351  0022  2828               	goto	l1747
  7352  0023  0872               	movf	___ftpack@arg+2,w
  7353  0024  0471               	iorwf	___ftpack@arg+1,w
  7354  0025  0470               	iorwf	___ftpack@arg,w
  7355  0026  1D03               	skipz
  7356  0027  2839               	goto	l1753
  7357  0028                     l1747:	
  7358  0028  3000               	movlw	0
  7359  0029  00F0               	movwf	?___ftpack
  7360  002A  3000               	movlw	0
  7361  002B  00F1               	movwf	?___ftpack+1
  7362  002C  3000               	movlw	0
  7363  002D  00F2               	movwf	?___ftpack+2
  7364  002E  0008               	return
  7365  002F                     l1751:	
  7366  002F  3001               	movlw	1
  7367  0030  00F5               	movwf	??___ftpack
  7368  0031  0875               	movf	??___ftpack,w
  7369  0032  07F3               	addwf	___ftpack@exp,f
  7370  0033  3001               	movlw	1
  7371  0034                     u2035:	
  7372  0034  36F2               	lsrf	___ftpack@arg+2,f
  7373  0035  0CF1               	rrf	___ftpack@arg+1,f
  7374  0036  0CF0               	rrf	___ftpack@arg,f
  7375  0037  0B89               	decfsz	9,f
  7376  0038  2834               	goto	u2035
  7377  0039                     l1753:	
  7378  0039  30FE               	movlw	254
  7379  003A  0572               	andwf	___ftpack@arg+2,w
  7380  003B  1903               	btfsc	3,2
  7381  003C  2852               	goto	l522
  7382  003D  282F               	goto	l1751
  7383  003E                     l1755:	
  7384  003E  3001               	movlw	1
  7385  003F  00F5               	movwf	??___ftpack
  7386  0040  0875               	movf	??___ftpack,w
  7387  0041  07F3               	addwf	___ftpack@exp,f
  7388  0042  3001               	movlw	1
  7389  0043  07F0               	addwf	___ftpack@arg,f
  7390  0044  3000               	movlw	0
  7391  0045  1803               	skipnc
  7392  0046  3001               	movlw	1
  7393  0047  07F1               	addwf	___ftpack@arg+1,f
  7394  0048  3000               	movlw	0
  7395  0049  1803               	skipnc
  7396  004A  3001               	movlw	1
  7397  004B  07F2               	addwf	___ftpack@arg+2,f
  7398  004C  3001               	movlw	1
  7399  004D                     u2055:	
  7400  004D  36F2               	lsrf	___ftpack@arg+2,f
  7401  004E  0CF1               	rrf	___ftpack@arg+1,f
  7402  004F  0CF0               	rrf	___ftpack@arg,f
  7403  0050  0B89               	decfsz	9,f
  7404  0051  284D               	goto	u2055
  7405  0052                     l522:	
  7406  0052  30FF               	movlw	255
  7407  0053  0572               	andwf	___ftpack@arg+2,w
  7408  0054  1903               	btfsc	3,2
  7409  0055  285F               	goto	l1763
  7410  0056  283E               	goto	l1755
  7411  0057                     l1761:	
  7412  0057  3001               	movlw	1
  7413  0058  02F3               	subwf	___ftpack@exp,f
  7414  0059  3001               	movlw	1
  7415  005A                     u2075:	
  7416  005A  35F0               	lslf	___ftpack@arg,f
  7417  005B  0DF1               	rlf	___ftpack@arg+1,f
  7418  005C  0DF2               	rlf	___ftpack@arg+2,f
  7419  005D  0B89               	decfsz	9,f
  7420  005E  285A               	goto	u2075
  7421  005F                     l1763:	
  7422  005F  1BF1               	btfsc	___ftpack@arg+1,7
  7423  0060  2865               	goto	l529
  7424  0061  3002               	movlw	2
  7425  0062  0273               	subwf	___ftpack@exp,w
  7426  0063  1803               	skipnc
  7427  0064  2857               	goto	l1761
  7428  0065                     l529:	
  7429  0065  1873               	btfsc	___ftpack@exp,0
  7430  0066  286D               	goto	l530
  7431  0067  30FF               	movlw	255
  7432  0068  05F0               	andwf	___ftpack@arg,f
  7433  0069  307F               	movlw	127
  7434  006A  05F1               	andwf	___ftpack@arg+1,f
  7435  006B  30FF               	movlw	255
  7436  006C  05F2               	andwf	___ftpack@arg+2,f
  7437  006D                     l530:	
  7438  006D  1003               	clrc
  7439  006E  0CF3               	rrf	___ftpack@exp,f
  7440  006F  0873               	movf	___ftpack@exp,w
  7441  0070  00F5               	movwf	??___ftpack
  7442  0071  01F6               	clrf	??___ftpack+1
  7443  0072  01F7               	clrf	??___ftpack+2
  7444  0073  3010               	movlw	16
  7445  0074                     u2115:	
  7446  0074  35F5               	lslf	??___ftpack,f
  7447  0075  0DF6               	rlf	??___ftpack+1,f
  7448  0076  0DF7               	rlf	??___ftpack+2,f
  7449  0077  0B89               	decfsz	9,f
  7450  0078  2874               	goto	u2115
  7451  0079  0875               	movf	??___ftpack,w
  7452  007A  04F0               	iorwf	___ftpack@arg,f
  7453  007B  0876               	movf	??___ftpack+1,w
  7454  007C  04F1               	iorwf	___ftpack@arg+1,f
  7455  007D  0877               	movf	??___ftpack+2,w
  7456  007E  04F2               	iorwf	___ftpack@arg+2,f
  7457  007F  0874               	movf	___ftpack@sign,w
  7458  0080  1903               	btfsc	3,2
  7459  0081  0008               	return
  7460  0082  17F2               	bsf	___ftpack@arg+2,7
  7461  0083  0008               	return
  7462  0084                     __end_of___ftpack:	
  7463                           
  7464                           	psect	text24
  7465  164A                     __ptext24:	
  7466 ;; *************** function _SYSTEM_Initialize *****************
  7467 ;; Defined at:
  7468 ;;		line 70 in file "mcc_generated_files/mcc.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;		None
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, pclath, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7482 ;;      Params:         0       0       0       0       0       0       0       0
  7483 ;;      Locals:         0       0       0       0       0       0       0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0
  7485 ;;      Totals:         0       0       0       0       0       0       0       0
  7486 ;;Total ram usage:        0 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    1
  7489 ;; This function calls:
  7490 ;;		_EUSART_Initialize
  7491 ;;		_OSCILLATOR_Initialize
  7492 ;;		_PIN_MANAGER_Initialize
  7493 ;; This function is called by:
  7494 ;;		_main
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _SYSTEM_Initialize
  7500  164A                     _SYSTEM_Initialize:	
  7501                           
  7502                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  7503                           
  7504                           ;incstack = 0
  7505                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7506  164A  3196  269D  3196   	fcall	_PIN_MANAGER_Initialize
  7507                           
  7508                           ;mcc.c: 74: OSCILLATOR_Initialize();
  7509  164D  3196  2634  3196   	fcall	_OSCILLATOR_Initialize
  7510                           
  7511                           ;mcc.c: 75: EUSART_Initialize();
  7512  1650  3196  2653         	fcall	_EUSART_Initialize
  7513  1652  0008               	return
  7514  1653                     __end_of_SYSTEM_Initialize:	
  7515                           
  7516                           	psect	text25
  7517  169D                     __ptext25:	
  7518 ;; *************** function _PIN_MANAGER_Initialize *****************
  7519 ;; Defined at:
  7520 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;		None
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg, status,2
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7534 ;;      Params:         0       0       0       0       0       0       0       0
  7535 ;;      Locals:         0       0       0       0       0       0       0       0
  7536 ;;      Temps:          0       0       0       0       0       0       0       0
  7537 ;;      Totals:         0       0       0       0       0       0       0       0
  7538 ;;Total ram usage:        0 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_SYSTEM_Initialize
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           
  7548                           ;psect for function _PIN_MANAGER_Initialize
  7549  169D                     _PIN_MANAGER_Initialize:	
  7550                           
  7551                           ;pin_manager.c: 51: LATB = 0x0;
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7555  169D  0022               	movlb	2	; select bank2
  7556  169E  018D               	clrf	13	;volatile
  7557                           
  7558                           ;pin_manager.c: 52: WPUE = 0x8;
  7559  169F  3008               	movlw	8
  7560  16A0  0024               	movlb	4	; select bank4
  7561  16A1  0090               	movwf	16	;volatile
  7562                           
  7563                           ;pin_manager.c: 53: LATA = 0x0;
  7564  16A2  0022               	movlb	2	; select bank2
  7565  16A3  018C               	clrf	12	;volatile
  7566                           
  7567                           ;pin_manager.c: 54: ANSELE = 0x7;
  7568  16A4  3007               	movlw	7
  7569  16A5  0023               	movlb	3	; select bank3
  7570  16A6  0090               	movwf	16	;volatile
  7571                           
  7572                           ;pin_manager.c: 55: LATE = 0x0;
  7573  16A7  0022               	movlb	2	; select bank2
  7574  16A8  0190               	clrf	16	;volatile
  7575                           
  7576                           ;pin_manager.c: 56: LATD = 0x0;
  7577  16A9  018F               	clrf	15	;volatile
  7578                           
  7579                           ;pin_manager.c: 57: LATC = 0x0;
  7580  16AA  018E               	clrf	14	;volatile
  7581                           
  7582                           ;pin_manager.c: 58: ANSELA = 0x3F;
  7583  16AB  303F               	movlw	63
  7584  16AC  0023               	movlb	3	; select bank3
  7585  16AD  008C               	movwf	12	;volatile
  7586                           
  7587                           ;pin_manager.c: 59: ANSELB = 0x3F;
  7588  16AE  303F               	movlw	63
  7589  16AF  008D               	movwf	13	;volatile
  7590                           
  7591                           ;pin_manager.c: 60: ANSELD = 0xEF;
  7592  16B0  30EF               	movlw	239
  7593  16B1  008F               	movwf	15	;volatile
  7594                           
  7595                           ;pin_manager.c: 61: WPUB = 0xFF;
  7596  16B2  30FF               	movlw	255
  7597  16B3  0024               	movlb	4	; select bank4
  7598  16B4  008D               	movwf	13	;volatile
  7599                           
  7600                           ;pin_manager.c: 62: TRISD = 0xEF;
  7601  16B5  30EF               	movlw	239
  7602  16B6  0021               	movlb	1	; select bank1
  7603  16B7  008F               	movwf	15	;volatile
  7604                           
  7605                           ;pin_manager.c: 63: TRISE = 0xF;
  7606  16B8  300F               	movlw	15
  7607  16B9  0090               	movwf	16	;volatile
  7608                           
  7609                           ;pin_manager.c: 64: TRISB = 0xFF;
  7610  16BA  30FF               	movlw	255
  7611  16BB  008D               	movwf	13	;volatile
  7612                           
  7613                           ;pin_manager.c: 65: TRISC = 0xBE;
  7614  16BC  30BE               	movlw	190
  7615  16BD  008E               	movwf	14	;volatile
  7616                           
  7617                           ;pin_manager.c: 66: TRISA = 0xFF;
  7618  16BE  30FF               	movlw	255
  7619  16BF  008C               	movwf	12	;volatile
  7620                           
  7621                           ;pin_manager.c: 68: OPTION_REGbits.nWPUEN = 0x1;
  7622  16C0  1795               	bsf	21,7	;volatile
  7623                           
  7624                           ;pin_manager.c: 69: APFCON = 0x00;
  7625  16C1  0022               	movlb	2	; select bank2
  7626  16C2  019D               	clrf	29	;volatile
  7627  16C3  0008               	return
  7628  16C4                     __end_of_PIN_MANAGER_Initialize:	
  7629                           
  7630                           	psect	text26
  7631  1634                     __ptext26:	
  7632 ;; *************** function _OSCILLATOR_Initialize *****************
  7633 ;; Defined at:
  7634 ;;		line 78 in file "mcc_generated_files/mcc.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;		None
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7648 ;;      Params:         0       0       0       0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0
  7651 ;;      Totals:         0       0       0       0       0       0       0       0
  7652 ;;Total ram usage:        0 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_SYSTEM_Initialize
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           
  7662                           ;psect for function _OSCILLATOR_Initialize
  7663  1634                     _OSCILLATOR_Initialize:	
  7664                           
  7665                           ;mcc.c: 81: OSCCON = 0x38;
  7666                           
  7667                           ;incstack = 0
  7668                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7669  1634  3038               	movlw	56
  7670  1635  0021               	movlb	1	; select bank1
  7671  1636  0099               	movwf	25	;volatile
  7672                           
  7673                           ;mcc.c: 83: OSCSTAT = 0x00;
  7674  1637  019A               	clrf	26	;volatile
  7675                           
  7676                           ;mcc.c: 85: OSCTUNE = 0x00;
  7677  1638  0198               	clrf	24	;volatile
  7678  1639  0008               	return
  7679  163A                     __end_of_OSCILLATOR_Initialize:	
  7680                           
  7681                           	psect	text27
  7682  1653                     __ptext27:	
  7683 ;; *************** function _EUSART_Initialize *****************
  7684 ;; Defined at:
  7685 ;;		line 55 in file "mcc_generated_files/eusart.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;		None
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;		None
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, status,2
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7699 ;;      Params:         0       0       0       0       0       0       0       0
  7700 ;;      Locals:         0       0       0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0
  7702 ;;      Totals:         0       0       0       0       0       0       0       0
  7703 ;;Total ram usage:        0 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; This function calls:
  7706 ;;		Nothing
  7707 ;; This function is called by:
  7708 ;;		_SYSTEM_Initialize
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function _EUSART_Initialize
  7714  1653                     _EUSART_Initialize:	
  7715                           
  7716                           ;eusart.c: 60: BAUDCON = 0x08;
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  7720  1653  3008               	movlw	8
  7721  1654  0023               	movlb	3	; select bank3
  7722  1655  009F               	movwf	31	;volatile
  7723                           
  7724                           ;eusart.c: 63: RCSTA = 0x90;
  7725  1656  3090               	movlw	144
  7726  1657  009D               	movwf	29	;volatile
  7727                           
  7728                           ;eusart.c: 66: TXSTA = 0x24;
  7729  1658  3024               	movlw	36
  7730  1659  009E               	movwf	30	;volatile
  7731                           
  7732                           ;eusart.c: 69: SPBRGL = 0x56;
  7733  165A  3056               	movlw	86
  7734  165B  009B               	movwf	27	;volatile
  7735                           
  7736                           ;eusart.c: 72: SPBRGH = 0x00;
  7737  165C  019C               	clrf	28	;volatile
  7738  165D  0008               	return
  7739  165E                     __end_of_EUSART_Initialize:	
  7740  007E                     btemp	set	126	;btemp
  7741  007E                     wtemp	set	126
  7742  007E                     wtemp0	set	126
  7743  0080                     wtemp1	set	128
  7744  0082                     wtemp2	set	130
  7745  0084                     wtemp3	set	132
  7746  0086                     wtemp4	set	134
  7747  0088                     wtemp5	set	136
  7748  007F                     wtemp6	set	127
  7749  007E                     ttemp	set	126
  7750  007E                     ttemp0	set	126
  7751  0081                     ttemp1	set	129
  7752  0084                     ttemp2	set	132
  7753  0087                     ttemp3	set	135
  7754  007F                     ttemp4	set	127
  7755  007E                     ltemp	set	126
  7756  007E                     ltemp0	set	126
  7757  0082                     ltemp1	set	130
  7758  0086                     ltemp2	set	134
  7759  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    118
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      77
    BANK1            80     27      27
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _printf->___lldiv
    _printf->___lltoft
    _printf->___wmul
    _printf->__div_to_l_
    _scale->___wmul
    _putch->_EUSART_Write
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   46949
                                             68 BANK0      9     9      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lwtoft
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              39    34      5   38574
                                             57 BANK0     11     6      5
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    9079
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    14      3    8881
                                             24 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2318
                                             12 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3662
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1868
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             33 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    2971
                                             51 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2798
                                             38 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     666
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1821
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2132
                                             24 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _putch
       _EUSART_Write
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1B      1B       8       33.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep 16 12:45:28 2016

                    __CFG_CP$OFF 0000                               l33 0B14                               l26 0B0C  
                             l36 0B6E                               l29 0B10                               l71 1643  
                   ___awdiv@sign 0021              ___wmul@multiplicand 0026                     ___ftadd@exp1 0052  
                   ___ftadd@exp2 0051                     ___ftadd@sign 0050                              l205 042D  
                            l260 07FC                              l245 0744                              l510 0DB0  
                            l247 077E                              l191 02BB                              l344 000D  
                            l530 006D                              l522 0052                              l188 02A9  
                            l630 08C3                              l529 0065                              l553 0C48  
                            l579 0A6B                              l589 0AE4                     __CFG_CPD$OFF 0000  
                   ___awmod@sign 0076                     __CFG_BORV$LO 0000                              wreg 0009  
                   __CFG_IESO$ON 0000                     __CFG_FOSC$HS 0000                     __CFG_LVP$OFF 0000  
                   ___ftdiv@cntr 0042                     ___ftdiv@sign 0047                             l2213 0DA7  
                           l2205 0D8C                             l2141 0AA6                             l2133 0A8C  
                           l2109 166A                             l2223 1702                             l2303 17BE  
                           l2215 0DB3                             l2207 0D9A                             l2151 0AC0  
                           l2119 0A53                             l2313 17EC                             l2305 17CC  
                           l2161 0AE7                             l2153 0ACE                             l2057 01BC  
                           l2049 0144                             l2073 0E65                             l2227 1718  
                           l2251 1687                             l2171 0CBD                             l2091 0F84  
                           l2083 0EE1                             l2411 02F1                             l2403 02CA  
                           l2261 086F                             l2317 17F7                             l2333 1755  
                           l2501 0535                             l2405 02D9                             l2421 030B  
                           l2327 172F                             l2159 0ADB                             l2079 0EC4  
                           l2511 0595                             l2415 0300                             l2423 0324  
                           l2281 08AD                             l2329 173D                             l2337 1760  
                           l2345 16C8                             l2177 0CDA                             l1801 080F  
                           l2097 0FE3                             l2521 05BA                             l2409 02E6  
                           l2347 16D8                             l2195 0D6D                             l2187 0D25  
                           l2603 07EA                             l2531 05CC                             l2507 056C  
                           l2621 090A                             l2293 08D4                             l2533 0620  
                           l2517 05A2                             l2429 0338                             l2365 021F  
                           l2373 0259                             l1751 002F                             l2615 08F4  
                           l1911 0C1E                             l1903 0C01                             l2287 08BA  
                           l2279 089F                             l1807 081A                             l2543 0646  
                           l2519 05A7                             l2463 0416                             l2455 03C9  
                           l2439 036D                             l2391 02AB                             l2359 020C  
                           l2607 01EF                             l1761 0057                             l1753 0039  
                           l1921 0C3A                             l1913 0C23                             l2289 08C6  
                           l1833 0851                             l1825 0840                             l1817 0822  
                           l2561 0727                             l2537 0629                             l2481 04AD  
                           l2385 026C                             l1763 005F                             l1755 003E  
                           l1747 0028                             l2643 0964                             l2635 094B  
                           l1931 0C6C                             l1923 0C44                             l1915 0C27  
                           l1819 082E                             l2491 04E1                             l2387 02A4  
                           l1941 0C87                             l1909 0C14                             l1829 0849  
                           l1845 1773                             l1781 0006                             l2565 0730  
                           l2549 0661                             l2477 0499                             l2469 0462  
                           l1927 0C5A                             l1871 17A9                             l1863 1798  
                           l1951 099D                             l2591 07B1                             l2583 0795  
                           l2575 0762                             l2495 052F                             l2567 0735  
                           l2399 02C8                             l2663 0AFD                             l1881 0BD1  
                           l1857 1780                             l1849 177A                             l1891 0BE7  
                           l1859 178C                             l1867 17A1                             l2595 07D6  
                           l2683 0B2C                             l1885 0BD8                             l1981 0A0A  
                           l1973 09F6                             l1957 09B3                             l2597 07D9  
                           l2589 07AE                             l2599 07DD                             l2679 0B29  
                           l1985 0A12                             l1969 09EE                             l2689 0B70  
                           STR_1 108D                             STR_2 1076                             u2115 0074  
                           u2035 0034                             _LATA 010C                             _LATB 010D  
                           u2055 004D                             u3015 0D8D                             u2215 0825  
                           _LATC 010E                             _LATD 010F                             _LATE 0110  
                           u2075 005A                             u2235 082F                             u2315 1783  
                           u2155 000E                             u3125 0876                             u3045 0DA8  
                           u2245 0839                             u2165 0013                             u2255 0841  
                           u2335 1792                             u4007 0B86                             u3225 17C1  
                           u2345 1799                             u4017 0BA1                             u3155 08A0  
                           u3315 174B                             u2525 0C28                             u3245 17CD  
                           u3325 1756                             u3255 17E1                             u2465 0C02  
                           u3185 08BB                             u3265 17ED                             u3345 16CD  
                           u2705 0A19                             u2625 09BF                             u3505 0382  
                           u3425 02B5                             u2555 0C3B                             u2635 09CF  
                           u3435 02C1                     printf@tmpval 00AD                             u2495 0C15  
                           u3295 1732                             u2655 09F7                             u3615 0560  
                           u2665 09FD                             u3545 0439                             u2835 0A8D  
                           u3555 046E                             u2925 0ADC                             u2845 0A9D  
                           u3805 07A6                             u2855 0AA7                             u2695 0A13  
                           u3815 07C5                             u3655 05B3                             u3905 094C  
                           u3585 0497                             u3915 095B                             u3755 0758  
                           u3925 0965                             u2965 0D26                             u3765 0776  
                           u3685 0634                             u2975 0D50                             u2895 0AC1  
                           u3695 0642                             u3885 091C                             u3895 092C  
                           u3997 0B07                             _WPUB 020D                             _WPUE 0210  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                             _main 0AF0  
                   ___ftpack@arg 0070                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
                           ttemp 007E                             wtemp 007E                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 0036                     ___ftmul@sign 0037                     ___fttol@exp1 004E  
                   ___fttol@lval 004A                    ?_EUSART_Write 0070   __size_of_OSCILLATOR_Initialize 0006  
  __end_of_OSCILLATOR_Initialize 163A                            ?_main 0070                  __end_of___awdiv 0856  
                __end_of___ftadd 0C9F                    __CFG_WDTE$OFF 0000                  __end_of___awmod 17AE  
                __end_of___ftdiv 0986                  __end_of___ftneg 1642                  __end_of___lldiv 1800  
                __end_of___ftmul 0A3A                  ___awdiv@divisor 0077                            _T1CON 0018  
                __end_of___llmod 1769                  __end_of___ftsub 169D                  __end_of___fttol 08DD  
                ___awdiv@counter 0020                            _RCREG 0199                            _RCSTA 019D  
                          _TMR1H 0017                            _TMR1L 0016                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _TRISD 008F  
                          _TRISE 0090                            _TXREG 019A                            _TXSTA 019E  
                   ___lltoft@exp 007D                  __end_of_dpowers 1028                            _scale 0DBC  
                __end_of_isdigit 166C                    ___ftpack@sign 0074                            _putch 162F  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                  __initialization 07FD  
                   __end_of_main 0BA9                   ??_EUSART_Write 0070                           ??_main 0064  
                  ___fttol@sign1 0049                   __CFG_PLLEN$OFF 0000             __size_of__tdiv_to_l_ 00B6  
                  main@distancia 006A                 ___llmod@dividend 0074                           ?_scale 0038  
               ___awdiv@dividend 0079                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELD 018F  
                         _ANSELE 0190                 __end_of___ftpack 0084                 __end_of___lltoft 16EC  
               __end_of___lwtoft 167F                           _OSCCON 0099                           _TMR1IF 0088  
                         _SPBRGH 019C                           _TMR1ON 00C0                           _SPBRGL 019B  
                 __CFG_PWRTE$OFF 0000                 __end_of__powers_ 1076                           ___ftge 16EC  
                         ___wmul 0004                        ??___awdiv 007B                        ??___ftadd 004C  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                        ??___ftdiv 003E  
                      ??___ftneg 0073                        ??___lldiv 0078                        ??___ftmul 002E  
                      ??___llmod 0078                        ??___ftsub 007E                        ??___fttol 0045  
                         _fround 0084                 ___awdiv@quotient 0022                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           _printf 01E9            ___ftmul@f3_as_product 0033  
                      ??_isdigit 0070                _SYSTEM_Initialize 164A          __end_of__initialization 07FD  
                     ___ftadd@f1 0046                       ___ftadd@f2 0049                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073               ?_SYSTEM_Initialize 0070                       ___ftdiv@f1 003B  
                     ___ftdiv@f2 0038                       ___ftdiv@f3 0043                       ___ftneg@f1 0070  
                     ___ftmul@f1 0028                       ___ftmul@f2 002B                       ___ftsub@f1 0056  
                     ___ftsub@f2 0053                       ___fttol@f1 0041                   __pcstackCOMMON 0070  
            ??_SYSTEM_Initialize 0070                       ___lltoft@c 0078                    __end_of_scale 1000  
                  __end_of_putch 1634                       ___lwtoft@c 0078                       __div_to_l_ 0C9F  
                 _OPTION_REGbits 0095                  __div_to_l_@exp1 0025                  __div_to_l_@cntr 0024  
                        ??_scale 003B        __end_of_SYSTEM_Initialize 1653                  __div_to_l_@quot 0020  
                        ??_putch 0071             __end_of_EUSART_Write 164A                  __CFG_VCAPEN$OFF 0000  
                  __div_to_l_@f1 0070                    __div_to_l_@f2 0073                       __pmaintext 0AF0  
                        ?___ftge 0070                          ?___wmul 0024                          _BAUDCON 019F  
                        ?_fround 0038                        ?___ftpack 0070                          ?_printf 0059  
                      ?___lltoft 0078                        ?___lwtoft 0078                          _OSCSTAT 009A  
                        _OSCTUNE 0098                __end_of__npowers_ 104F                  __size_of___ftge 003B  
                        ___awdiv 0804                          ___ftadd 0BA9                          ___awmod 1769  
                        ___ftdiv 08DD                          ___ftneg 163A                          ___lldiv 17AE  
                __size_of___wmul 001C                          ___ftmul 0986                          ___llmod 1727  
                        ___ftsub 167F                          ___fttol 0856                       _fround$752 0042  
                     _fround$753 003F                       ??___ftpack 0075                  __size_of_fround 0165  
                     ??___lltoft 007C                          __ptext1 01E9                          __ptext2 0DBC  
                        __ptext3 162F                          __ptext4 1642                          __ptext5 165E  
                        __ptext6 0084                          __ptext7 0004                          __ptext8 0986  
                        __ptext9 1769                  __size_of_printf 0614                       ??___lwtoft 007B  
                    ?__div_to_l_ 0070                          _dpowers 1000            _OSCILLATOR_Initialize 1634  
                        _isdigit 165E                 ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070  
     __size_of_SYSTEM_Initialize 0009             end_of_initialization 07FD                _EUSART_Initialize 1653  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D               ?_EUSART_Initialize 0070  
                      _RCSTAbits 019D                          printf@c 00BA                          printf@f 0059  
                   __pstringtext 1000                   __tdiv_to_l_@f1 0070                   __tdiv_to_l_@f2 0073  
                     _printf$755 00A0                    ??__tdiv_to_l_ 0076              ??_EUSART_Initialize 0070  
                      _PORTCbits 000E            __size_of_EUSART_Write 0008        __end_of_EUSART_Initialize 165E  
                    ___ftdiv@exp 0046                       main@escape 0067                       main@conteo 0068  
                    printf@width 00B3              __size_of__div_to_l_ 011D                      ___ftmul@exp 0032  
                 __end_of___ftge 1727                   __end_of___wmul 0020                     _EUSART_Write 1642  
         ?_OSCILLATOR_Initialize 0070                   __end_of_fround 01E9                   __end_of_printf 07FD  
            start_initialization 07FD  __size_of_PIN_MANAGER_Initialize 0027              __end_of__tdiv_to_l_ 0AF0  
                    putch@txData 0071                  ___llmod@divisor 0070                  ___llmod@counter 0079  
                       ??___ftge 0076                         ??___wmul 007C                         ??_fround 003B  
                       ??_printf 005E                       fround@prec 0045                __size_of___ftpack 0064  
              __size_of___lltoft 0028                        ___latbits 0002                __size_of___lwtoft 0013  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0       __size_of_EUSART_Initialize 000B  
         _PIN_MANAGER_Initialize 169D                         ?___awdiv 0077                         ?___ftadd 0046  
                       ?___awmod 0070                         ?___ftdiv 0038                         ?___ftneg 0070  
                       ?___lldiv 0070                         ?___ftmul 0028                         ?___llmod 0070  
                       ?___ftsub 0053                        __npowers_ 1028                         ?___fttol 0041  
                    __tdiv_to_l_ 0A3A                     ??__div_to_l_ 0076                         ?_isdigit 0070  
                      _scale$754 003D                   __size_of_scale 0244                   __size_of_putch 0005  
                 ___wmul@product 007C                         _LATCbits 010E                         _LATDbits 010F  
                       _PIR1bits 0011               __end_of__div_to_l_ 0DBC                ___wmul@multiplier 0024  
                     printf@flag 00AB                       printf@fval 00B5                       printf@prec 00B8  
        ??_OSCILLATOR_Initialize 0070                 __size_of___awdiv 0052                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftneg 0008  
               __size_of___lldiv 0052                 __size_of___ftmul 00B4                 __size_of___llmod 0042  
               __size_of___ftsub 001E                 __size_of___fttol 0087                         ___ftpack 0020  
                       ___lltoft 16C4                      _isdigit$537 0070                         ___lwtoft 166C  
               __size_of_isdigit 000E                         __ptext10 0804                         __ptext11 0A3A  
                       __ptext20 16EC                         __ptext12 0C9F                         __ptext21 166C  
                       __ptext13 16C4                         __ptext22 08DD                         __ptext14 1727  
                       __ptext23 0020                         __ptext15 17AE                         __ptext24 164A  
                       __ptext16 0856                         __ptext25 169D                         __ptext17 167F  
                       __ptext26 1634                         __ptext18 0BA9                         __ptext27 1653  
                       __ptext19 163A                         __powers_ 104F                    __size_of_main 00B9  
                      printf@len 00A5                        printf@exp 00B1                        printf@val 00A7  
                       isdigit@c 0071                         scale@scl 0040                 __tdiv_to_l_@exp1 0025  
               __tdiv_to_l_@cntr 0024                 __tdiv_to_l_@quot 0020                 ___lldiv@dividend 0074  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                         printf@ap 00A4  
                       printf@cp 00A3                     ?__tdiv_to_l_ 0070                 ___lldiv@quotient 0079  
             EUSART_Write@txData 0070   __end_of_PIN_MANAGER_Initialize 16C4  
