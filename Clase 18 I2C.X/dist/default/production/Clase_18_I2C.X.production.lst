

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Aug 31 23:34:06 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  000F                     	;# 
    43  0010                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  008F                     	;# 
    62  0090                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  010E                     	;# 
    80  010F                     	;# 
    81  0110                     	;# 
    82  0111                     	;# 
    83  0112                     	;# 
    84  0113                     	;# 
    85  0114                     	;# 
    86  0115                     	;# 
    87  0116                     	;# 
    88  0117                     	;# 
    89  0118                     	;# 
    90  0119                     	;# 
    91  011A                     	;# 
    92  011B                     	;# 
    93  011D                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  018F                     	;# 
    97  0190                     	;# 
    98  0191                     	;# 
    99  0191                     	;# 
   100  0192                     	;# 
   101  0193                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0194                     	;# 
   105  0195                     	;# 
   106  0196                     	;# 
   107  0199                     	;# 
   108  019A                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019C                     	;# 
   114  019C                     	;# 
   115  019D                     	;# 
   116  019E                     	;# 
   117  019F                     	;# 
   118  020D                     	;# 
   119  0210                     	;# 
   120  0211                     	;# 
   121  0212                     	;# 
   122  0213                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0217                     	;# 
   128  0291                     	;# 
   129  0291                     	;# 
   130  0292                     	;# 
   131  0293                     	;# 
   132  0294                     	;# 
   133  0295                     	;# 
   134  0295                     	;# 
   135  0296                     	;# 
   136  0298                     	;# 
   137  0298                     	;# 
   138  0299                     	;# 
   139  029A                     	;# 
   140  029B                     	;# 
   141  029C                     	;# 
   142  029C                     	;# 
   143  029D                     	;# 
   144  029E                     	;# 
   145  029F                     	;# 
   146  0311                     	;# 
   147  0311                     	;# 
   148  0312                     	;# 
   149  0313                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0315                     	;# 
   153  0316                     	;# 
   154  0318                     	;# 
   155  0318                     	;# 
   156  0319                     	;# 
   157  031A                     	;# 
   158  031C                     	;# 
   159  031C                     	;# 
   160  031D                     	;# 
   161  031E                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  0415                     	;# 
   166  0416                     	;# 
   167  0417                     	;# 
   168  041C                     	;# 
   169  041D                     	;# 
   170  041E                     	;# 
   171  0791                     	;# 
   172  0792                     	;# 
   173  0793                     	;# 
   174  0794                     	;# 
   175  0795                     	;# 
   176  0798                     	;# 
   177  0799                     	;# 
   178  079A                     	;# 
   179  07A0                     	;# 
   180  07A1                     	;# 
   181  07A2                     	;# 
   182  07A3                     	;# 
   183  07A4                     	;# 
   184  07A5                     	;# 
   185  07A6                     	;# 
   186  07A7                     	;# 
   187  07A8                     	;# 
   188  07A9                     	;# 
   189  07AA                     	;# 
   190  07AB                     	;# 
   191  0FE4                     	;# 
   192  0FE5                     	;# 
   193  0FE6                     	;# 
   194  0FE7                     	;# 
   195  0FE8                     	;# 
   196  0FE9                     	;# 
   197  0FEA                     	;# 
   198  0FEB                     	;# 
   199  0FED                     	;# 
   200  0FEE                     	;# 
   201  0FEF                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0110                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  018F                     	;# 
   272  0190                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0199                     	;# 
   283  019A                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019C                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020D                     	;# 
   294  0210                     	;# 
   295  0211                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  029F                     	;# 
   321  0311                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0314                     	;# 
   326  0315                     	;# 
   327  0315                     	;# 
   328  0316                     	;# 
   329  0318                     	;# 
   330  0318                     	;# 
   331  0319                     	;# 
   332  031A                     	;# 
   333  031C                     	;# 
   334  031C                     	;# 
   335  031D                     	;# 
   336  031E                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  0415                     	;# 
   341  0416                     	;# 
   342  0417                     	;# 
   343  041C                     	;# 
   344  041D                     	;# 
   345  041E                     	;# 
   346  0791                     	;# 
   347  0792                     	;# 
   348  0793                     	;# 
   349  0794                     	;# 
   350  0795                     	;# 
   351  0798                     	;# 
   352  0799                     	;# 
   353  079A                     	;# 
   354  07A0                     	;# 
   355  07A1                     	;# 
   356  07A2                     	;# 
   357  07A3                     	;# 
   358  07A4                     	;# 
   359  07A5                     	;# 
   360  07A6                     	;# 
   361  07A7                     	;# 
   362  07A8                     	;# 
   363  07A9                     	;# 
   364  07AA                     	;# 
   365  07AB                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  010C                     	;# 
   428  010D                     	;# 
   429  010E                     	;# 
   430  010F                     	;# 
   431  0110                     	;# 
   432  0111                     	;# 
   433  0112                     	;# 
   434  0113                     	;# 
   435  0114                     	;# 
   436  0115                     	;# 
   437  0116                     	;# 
   438  0117                     	;# 
   439  0118                     	;# 
   440  0119                     	;# 
   441  011A                     	;# 
   442  011B                     	;# 
   443  011D                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  018F                     	;# 
   447  0190                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0194                     	;# 
   455  0195                     	;# 
   456  0196                     	;# 
   457  0199                     	;# 
   458  019A                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  020D                     	;# 
   469  0210                     	;# 
   470  0211                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0291                     	;# 
   479  0291                     	;# 
   480  0292                     	;# 
   481  0293                     	;# 
   482  0294                     	;# 
   483  0295                     	;# 
   484  0295                     	;# 
   485  0296                     	;# 
   486  0298                     	;# 
   487  0298                     	;# 
   488  0299                     	;# 
   489  029A                     	;# 
   490  029B                     	;# 
   491  029C                     	;# 
   492  029C                     	;# 
   493  029D                     	;# 
   494  029E                     	;# 
   495  029F                     	;# 
   496  0311                     	;# 
   497  0311                     	;# 
   498  0312                     	;# 
   499  0313                     	;# 
   500  0314                     	;# 
   501  0315                     	;# 
   502  0315                     	;# 
   503  0316                     	;# 
   504  0318                     	;# 
   505  0318                     	;# 
   506  0319                     	;# 
   507  031A                     	;# 
   508  031C                     	;# 
   509  031C                     	;# 
   510  031D                     	;# 
   511  031E                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  0415                     	;# 
   516  0416                     	;# 
   517  0417                     	;# 
   518  041C                     	;# 
   519  041D                     	;# 
   520  041E                     	;# 
   521  0791                     	;# 
   522  0792                     	;# 
   523  0793                     	;# 
   524  0794                     	;# 
   525  0795                     	;# 
   526  0798                     	;# 
   527  0799                     	;# 
   528  079A                     	;# 
   529  07A0                     	;# 
   530  07A1                     	;# 
   531  07A2                     	;# 
   532  07A3                     	;# 
   533  07A4                     	;# 
   534  07A5                     	;# 
   535  07A6                     	;# 
   536  07A7                     	;# 
   537  07A8                     	;# 
   538  07A9                     	;# 
   539  07AA                     	;# 
   540  07AB                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  000E                     	;# 
   567  000F                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  008F                     	;# 
   587  0090                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  010F                     	;# 
   606  0110                     	;# 
   607  0111                     	;# 
   608  0112                     	;# 
   609  0113                     	;# 
   610  0114                     	;# 
   611  0115                     	;# 
   612  0116                     	;# 
   613  0117                     	;# 
   614  0118                     	;# 
   615  0119                     	;# 
   616  011A                     	;# 
   617  011B                     	;# 
   618  011D                     	;# 
   619  018C                     	;# 
   620  018D                     	;# 
   621  018F                     	;# 
   622  0190                     	;# 
   623  0191                     	;# 
   624  0191                     	;# 
   625  0192                     	;# 
   626  0193                     	;# 
   627  0193                     	;# 
   628  0193                     	;# 
   629  0194                     	;# 
   630  0195                     	;# 
   631  0196                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019C                     	;# 
   639  019C                     	;# 
   640  019D                     	;# 
   641  019E                     	;# 
   642  019F                     	;# 
   643  020D                     	;# 
   644  0210                     	;# 
   645  0211                     	;# 
   646  0212                     	;# 
   647  0213                     	;# 
   648  0214                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0216                     	;# 
   652  0217                     	;# 
   653  0291                     	;# 
   654  0291                     	;# 
   655  0292                     	;# 
   656  0293                     	;# 
   657  0294                     	;# 
   658  0295                     	;# 
   659  0295                     	;# 
   660  0296                     	;# 
   661  0298                     	;# 
   662  0298                     	;# 
   663  0299                     	;# 
   664  029A                     	;# 
   665  029B                     	;# 
   666  029C                     	;# 
   667  029C                     	;# 
   668  029D                     	;# 
   669  029E                     	;# 
   670  029F                     	;# 
   671  0311                     	;# 
   672  0311                     	;# 
   673  0312                     	;# 
   674  0313                     	;# 
   675  0314                     	;# 
   676  0315                     	;# 
   677  0315                     	;# 
   678  0316                     	;# 
   679  0318                     	;# 
   680  0318                     	;# 
   681  0319                     	;# 
   682  031A                     	;# 
   683  031C                     	;# 
   684  031C                     	;# 
   685  031D                     	;# 
   686  031E                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  041C                     	;# 
   694  041D                     	;# 
   695  041E                     	;# 
   696  0791                     	;# 
   697  0792                     	;# 
   698  0793                     	;# 
   699  0794                     	;# 
   700  0795                     	;# 
   701  0798                     	;# 
   702  0799                     	;# 
   703  079A                     	;# 
   704  07A0                     	;# 
   705  07A1                     	;# 
   706  07A2                     	;# 
   707  07A3                     	;# 
   708  07A4                     	;# 
   709  07A5                     	;# 
   710  07A6                     	;# 
   711  07A7                     	;# 
   712  07A8                     	;# 
   713  07A9                     	;# 
   714  07AA                     	;# 
   715  07AB                     	;# 
   716  0FE4                     	;# 
   717  0FE5                     	;# 
   718  0FE6                     	;# 
   719  0FE7                     	;# 
   720  0FE8                     	;# 
   721  0FE9                     	;# 
   722  0FEA                     	;# 
   723  0FEB                     	;# 
   724  0FED                     	;# 
   725  0FEE                     	;# 
   726  0FEF                     	;# 
   727  0011                     _PIR1bits	set	17
   728  000D                     _PORTBbits	set	13
   729  0095                     _OPTION_REGbits	set	149
   730  0099                     _OSCCON	set	153
   731  009A                     _OSCSTAT	set	154
   732  0098                     _OSCTUNE	set	152
   733  008C                     _TRISA	set	140
   734  008D                     _TRISB	set	141
   735  008E                     _TRISC	set	142
   736  008E                     _TRISCbits	set	142
   737  008F                     _TRISD	set	143
   738  0090                     _TRISE	set	144
   739  011D                     _APFCON	set	285
   740  010C                     _LATA	set	268
   741  010D                     _LATB	set	269
   742  010E                     _LATC	set	270
   743  010F                     _LATD	set	271
   744  010F                     _LATDbits	set	271
   745  0110                     _LATE	set	272
   746  018C                     _ANSELA	set	396
   747  018D                     _ANSELB	set	397
   748  018F                     _ANSELD	set	399
   749  0190                     _ANSELE	set	400
   750  019F                     _BAUDCON	set	415
   751  0199                     _RCREG	set	409
   752  019D                     _RCSTA	set	413
   753  019D                     _RCSTAbits	set	413
   754  019C                     _SPBRGH	set	412
   755  019B                     _SPBRGL	set	411
   756  019A                     _TXREG	set	410
   757  019E                     _TXSTA	set	414
   758  0212                     _SSPADD	set	530
   759  0211                     _SSPBUF	set	529
   760  0215                     _SSPCON	set	533
   761  0216                     _SSPCON2	set	534
   762  0216                     _SSPCON2bits	set	534
   763  0214                     _SSPSTAT	set	532
   764  020D                     _WPUB	set	525
   765  0210                     _WPUE	set	528
   766  10B6                     _ACKSTAT	set	4278
   767                           
   768                           	psect	stringtext
   769  0800                     __pstringtext:	
   770  0800                     STR_2:	
   771  0800  340D               	retlw	13
   772  0801  340A               	retlw	10
   773  0802  3420               	retlw	32	;' '
   774  0803  3420               	retlw	32	;' '
   775  0804  344C               	retlw	76	;'L'
   776  0805  346F               	retlw	111	;'o'
   777  0806  3473               	retlw	115	;'s'
   778  0807  3420               	retlw	32	;' '
   779  0808  3444               	retlw	68	;'D'
   780  0809  3461               	retlw	97	;'a'
   781  080A  3474               	retlw	116	;'t'
   782  080B  346F               	retlw	111	;'o'
   783  080C  3473               	retlw	115	;'s'
   784  080D  3420               	retlw	32	;' '
   785  080E  3446               	retlw	70	;'F'
   786  080F  3475               	retlw	117	;'u'
   787  0810  3465               	retlw	101	;'e'
   788  0811  3472               	retlw	114	;'r'
   789  0812  346F               	retlw	111	;'o'
   790  0813  346E               	retlw	110	;'n'
   791  0814  3420               	retlw	32	;' '
   792  0815  3467               	retlw	103	;'g'
   793  0816  3475               	retlw	117	;'u'
   794  0817  3461               	retlw	97	;'a'
   795  0818  3472               	retlw	114	;'r'
   796  0819  3464               	retlw	100	;'d'
   797  081A  3461               	retlw	97	;'a'
   798  081B  3464               	retlw	100	;'d'
   799  081C  346F               	retlw	111	;'o'
   800  081D  3473               	retlw	115	;'s'
   801  081E  3420               	retlw	32	;' '
   802  081F  3463               	retlw	99	;'c'
   803  0820  346F               	retlw	111	;'o'
   804  0821  3472               	retlw	114	;'r'
   805  0822  3472               	retlw	114	;'r'
   806  0823  3465               	retlw	101	;'e'
   807  0824  3463               	retlw	99	;'c'
   808  0825  3474               	retlw	116	;'t'
   809  0826  3461               	retlw	97	;'a'
   810  0827  346D               	retlw	109	;'m'
   811  0828  3465               	retlw	101	;'e'
   812  0829  346E               	retlw	110	;'n'
   813  082A  3474               	retlw	116	;'t'
   814  082B  3465               	retlw	101	;'e'
   815  082C  3420               	retlw	32	;' '
   816  082D  340D               	retlw	13
   817  082E  340A               	retlw	10
   818  082F  3400               	retlw	0
   819  0830                     STR_6:	
   820  0830  340D               	retlw	13
   821  0831  340A               	retlw	10
   822  0832  3420               	retlw	32	;' '
   823  0833  344C               	retlw	76	;'L'
   824  0834  3465               	retlw	101	;'e'
   825  0835  3463               	retlw	99	;'c'
   826  0836  3474               	retlw	116	;'t'
   827  0837  3475               	retlw	117	;'u'
   828  0838  3472               	retlw	114	;'r'
   829  0839  3461               	retlw	97	;'a'
   830  083A  3420               	retlw	32	;' '
   831  083B  3466               	retlw	102	;'f'
   832  083C  3469               	retlw	105	;'i'
   833  083D  346E               	retlw	110	;'n'
   834  083E  3461               	retlw	97	;'a'
   835  083F  346C               	retlw	108	;'l'
   836  0840  3469               	retlw	105	;'i'
   837  0841  347A               	retlw	122	;'z'
   838  0842  3461               	retlw	97	;'a'
   839  0843  3464               	retlw	100	;'d'
   840  0844  3461               	retlw	97	;'a'
   841  0845  3420               	retlw	32	;' '
   842  0846  340D               	retlw	13
   843  0847  340A               	retlw	10
   844  0848  3400               	retlw	0
   845  0849                     STR_3:	
   846  0849  340D               	retlw	13
   847  084A  340A               	retlw	10
   848  084B  3420               	retlw	32	;' '
   849  084C  3447               	retlw	71	;'G'
   850  084D  3472               	retlw	114	;'r'
   851  084E  3461               	retlw	97	;'a'
   852  084F  3462               	retlw	98	;'b'
   853  0850  3461               	retlw	97	;'a'
   854  0851  3463               	retlw	99	;'c'
   855  0852  3469               	retlw	105	;'i'
   856  0853  346F               	retlw	111	;'o'
   857  0854  346E               	retlw	110	;'n'
   858  0855  3420               	retlw	32	;' '
   859  0856  3446               	retlw	70	;'F'
   860  0857  3469               	retlw	105	;'i'
   861  0858  346E               	retlw	110	;'n'
   862  0859  3461               	retlw	97	;'a'
   863  085A  346C               	retlw	108	;'l'
   864  085B  3469               	retlw	105	;'i'
   865  085C  347A               	retlw	122	;'z'
   866  085D  3461               	retlw	97	;'a'
   867  085E  3464               	retlw	100	;'d'
   868  085F  3461               	retlw	97	;'a'
   869  0860  3400               	retlw	0
   870  0861                     STR_4:	
   871  0861  340D               	retlw	13
   872  0862  340A               	retlw	10
   873  0863  3420               	retlw	32	;' '
   874  0864  344C               	retlw	76	;'L'
   875  0865  3465               	retlw	101	;'e'
   876  0866  3463               	retlw	99	;'c'
   877  0867  3474               	retlw	116	;'t'
   878  0868  3475               	retlw	117	;'u'
   879  0869  3472               	retlw	114	;'r'
   880  086A  3461               	retlw	97	;'a'
   881  086B  3420               	retlw	32	;' '
   882  086C  3469               	retlw	105	;'i'
   883  086D  346E               	retlw	110	;'n'
   884  086E  3469               	retlw	105	;'i'
   885  086F  3463               	retlw	99	;'c'
   886  0870  3469               	retlw	105	;'i'
   887  0871  3461               	retlw	97	;'a'
   888  0872  3464               	retlw	100	;'d'
   889  0873  3461               	retlw	97	;'a'
   890  0874  3420               	retlw	32	;' '
   891  0875  340D               	retlw	13
   892  0876  340A               	retlw	10
   893  0877  3400               	retlw	0
   894  0878                     STR_1:	
   895  0878  340D               	retlw	13
   896  0879  340A               	retlw	10
   897  087A  3420               	retlw	32	;' '
   898  087B  3447               	retlw	71	;'G'
   899  087C  3472               	retlw	114	;'r'
   900  087D  3461               	retlw	97	;'a'
   901  087E  3462               	retlw	98	;'b'
   902  087F  3461               	retlw	97	;'a'
   903  0880  3463               	retlw	99	;'c'
   904  0881  3469               	retlw	105	;'i'
   905  0882  346F               	retlw	111	;'o'
   906  0883  346E               	retlw	110	;'n'
   907  0884  3420               	retlw	32	;' '
   908  0885  3449               	retlw	73	;'I'
   909  0886  346E               	retlw	110	;'n'
   910  0887  3469               	retlw	105	;'i'
   911  0888  3463               	retlw	99	;'c'
   912  0889  3469               	retlw	105	;'i'
   913  088A  3461               	retlw	97	;'a'
   914  088B  3464               	retlw	100	;'d'
   915  088C  3461               	retlw	97	;'a'
   916  088D  3400               	retlw	0
   917  088E                     STR_5:	
   918  088E  3425               	retlw	37	;'%'
   919  088F  3463               	retlw	99	;'c'
   920  0890  3400               	retlw	0
   921                           
   922                           ; #config settings
   923  0000                     
   924                           	psect	cinit
   925  07FD                     start_initialization:	
   926  07FD                     __initialization:	
   927  07FD                     end_of_initialization:	
   928                           ;End of C runtime variable initialization code
   929                           
   930  07FD                     __end_of__initialization:	
   931  07FD  0020               	movlb	0
   932  07FE  3187  2F3F         	ljmp	_main	;jump to C main() function
   933                           
   934                           	psect	cstackCOMMON
   935  0070                     __pcstackCOMMON:	
   936  0070                     ?_SYSTEM_Initialize:	
   937  0070                     ??_SYSTEM_Initialize:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_EUSART_Read:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ??_EUSART_Read:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_PIN_MANAGER_Initialize:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ??_PIN_MANAGER_Initialize:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_OSCILLATOR_Initialize:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ??_OSCILLATOR_Initialize:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_i2c_iniciar:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ??_i2c_iniciar:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_i2c_espera:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ??_i2c_espera:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ?_i2c_inicia_com:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ??_i2c_inicia_com:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_i2c_reinicia_com:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ??_i2c_reinicia_com:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?_i2c_detener:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ??_i2c_detener:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?_i2c_envia_dato:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ??_i2c_envia_dato:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_i2c_recibe_dato:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ??_i2c_recibe_dato:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_main:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_EUSART_Initialize:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ??_EUSART_Initialize:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_EUSART_Write:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ??_EUSART_Write:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_putch:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     i2c_envia_dato@dato:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     EUSART_Write@txData:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x0
  1026  0070                     	ds	1
  1027  0071                     ?_escribe_eeprom:	
  1028  0071                     ??_putch:	
  1029                           ; 1 bytes @ 0x1
  1030                           
  1031  0071                     i2c_recibe_dato@datoleido:	
  1032                           ; 1 bytes @ 0x1
  1033                           
  1034  0071                     putch@txData:	
  1035                           ; 1 bytes @ 0x1
  1036                           
  1037  0071                     escribe_eeprom@direccion:	
  1038                           ; 1 bytes @ 0x1
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x1
  1042  0071                     	ds	1
  1043  0072                     ?_leer_eeprom:	
  1044  0072                     ?_printf:	
  1045                           ; 1 bytes @ 0x2
  1046                           
  1047  0072                     leer_eeprom@direccion:	
  1048                           ; 2 bytes @ 0x2
  1049                           
  1050  0072                     printf@f:	
  1051                           ; 2 bytes @ 0x2
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x2
  1055  0072                     	ds	1
  1056  0073                     escribe_eeprom@dato:	
  1057                           
  1058                           ; 1 bytes @ 0x3
  1059  0073                     	ds	1
  1060  0074                     ??_escribe_eeprom:	
  1061  0074                     ??_leer_eeprom:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x4
  1066  0074                     	ds	1
  1067  0075                     leer_eeprom@dato:	
  1068                           
  1069                           ; 1 bytes @ 0x5
  1070  0075                     	ds	1
  1071  0076                     ??_printf:	
  1072                           
  1073                           ; 1 bytes @ 0x6
  1074  0076                     	ds	3
  1075  0079                     printf@flag:	
  1076                           
  1077                           ; 1 bytes @ 0x9
  1078  0079                     	ds	1
  1079  007A                     printf@ap:	
  1080                           
  1081                           ; 1 bytes @ 0xA
  1082  007A                     	ds	1
  1083  007B                     printf@c:	
  1084                           
  1085                           ; 1 bytes @ 0xB
  1086  007B                     	ds	1
  1087  007C                     ??_main:	
  1088                           
  1089                           ; 1 bytes @ 0xC
  1090  007C                     	ds	2
  1091                           
  1092                           	psect	cstackBANK0
  1093  0020                     __pcstackBANK0:	
  1094  0020                     main@Rx:	
  1095                           
  1096                           ; 1 bytes @ 0x0
  1097  0020                     	ds	1
  1098  0021                     main@dato:	
  1099                           
  1100                           ; 1 bytes @ 0x1
  1101  0021                     	ds	1
  1102  0022                     main@i:	
  1103                           
  1104                           ; 2 bytes @ 0x2
  1105  0022                     	ds	2
  1106  0024                     main@i_195:	
  1107                           
  1108                           ; 2 bytes @ 0x4
  1109  0024                     	ds	2
  1110                           
  1111                           	psect	maintext
  1112  073F                     __pmaintext:	
  1113 ;;
  1114 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1115 ;;
  1116 ;; *************** function _main *****************
  1117 ;; Defined at:
  1118 ;;		line 134 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  dato            1    1[BANK0 ] unsigned char 
  1123 ;;  Rx              1    0[BANK0 ] unsigned char 
  1124 ;;  i               2    4[BANK0 ] int 
  1125 ;;  i               2    2[BANK0 ] int 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : B1F/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1135 ;;      Params:         0       0       0       0       0       0       0       0
  1136 ;;      Locals:         0       6       0       0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0       0       0       0
  1138 ;;      Totals:         2       6       0       0       0       0       0       0
  1139 ;;Total ram usage:        8 bytes
  1140 ;; Hardware stack levels required when called:    3
  1141 ;; This function calls:
  1142 ;;		_EUSART_Read
  1143 ;;		_SYSTEM_Initialize
  1144 ;;		_escribe_eeprom
  1145 ;;		_i2c_iniciar
  1146 ;;		_leer_eeprom
  1147 ;;		_printf
  1148 ;; This function is called by:
  1149 ;;		Startup code after reset
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _main
  1155  073F                     _main:	
  1156                           
  1157                           ;main.c: 136: SYSTEM_Initialize();
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1161  073F  3186  265B  3187   	fcall	_SYSTEM_Initialize
  1162                           
  1163                           ;main.c: 152: i2c_iniciar();
  1164  0742  3186  267B  3187   	fcall	_i2c_iniciar
  1165  0745                     l982:	
  1166                           ;main.c: 153: while (1) {
  1167                           
  1168                           
  1169                           ;main.c: 154: if (!PORTBbits.RB0) {
  1170  0745  0020               	movlb	0	; select bank0
  1171  0746  180D               	btfsc	13,0	;volatile
  1172  0747  2FA3               	goto	l1010
  1173                           
  1174                           ;main.c: 155: _delay((unsigned long)((20)*(20000000/4000.0)));
  1175  0748  3082               	movlw	130
  1176  0749  00FD               	movwf	??_main+1
  1177  074A  30DD               	movlw	221
  1178  074B  00FC               	movwf	??_main
  1179  074C                     u357:	
  1180  074C  0BFC               	decfsz	??_main,f
  1181  074D  2F4C               	goto	u357
  1182  074E  0BFD               	decfsz	??_main+1,f
  1183  074F  2F4C               	goto	u357
  1184  0750  3200               	nop2
  1185                           
  1186                           ;main.c: 156: if (PORTBbits.RB0) {
  1187  0751  0020               	movlb	0	; select bank0
  1188  0752  1C0D               	btfss	13,0	;volatile
  1189  0753  2FA3               	goto	l1010
  1190                           
  1191                           ;main.c: 157: LATDbits.LATD4 = 1;
  1192  0754  0022               	movlb	2	; select bank2
  1193  0755  160F               	bsf	15,4	;volatile
  1194                           
  1195                           ;main.c: 158: printf("\r\n Grabacion Iniciada");
  1196  0756  3078               	movlw	low (STR_1| (0+32768))
  1197  0757  00F2               	movwf	printf@f
  1198  0758  3088               	movlw	high (STR_1| (0+32768))
  1199  0759  00F3               	movwf	printf@f+1
  1200  075A  3186  26F8  3187   	fcall	_printf
  1201                           
  1202                           ;main.c: 159: for (int i = 0; i <= 4000; i++) {
  1203  075D  0020               	movlb	0	; select bank0
  1204  075E  01A2               	clrf	main@i
  1205  075F  01A3               	clrf	main@i+1
  1206  0760  0823               	movf	main@i+1,w
  1207  0761  3A80               	xorlw	128
  1208  0762  00FC               	movwf	??_main
  1209  0763  308F               	movlw	143
  1210  0764  027C               	subwf	??_main,w
  1211  0765  1D03               	skipz
  1212  0766  2F69               	goto	u275
  1213  0767  30A1               	movlw	161
  1214  0768  0222               	subwf	main@i,w
  1215  0769                     u275:	
  1216  0769  1803               	btfsc	3,0
  1217  076A  2F9A               	goto	l65
  1218  076B                     l998:	
  1219                           
  1220                           ;main.c: 160: char Rx = EUSART_Read();
  1221  076B  3186  266F  3187   	fcall	_EUSART_Read
  1222  076E  00FC               	movwf	??_main
  1223  076F  087C               	movf	??_main,w
  1224  0770  0020               	movlb	0	; select bank0
  1225  0771  00A0               	movwf	main@Rx
  1226                           
  1227                           ;main.c: 161: escribe_eeprom(i, Rx);
  1228  0772  0823               	movf	main@i+1,w
  1229  0773  00F2               	movwf	escribe_eeprom@direccion+1
  1230  0774  0822               	movf	main@i,w
  1231  0775  00F1               	movwf	escribe_eeprom@direccion
  1232  0776  0820               	movf	main@Rx,w
  1233  0777  00FC               	movwf	??_main
  1234  0778  087C               	movf	??_main,w
  1235  0779  00F3               	movwf	escribe_eeprom@dato
  1236  077A  3186  269B  3187   	fcall	_escribe_eeprom
  1237                           
  1238                           ;main.c: 163: if (Rx == '@') {
  1239  077D  3040               	movlw	64
  1240  077E  0020               	movlb	0	; select bank0
  1241  077F  0620               	xorwf	main@Rx,w
  1242  0780  1D03               	btfss	3,2
  1243  0781  2F8A               	goto	l1006
  1244                           
  1245                           ;main.c: 164: printf("\r\n  Los Datos Fueron guardados correctamente \r\n");
  1246  0782  3000               	movlw	low (STR_2| (0+32768))
  1247  0783  00F2               	movwf	printf@f
  1248  0784  3088               	movlw	high (STR_2| (0+32768))
  1249  0785  00F3               	movwf	printf@f+1
  1250  0786  3186  26F8  3187   	fcall	_printf
  1251                           
  1252                           ;main.c: 165: break;
  1253  0789  2F9A               	goto	l65
  1254  078A                     l1006:	
  1255  078A  3001               	movlw	1
  1256  078B  0020               	movlb	0	; select bank0
  1257  078C  07A2               	addwf	main@i,f
  1258  078D  3000               	movlw	0
  1259  078E  3DA3               	addwfc	main@i+1,f
  1260  078F  0823               	movf	main@i+1,w
  1261  0790  3A80               	xorlw	128
  1262  0791  00FC               	movwf	??_main
  1263  0792  308F               	movlw	143
  1264  0793  027C               	subwf	??_main,w
  1265  0794  1D03               	skipz
  1266  0795  2F98               	goto	u295
  1267  0796  30A1               	movlw	161
  1268  0797  0222               	subwf	main@i,w
  1269  0798                     u295:	
  1270  0798  1C03               	skipc
  1271  0799  2F6B               	goto	l998
  1272  079A                     l65:	
  1273                           
  1274                           ;main.c: 166: }
  1275                           ;main.c: 167: }
  1276                           ;main.c: 168: LATDbits.LATD4 = 0;
  1277  079A  0022               	movlb	2	; select bank2
  1278  079B  120F               	bcf	15,4	;volatile
  1279                           
  1280                           ;main.c: 169: printf("\r\n Grabacion Finalizada");
  1281  079C  3049               	movlw	low (STR_3| (0+32768))
  1282  079D  00F2               	movwf	printf@f
  1283  079E  3088               	movlw	high (STR_3| (0+32768))
  1284  079F  00F3               	movwf	printf@f+1
  1285  07A0  3186  26F8  3187   	fcall	_printf
  1286  07A3                     l1010:	
  1287                           
  1288                           ;main.c: 170: }
  1289                           ;main.c: 171: }
  1290                           ;main.c: 172: if (!PORTBbits.RB1) {
  1291  07A3  0020               	movlb	0	; select bank0
  1292  07A4  188D               	btfsc	13,1	;volatile
  1293  07A5  2F45               	goto	l982
  1294                           
  1295                           ;main.c: 173: _delay((unsigned long)((20)*(20000000/4000.0)));
  1296  07A6  3082               	movlw	130
  1297  07A7  00FD               	movwf	??_main+1
  1298  07A8  30DD               	movlw	221
  1299  07A9  00FC               	movwf	??_main
  1300  07AA                     u367:	
  1301  07AA  0BFC               	decfsz	??_main,f
  1302  07AB  2FAA               	goto	u367
  1303  07AC  0BFD               	decfsz	??_main+1,f
  1304  07AD  2FAA               	goto	u367
  1305  07AE  3200               	nop2
  1306                           
  1307                           ;main.c: 174: if (PORTBbits.RB1) {
  1308  07AF  0020               	movlb	0	; select bank0
  1309  07B0  1C8D               	btfss	13,1	;volatile
  1310  07B1  2F45               	goto	l982
  1311                           
  1312                           ;main.c: 175: printf("\r\n Lectura iniciada \r\n");
  1313  07B2  3061               	movlw	low (STR_4| (0+32768))
  1314  07B3  00F2               	movwf	printf@f
  1315  07B4  3088               	movlw	high (STR_4| (0+32768))
  1316  07B5  00F3               	movwf	printf@f+1
  1317  07B6  3186  26F8  3187   	fcall	_printf
  1318                           
  1319                           ;main.c: 176: for (int i = 0; i <= 4000; i++) {
  1320  07B9  0020               	movlb	0	; select bank0
  1321  07BA  01A4               	clrf	main@i_195
  1322  07BB  01A5               	clrf	main@i_195+1
  1323  07BC  0825               	movf	main@i_195+1,w
  1324  07BD  3A80               	xorlw	128
  1325  07BE  00FC               	movwf	??_main
  1326  07BF  308F               	movlw	143
  1327  07C0  027C               	subwf	??_main,w
  1328  07C1  1D03               	skipz
  1329  07C2  2FC5               	goto	u325
  1330  07C3  30A1               	movlw	161
  1331  07C4  0224               	subwf	main@i_195,w
  1332  07C5                     u325:	
  1333  07C5  1803               	btfsc	3,0
  1334  07C6  2FF5               	goto	l1036
  1335  07C7                     l1024:	
  1336                           
  1337                           ;main.c: 177: unsigned char dato = leer_eeprom(i);
  1338  07C7  0020               	movlb	0	; select bank0
  1339  07C8  0825               	movf	main@i_195+1,w
  1340  07C9  00F3               	movwf	leer_eeprom@direccion+1
  1341  07CA  0824               	movf	main@i_195,w
  1342  07CB  00F2               	movwf	leer_eeprom@direccion
  1343  07CC  3186  26B1  3187   	fcall	_leer_eeprom
  1344  07CF  00FC               	movwf	??_main
  1345  07D0  087C               	movf	??_main,w
  1346  07D1  0020               	movlb	0	; select bank0
  1347  07D2  00A1               	movwf	main@dato
  1348                           
  1349                           ;main.c: 178: if (dato == '@') {
  1350  07D3  3040               	movlw	64
  1351  07D4  0621               	xorwf	main@dato,w
  1352  07D5  1903               	btfsc	3,2
  1353  07D6  2FF5               	goto	l1036
  1354                           
  1355                           ;main.c: 180: }
  1356                           ;main.c: 181: printf("%c", dato);
  1357                           
  1358                           ;main.c: 179: break;
  1359  07D7  308E               	movlw	low (STR_5| (0+32768))
  1360  07D8  00F2               	movwf	printf@f
  1361  07D9  3088               	movlw	high (STR_5| (0+32768))
  1362  07DA  00F3               	movwf	printf@f+1
  1363  07DB  0821               	movf	main@dato,w
  1364  07DC  00FC               	movwf	??_main
  1365  07DD  01FD               	clrf	??_main+1
  1366  07DE  087C               	movf	??_main,w
  1367  07DF  00F4               	movwf	?_printf+2
  1368  07E0  087D               	movf	??_main+1,w
  1369  07E1  00F5               	movwf	?_printf+3
  1370  07E2  3186  26F8  3187   	fcall	_printf
  1371  07E5  3001               	movlw	1
  1372  07E6  0020               	movlb	0	; select bank0
  1373  07E7  07A4               	addwf	main@i_195,f
  1374  07E8  3000               	movlw	0
  1375  07E9  3DA5               	addwfc	main@i_195+1,f
  1376  07EA  0825               	movf	main@i_195+1,w
  1377  07EB  3A80               	xorlw	128
  1378  07EC  00FC               	movwf	??_main
  1379  07ED  308F               	movlw	143
  1380  07EE  027C               	subwf	??_main,w
  1381  07EF  1D03               	skipz
  1382  07F0  2FF3               	goto	u345
  1383  07F1  30A1               	movlw	161
  1384  07F2  0224               	subwf	main@i_195,w
  1385  07F3                     u345:	
  1386  07F3  1C03               	skipc
  1387  07F4  2FC7               	goto	l1024
  1388  07F5                     l1036:	
  1389                           
  1390                           ;main.c: 182: }
  1391                           ;main.c: 183: printf("\r\n Lectura finalizada \r\n");
  1392  07F5  3030               	movlw	low (STR_6| (0+32768))
  1393  07F6  00F2               	movwf	printf@f
  1394  07F7  3088               	movlw	high (STR_6| (0+32768))
  1395  07F8  00F3               	movwf	printf@f+1
  1396  07F9  3186  26F8  3187   	fcall	_printf
  1397  07FC  2F45               	goto	l982
  1398  07FD                     __end_of_main:	
  1399                           
  1400                           	psect	text1
  1401  06F8                     __ptext1:	
  1402 ;; *************** function _printf *****************
  1403 ;; Defined at:
  1404 ;;		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  f               2    2[COMMON] PTR const unsigned char 
  1407 ;;		 -> STR_6(25), STR_5(3), STR_4(23), STR_3(24), 
  1408 ;;		 -> STR_2(48), STR_1(22), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  tmpval          4    0        struct .
  1411 ;;  cp              2    0        PTR const unsigned char 
  1412 ;;  len             2    0        unsigned int 
  1413 ;;  val             2    0        unsigned int 
  1414 ;;  c               1   11[COMMON] char 
  1415 ;;  ap              1   10[COMMON] PTR void [1]
  1416 ;;		 -> ?_printf(2), 
  1417 ;;  flag            1    9[COMMON] unsigned char 
  1418 ;;  prec            1    0        char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    2[COMMON] int 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1428 ;;      Params:         4       0       0       0       0       0       0       0
  1429 ;;      Locals:         3       0       0       0       0       0       0       0
  1430 ;;      Temps:          3       0       0       0       0       0       0       0
  1431 ;;      Totals:        10       0       0       0       0       0       0       0
  1432 ;;Total ram usage:       10 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    2
  1435 ;; This function calls:
  1436 ;;		_putch
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function _printf
  1444  06F8                     _printf:	
  1445                           
  1446                           ;doprnt.c: 466: va_list ap;
  1447                           ;doprnt.c: 499: signed char c;
  1448                           ;doprnt.c: 506: signed char prec;
  1449                           ;doprnt.c: 508: unsigned char flag;
  1450                           ;doprnt.c: 523: union {
  1451                           ;doprnt.c: 524: unsigned long vd;
  1452                           ;doprnt.c: 525: double integ;
  1453                           ;doprnt.c: 526: } tmpval;
  1454                           ;doprnt.c: 528: unsigned int val;
  1455                           ;doprnt.c: 529: unsigned len;
  1456                           ;doprnt.c: 530: const char * cp;
  1457                           ;doprnt.c: 533: *ap = __va_start();
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1461  06F8  3074               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1462  06F9  00F6               	movwf	??_printf
  1463  06FA  0876               	movf	??_printf,w
  1464  06FB  00FA               	movwf	printf@ap
  1465  06FC                     l970:	
  1466                           ;doprnt.c: 1422: {
  1467                           
  1468                           ;doprnt.c: 536: while(c = *f++) {
  1469                           
  1470  06FC  0873               	movf	printf@f+1,w
  1471  06FD  00F7               	movwf	??_printf+1
  1472  06FE  0872               	movf	printf@f,w
  1473  06FF  00F6               	movwf	??_printf
  1474  0700  0AF2               	incf	printf@f,f
  1475  0701  1903               	skipnz
  1476  0702  0AF3               	incf	printf@f+1,f
  1477  0703  0876               	movf	??_printf,w
  1478  0704  0084               	movwf	4
  1479  0705  0877               	movf	??_printf+1,w
  1480  0706  0085               	movwf	5
  1481  0707  0800               	movf	0,w	;code access
  1482  0708  00F8               	movwf	??_printf+2
  1483  0709  0878               	movf	??_printf+2,w
  1484  070A  00FB               	movwf	printf@c
  1485  070B  087B               	movf	printf@c,w
  1486  070C  1903               	btfsc	3,2
  1487  070D  0008               	return
  1488                           
  1489                           ;doprnt.c: 538: if(c != '%')
  1490  070E  3025               	movlw	37
  1491  070F  067B               	xorwf	printf@c,w
  1492  0710  1903               	btfsc	3,2
  1493  0711  2F17               	goto	l958
  1494                           
  1495                           ;doprnt.c: 540: {
  1496                           ;doprnt.c: 541: (putch(c) );
  1497  0712  087B               	movf	printf@c,w
  1498  0713  3186  2639  3186   	fcall	_putch
  1499                           
  1500                           ;doprnt.c: 542: continue;
  1501  0716  2EFC               	goto	l970
  1502  0717                     l958:	
  1503                           
  1504                           ;doprnt.c: 543: }
  1505                           ;doprnt.c: 548: flag = 0;
  1506  0717  01F9               	clrf	printf@flag
  1507                           
  1508                           ;doprnt.c: 635: switch(c = *f++) {
  1509  0718  2F29               	goto	l968
  1510  0719                     l960:	
  1511                           ;doprnt.c: 784: case 'c':
  1512                           
  1513                           ;doprnt.c: 638: goto alldone;
  1514                           
  1515                           ;doprnt.c: 637: case 0:
  1516                           
  1517                           
  1518                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1519  0719  087A               	movf	printf@ap,w
  1520  071A  0086               	movwf	6
  1521  071B  0187               	clrf	7
  1522  071C  0801               	movf	1,w
  1523  071D  00F6               	movwf	??_printf
  1524  071E  0876               	movf	??_printf,w
  1525  071F  00FB               	movwf	printf@c
  1526  0720  3002               	movlw	2
  1527  0721  00F6               	movwf	??_printf
  1528  0722  0876               	movf	??_printf,w
  1529  0723  07FA               	addwf	printf@ap,f
  1530  0724                     l964:	
  1531                           ;doprnt.c: 802: default:
  1532                           
  1533                           
  1534                           ;doprnt.c: 809: (putch(c) );
  1535  0724  087B               	movf	printf@c,w
  1536  0725  3186  2639  3186   	fcall	_putch
  1537                           
  1538                           ;doprnt.c: 822: }
  1539                           
  1540                           ;doprnt.c: 810: continue;
  1541  0728  2EFC               	goto	l970
  1542  0729                     l968:	
  1543  0729  0873               	movf	printf@f+1,w
  1544  072A  00F7               	movwf	??_printf+1
  1545  072B  0872               	movf	printf@f,w
  1546  072C  00F6               	movwf	??_printf
  1547  072D  0AF2               	incf	printf@f,f
  1548  072E  1903               	skipnz
  1549  072F  0AF3               	incf	printf@f+1,f
  1550  0730  0876               	movf	??_printf,w
  1551  0731  0084               	movwf	4
  1552  0732  0877               	movf	??_printf+1,w
  1553  0733  0085               	movwf	5
  1554  0734  0800               	movf	0,w	;code access
  1555  0735  00FB               	movwf	printf@c
  1556                           
  1557                           ; Switch size 1, requested type "space"
  1558                           ; Number of cases is 2, Range of values is 0 to 99
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte            7     4 (average)
  1562                           ; direct_byte          206     6 (fixed)
  1563                           ; jumptable            260     6 (fixed)
  1564                           ;	Chosen strategy is simple_byte
  1565  0736  3A00               	xorlw	0	; case 0
  1566  0737  1903               	skipnz
  1567  0738  2F3E               	goto	l190
  1568  0739  3A63               	xorlw	99	; case 99
  1569  073A  1903               	skipnz
  1570  073B  2F19               	goto	l960
  1571  073C  2F24               	goto	l964
  1572  073D  2EFC               	goto	l970
  1573  073E                     l190:	
  1574                           ;doprnt.c: 1540: return 0;
  1575                           ;	Return value of _printf is never used
  1576                           
  1577                           ;doprnt.c: 1469: }
  1578                           ;doprnt.c: 1533: }
  1579                           ;doprnt.c: 1535: alldone:
  1580                           
  1581  073E  0008               	return
  1582  073F                     __end_of_printf:	
  1583                           
  1584                           	psect	text2
  1585  0639                     __ptext2:	
  1586 ;; *************** function _putch *****************
  1587 ;; Defined at:
  1588 ;;		line 111 in file "mcc_generated_files/eusart.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  txData          1    wreg     unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  txData          1    1[COMMON] unsigned char 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1602 ;;      Params:         0       0       0       0       0       0       0       0
  1603 ;;      Locals:         1       0       0       0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0       0       0
  1605 ;;      Totals:         1       0       0       0       0       0       0       0
  1606 ;;Total ram usage:        1 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    1
  1609 ;; This function calls:
  1610 ;;		_EUSART_Write
  1611 ;; This function is called by:
  1612 ;;		_printf
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _putch
  1618  0639                     _putch:	
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1622                           ;putch@txData stored from wreg
  1623  0639  00F1               	movwf	putch@txData
  1624                           
  1625                           ;eusart.c: 113: EUSART_Write(txData);
  1626  063A  0871               	movf	putch@txData,w
  1627  063B  3186  2653         	fcall	_EUSART_Write
  1628  063D  0008               	return
  1629  063E                     __end_of_putch:	
  1630                           
  1631                           	psect	text3
  1632  0653                     __ptext3:	
  1633 ;; *************** function _EUSART_Write *****************
  1634 ;; Defined at:
  1635 ;;		line 97 in file "mcc_generated_files/eusart.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  txData          1    wreg     unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  txData          1    0[COMMON] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1649 ;;      Params:         0       0       0       0       0       0       0       0
  1650 ;;      Locals:         1       0       0       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0
  1652 ;;      Totals:         1       0       0       0       0       0       0       0
  1653 ;;Total ram usage:        1 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_putch
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _EUSART_Write
  1664  0653                     _EUSART_Write:	
  1665                           
  1666                           ;incstack = 0
  1667                           ; Regs used in _EUSART_Write: [wreg]
  1668                           ;EUSART_Write@txData stored from wreg
  1669  0653  00F0               	movwf	EUSART_Write@txData
  1670  0654                     l105:	
  1671                           ;eusart.c: 100: {
  1672                           
  1673                           ;eusart.c: 99: while(0 == PIR1bits.TXIF)
  1674                           
  1675  0654  0020               	movlb	0	; select bank0
  1676  0655  1E11               	btfss	17,4	;volatile
  1677  0656  2E54               	goto	l105
  1678                           
  1679                           ;eusart.c: 101: }
  1680                           ;eusart.c: 103: TXREG = txData;
  1681  0657  0870               	movf	EUSART_Write@txData,w
  1682  0658  0023               	movlb	3	; select bank3
  1683  0659  009A               	movwf	26	;volatile
  1684  065A  0008               	return
  1685  065B                     __end_of_EUSART_Write:	
  1686                           
  1687                           	psect	text4
  1688  06B1                     __ptext4:	
  1689 ;; *************** function _leer_eeprom *****************
  1690 ;; Defined at:
  1691 ;;		line 88 in file "main.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  direccion       2    2[COMMON] unsigned int 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  dato            1    5[COMMON] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      unsigned char 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1705 ;;      Params:         2       0       0       0       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0       0       0       0
  1707 ;;      Temps:          1       0       0       0       0       0       0       0
  1708 ;;      Totals:         4       0       0       0       0       0       0       0
  1709 ;;Total ram usage:        4 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    2
  1712 ;; This function calls:
  1713 ;;		_i2c_detener
  1714 ;;		_i2c_envia_dato
  1715 ;;		_i2c_inicia_com
  1716 ;;		_i2c_recibe_dato
  1717 ;;		_i2c_reinicia_com
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           
  1724                           ;psect for function _leer_eeprom
  1725  06B1                     _leer_eeprom:	
  1726                           
  1727                           ;main.c: 89: unsigned char dato;
  1728                           ;main.c: 91: i2c_inicia_com();
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _leer_eeprom: [wreg+status,2+status,0+pclath+cstack]
  1732  06B1  3186  262F  3186   	fcall	_i2c_inicia_com
  1733                           
  1734                           ;main.c: 93: i2c_envia_dato(0xa0);
  1735  06B4  30A0               	movlw	160
  1736  06B5  3186  2644  3186   	fcall	_i2c_envia_dato
  1737                           
  1738                           ;main.c: 104: i2c_envia_dato(direccion >> 8);
  1739  06B8  0873               	movf	leer_eeprom@direccion+1,w
  1740  06B9  3186  2644  3186   	fcall	_i2c_envia_dato
  1741                           
  1742                           ;main.c: 106: i2c_envia_dato(direccion);
  1743  06BC  0872               	movf	leer_eeprom@direccion,w
  1744  06BD  3186  2644  3186   	fcall	_i2c_envia_dato
  1745                           
  1746                           ;main.c: 111: i2c_reinicia_com();
  1747  06C0  3186  2634  3186   	fcall	_i2c_reinicia_com
  1748                           
  1749                           ;main.c: 118: i2c_envia_dato(0xa1);
  1750  06C3  30A1               	movlw	161
  1751  06C4  3186  2644  3186   	fcall	_i2c_envia_dato
  1752                           
  1753                           ;main.c: 122: dato = i2c_recibe_dato();
  1754  06C7  3186  2687  3186   	fcall	_i2c_recibe_dato
  1755  06CA  00F4               	movwf	??_leer_eeprom
  1756  06CB  0874               	movf	??_leer_eeprom,w
  1757  06CC  00F5               	movwf	leer_eeprom@dato
  1758                           
  1759                           ;main.c: 125: i2c_detener();
  1760  06CD  3186  262A         	fcall	_i2c_detener
  1761                           
  1762                           ;main.c: 127: return dato;
  1763  06CF  0875               	movf	leer_eeprom@dato,w
  1764  06D0  0008               	return
  1765  06D1                     __end_of_leer_eeprom:	
  1766                           
  1767                           	psect	text5
  1768  0634                     __ptext5:	
  1769 ;; *************** function _i2c_reinicia_com *****************
  1770 ;; Defined at:
  1771 ;;		line 37 in file "I2C.h"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1785 ;;      Params:         0       0       0       0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    1
  1792 ;; This function calls:
  1793 ;;		_i2c_espera
  1794 ;; This function is called by:
  1795 ;;		_leer_eeprom
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function _i2c_reinicia_com
  1801  0634                     _i2c_reinicia_com:	
  1802                           
  1803                           ;I2C.h: 38: i2c_espera();
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _i2c_reinicia_com: [wreg+status,2+status,0+pclath+cstack]
  1807  0634  3186  264B         	fcall	_i2c_espera
  1808                           
  1809                           ;I2C.h: 39: SSPCON2bits.RSEN = 1;
  1810  0636  0024               	movlb	4	; select bank4
  1811  0637  1496               	bsf	22,1	;volatile
  1812  0638  0008               	return
  1813  0639                     __end_of_i2c_reinicia_com:	
  1814                           
  1815                           	psect	text6
  1816  0687                     __ptext6:	
  1817 ;; *************** function _i2c_recibe_dato *****************
  1818 ;; Defined at:
  1819 ;;		line 68 in file "I2C.h"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  datoleido       1    1[COMMON] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      unsigned char 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0, pclath, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1833 ;;      Params:         0       0       0       0       0       0       0       0
  1834 ;;      Locals:         1       0       0       0       0       0       0       0
  1835 ;;      Temps:          1       0       0       0       0       0       0       0
  1836 ;;      Totals:         2       0       0       0       0       0       0       0
  1837 ;;Total ram usage:        2 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    1
  1840 ;; This function calls:
  1841 ;;		_i2c_espera
  1842 ;; This function is called by:
  1843 ;;		_leer_eeprom
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _i2c_recibe_dato
  1849  0687                     _i2c_recibe_dato:	
  1850                           
  1851                           ;I2C.h: 70: unsigned char datoleido;
  1852                           ;I2C.h: 73: i2c_espera();
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _i2c_recibe_dato: [wreg+status,2+status,0+pclath+cstack]
  1856  0687  3186  264B  3186   	fcall	_i2c_espera
  1857                           
  1858                           ;I2C.h: 74: SSPCON2bits.RCEN = 1;
  1859  068A  0024               	movlb	4	; select bank4
  1860  068B  1596               	bsf	22,3	;volatile
  1861                           
  1862                           ;I2C.h: 78: i2c_espera();
  1863  068C  3186  264B  3186   	fcall	_i2c_espera
  1864                           
  1865                           ;I2C.h: 79: datoleido = SSPBUF;
  1866  068F  0024               	movlb	4	; select bank4
  1867  0690  0811               	movf	17,w	;volatile
  1868  0691  00F0               	movwf	??_i2c_recibe_dato
  1869  0692  0870               	movf	??_i2c_recibe_dato,w
  1870  0693  00F1               	movwf	i2c_recibe_dato@datoleido
  1871                           
  1872                           ;I2C.h: 82: i2c_espera();
  1873  0694  3186  264B         	fcall	_i2c_espera
  1874                           
  1875                           ;I2C.h: 84: SSPCON2bits.ACKDT = 1;
  1876  0696  0024               	movlb	4	; select bank4
  1877  0697  1696               	bsf	22,5	;volatile
  1878                           
  1879                           ;I2C.h: 89: SSPCON2bits.ACKEN = 1;
  1880  0698  1616               	bsf	22,4	;volatile
  1881                           
  1882                           ;I2C.h: 93: return datoleido;
  1883  0699  0871               	movf	i2c_recibe_dato@datoleido,w
  1884  069A  0008               	return
  1885  069B                     __end_of_i2c_recibe_dato:	
  1886                           
  1887                           	psect	text7
  1888  067B                     __ptext7:	
  1889 ;; *************** function _i2c_iniciar *****************
  1890 ;; Defined at:
  1891 ;;		line 4 in file "I2C.h"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1905 ;;      Params:         0       0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _i2c_iniciar
  1920  067B                     _i2c_iniciar:	
  1921                           
  1922                           ;I2C.h: 5: TRISCbits.TRISC3=1;
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in _i2c_iniciar: [wreg+status,2]
  1926  067B  0021               	movlb	1	; select bank1
  1927  067C  158E               	bsf	14,3	;volatile
  1928                           
  1929                           ;I2C.h: 6: TRISCbits.TRISC4=1;
  1930  067D  160E               	bsf	14,4	;volatile
  1931                           
  1932                           ;I2C.h: 7: SSPSTAT=0b10000000;
  1933  067E  3080               	movlw	128
  1934  067F  0024               	movlb	4	; select bank4
  1935  0680  0094               	movwf	20	;volatile
  1936                           
  1937                           ;I2C.h: 8: SSPCON=0b00101000;
  1938  0681  3028               	movlw	40
  1939  0682  0095               	movwf	21	;volatile
  1940                           
  1941                           ;I2C.h: 9: SSPCON2=0b00000000;
  1942  0683  0196               	clrf	22	;volatile
  1943                           
  1944                           ;I2C.h: 10: SSPADD=49;
  1945  0684  3031               	movlw	49
  1946  0685  0092               	movwf	18	;volatile
  1947  0686  0008               	return
  1948  0687                     __end_of_i2c_iniciar:	
  1949                           
  1950                           	psect	text8
  1951  069B                     __ptext8:	
  1952 ;; *************** function _escribe_eeprom *****************
  1953 ;; Defined at:
  1954 ;;		line 60 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  direccion       2    1[COMMON] unsigned int 
  1957 ;;  dato            1    3[COMMON] unsigned char 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1969 ;;      Params:         3       0       0       0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0
  1972 ;;      Totals:         3       0       0       0       0       0       0       0
  1973 ;;Total ram usage:        3 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    2
  1976 ;; This function calls:
  1977 ;;		_i2c_detener
  1978 ;;		_i2c_envia_dato
  1979 ;;		_i2c_inicia_com
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _escribe_eeprom
  1987  069B                     _escribe_eeprom:	
  1988                           
  1989                           ;main.c: 61: i2c_inicia_com();
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _escribe_eeprom: [wreg+status,2+status,0+pclath+cstack]
  1993  069B  3186  262F  3186   	fcall	_i2c_inicia_com
  1994                           
  1995                           ;main.c: 63: i2c_envia_dato(0xa0);
  1996  069E  30A0               	movlw	160
  1997  069F  3186  2644  3186   	fcall	_i2c_envia_dato
  1998                           
  1999                           ;main.c: 74: i2c_envia_dato(direccion >> 8);
  2000  06A2  0872               	movf	escribe_eeprom@direccion+1,w
  2001  06A3  3186  2644  3186   	fcall	_i2c_envia_dato
  2002                           
  2003                           ;main.c: 76: i2c_envia_dato(direccion);
  2004  06A6  0871               	movf	escribe_eeprom@direccion,w
  2005  06A7  3186  2644  3186   	fcall	_i2c_envia_dato
  2006                           
  2007                           ;main.c: 81: i2c_envia_dato(dato);
  2008  06AA  0873               	movf	escribe_eeprom@dato,w
  2009  06AB  3186  2644  3186   	fcall	_i2c_envia_dato
  2010                           
  2011                           ;main.c: 85: i2c_detener();
  2012  06AE  3186  262A         	fcall	_i2c_detener
  2013  06B0  0008               	return
  2014  06B1                     __end_of_escribe_eeprom:	
  2015                           
  2016                           	psect	text9
  2017  062F                     __ptext9:	
  2018 ;; *************** function _i2c_inicia_com *****************
  2019 ;; Defined at:
  2020 ;;		line 28 in file "I2C.h"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2034 ;;      Params:         0       0       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		_i2c_espera
  2043 ;; This function is called by:
  2044 ;;		_escribe_eeprom
  2045 ;;		_leer_eeprom
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _i2c_inicia_com
  2051  062F                     _i2c_inicia_com:	
  2052                           
  2053                           ;I2C.h: 29: i2c_espera();
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _i2c_inicia_com: [wreg+status,2+status,0+pclath+cstack]
  2057  062F  3186  264B         	fcall	_i2c_espera
  2058                           
  2059                           ;I2C.h: 30: SSPCON2bits.SEN = 1;
  2060  0631  0024               	movlb	4	; select bank4
  2061  0632  1416               	bsf	22,0	;volatile
  2062  0633  0008               	return
  2063  0634                     __end_of_i2c_inicia_com:	
  2064                           
  2065                           	psect	text10
  2066  0644                     __ptext10:	
  2067 ;; *************** function _i2c_envia_dato *****************
  2068 ;; Defined at:
  2069 ;;		line 57 in file "I2C.h"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  dato            1    wreg     unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  dato            1    0[COMMON] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      unsigned char 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2083 ;;      Params:         0       0       0       0       0       0       0       0
  2084 ;;      Locals:         1       0       0       0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0       0
  2086 ;;      Totals:         1       0       0       0       0       0       0       0
  2087 ;;Total ram usage:        1 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    1
  2090 ;; This function calls:
  2091 ;;		_i2c_espera
  2092 ;; This function is called by:
  2093 ;;		_escribe_eeprom
  2094 ;;		_leer_eeprom
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _i2c_envia_dato
  2100  0644                     _i2c_envia_dato:	
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _i2c_envia_dato: [wreg+status,2+status,0+pclath+cstack]
  2104                           ;i2c_envia_dato@dato stored from wreg
  2105  0644  00F0               	movwf	i2c_envia_dato@dato
  2106                           
  2107                           ;I2C.h: 58: i2c_espera();
  2108  0645  3186  264B         	fcall	_i2c_espera
  2109                           
  2110                           ;I2C.h: 59: SSPBUF = dato;
  2111  0647  0870               	movf	i2c_envia_dato@dato,w
  2112  0648  0024               	movlb	4	; select bank4
  2113  0649  0091               	movwf	17	;volatile
  2114                           
  2115                           ;I2C.h: 60: return ACKSTAT;
  2116                           ;	Return value of _i2c_envia_dato is never used
  2117  064A  0008               	return
  2118  064B                     __end_of_i2c_envia_dato:	
  2119                           
  2120                           	psect	text11
  2121  062A                     __ptext11:	
  2122 ;; *************** function _i2c_detener *****************
  2123 ;; Defined at:
  2124 ;;		line 46 in file "I2C.h"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2138 ;;      Params:         0       0       0       0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    1
  2145 ;; This function calls:
  2146 ;;		_i2c_espera
  2147 ;; This function is called by:
  2148 ;;		_escribe_eeprom
  2149 ;;		_leer_eeprom
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _i2c_detener
  2155  062A                     _i2c_detener:	
  2156                           
  2157                           ;I2C.h: 47: i2c_espera();
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _i2c_detener: [wreg+status,2+status,0+pclath+cstack]
  2161  062A  3186  264B         	fcall	_i2c_espera
  2162                           
  2163                           ;I2C.h: 48: SSPCON2bits.PEN = 1;
  2164  062C  0024               	movlb	4	; select bank4
  2165  062D  1516               	bsf	22,2	;volatile
  2166  062E  0008               	return
  2167  062F                     __end_of_i2c_detener:	
  2168                           
  2169                           	psect	text12
  2170  064B                     __ptext12:	
  2171 ;; *************** function _i2c_espera *****************
  2172 ;; Defined at:
  2173 ;;		line 20 in file "I2C.h"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2187 ;;      Params:         0       0       0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_i2c_inicia_com
  2197 ;;		_i2c_reinicia_com
  2198 ;;		_i2c_detener
  2199 ;;		_i2c_envia_dato
  2200 ;;		_i2c_recibe_dato
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _i2c_espera
  2206  064B                     _i2c_espera:	
  2207  064B                     l848:	
  2208                           ;I2C.h: 21: while((SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100));
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _i2c_espera: [wreg+status,2]
  2212                           
  2213  064B  0024               	movlb	4	; select bank4
  2214  064C  0816               	movf	22,w	;volatile
  2215  064D  391F               	andlw	31
  2216  064E  1D03               	btfss	3,2
  2217  064F  2E4B               	goto	l848
  2218  0650  1D14               	btfss	20,2	;volatile
  2219  0651  0008               	return
  2220  0652  2E4B               	goto	l848
  2221  0653                     __end_of_i2c_espera:	
  2222                           
  2223                           	psect	text13
  2224  065B                     __ptext13:	
  2225 ;; *************** function _SYSTEM_Initialize *****************
  2226 ;; Defined at:
  2227 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2241 ;;      Params:         0       0       0       0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0
  2244 ;;      Totals:         0       0       0       0       0       0       0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    1
  2248 ;; This function calls:
  2249 ;;		_EUSART_Initialize
  2250 ;;		_OSCILLATOR_Initialize
  2251 ;;		_PIN_MANAGER_Initialize
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _SYSTEM_Initialize
  2259  065B                     _SYSTEM_Initialize:	
  2260                           
  2261                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2265  065B  3186  26D1  3186   	fcall	_PIN_MANAGER_Initialize
  2266                           
  2267                           ;mcc.c: 74: OSCILLATOR_Initialize();
  2268  065E  3186  263E  3186   	fcall	_OSCILLATOR_Initialize
  2269                           
  2270                           ;mcc.c: 75: EUSART_Initialize();
  2271  0661  3186  2664         	fcall	_EUSART_Initialize
  2272  0663  0008               	return
  2273  0664                     __end_of_SYSTEM_Initialize:	
  2274                           
  2275                           	psect	text14
  2276  06D1                     __ptext14:	
  2277 ;; *************** function _PIN_MANAGER_Initialize *****************
  2278 ;; Defined at:
  2279 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2293 ;;      Params:         0       0       0       0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_SYSTEM_Initialize
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function _PIN_MANAGER_Initialize
  2308  06D1                     _PIN_MANAGER_Initialize:	
  2309                           
  2310                           ;pin_manager.c: 51: LATB = 0x0;
  2311                           
  2312                           ;incstack = 0
  2313                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2314  06D1  0022               	movlb	2	; select bank2
  2315  06D2  018D               	clrf	13	;volatile
  2316                           
  2317                           ;pin_manager.c: 52: WPUE = 0x8;
  2318  06D3  3008               	movlw	8
  2319  06D4  0024               	movlb	4	; select bank4
  2320  06D5  0090               	movwf	16	;volatile
  2321                           
  2322                           ;pin_manager.c: 53: LATA = 0x0;
  2323  06D6  0022               	movlb	2	; select bank2
  2324  06D7  018C               	clrf	12	;volatile
  2325                           
  2326                           ;pin_manager.c: 54: ANSELE = 0x7;
  2327  06D8  3007               	movlw	7
  2328  06D9  0023               	movlb	3	; select bank3
  2329  06DA  0090               	movwf	16	;volatile
  2330                           
  2331                           ;pin_manager.c: 55: LATE = 0x0;
  2332  06DB  0022               	movlb	2	; select bank2
  2333  06DC  0190               	clrf	16	;volatile
  2334                           
  2335                           ;pin_manager.c: 56: LATD = 0x0;
  2336  06DD  018F               	clrf	15	;volatile
  2337                           
  2338                           ;pin_manager.c: 57: LATC = 0x0;
  2339  06DE  018E               	clrf	14	;volatile
  2340                           
  2341                           ;pin_manager.c: 58: ANSELA = 0x3F;
  2342  06DF  303F               	movlw	63
  2343  06E0  0023               	movlb	3	; select bank3
  2344  06E1  008C               	movwf	12	;volatile
  2345                           
  2346                           ;pin_manager.c: 59: ANSELB = 0x30;
  2347  06E2  3030               	movlw	48
  2348  06E3  008D               	movwf	13	;volatile
  2349                           
  2350                           ;pin_manager.c: 60: ANSELD = 0xEF;
  2351  06E4  30EF               	movlw	239
  2352  06E5  008F               	movwf	15	;volatile
  2353                           
  2354                           ;pin_manager.c: 61: WPUB = 0xF0;
  2355  06E6  30F0               	movlw	240
  2356  06E7  0024               	movlb	4	; select bank4
  2357  06E8  008D               	movwf	13	;volatile
  2358                           
  2359                           ;pin_manager.c: 62: TRISD = 0xEF;
  2360  06E9  30EF               	movlw	239
  2361  06EA  0021               	movlb	1	; select bank1
  2362  06EB  008F               	movwf	15	;volatile
  2363                           
  2364                           ;pin_manager.c: 63: TRISE = 0xF;
  2365  06EC  300F               	movlw	15
  2366  06ED  0090               	movwf	16	;volatile
  2367                           
  2368                           ;pin_manager.c: 64: TRISB = 0xFF;
  2369  06EE  30FF               	movlw	255
  2370  06EF  008D               	movwf	13	;volatile
  2371                           
  2372                           ;pin_manager.c: 65: TRISC = 0xBF;
  2373  06F0  30BF               	movlw	191
  2374  06F1  008E               	movwf	14	;volatile
  2375                           
  2376                           ;pin_manager.c: 66: TRISA = 0xFF;
  2377  06F2  30FF               	movlw	255
  2378  06F3  008C               	movwf	12	;volatile
  2379                           
  2380                           ;pin_manager.c: 68: OPTION_REGbits.nWPUEN = 0x1;
  2381  06F4  1795               	bsf	21,7	;volatile
  2382                           
  2383                           ;pin_manager.c: 69: APFCON = 0x00;
  2384  06F5  0022               	movlb	2	; select bank2
  2385  06F6  019D               	clrf	29	;volatile
  2386  06F7  0008               	return
  2387  06F8                     __end_of_PIN_MANAGER_Initialize:	
  2388                           
  2389                           	psect	text15
  2390  063E                     __ptext15:	
  2391 ;; *************** function _OSCILLATOR_Initialize *****************
  2392 ;; Defined at:
  2393 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2407 ;;      Params:         0       0       0       0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0
  2410 ;;      Totals:         0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_SYSTEM_Initialize
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _OSCILLATOR_Initialize
  2422  063E                     _OSCILLATOR_Initialize:	
  2423                           
  2424                           ;mcc.c: 81: OSCCON = 0x38;
  2425                           
  2426                           ;incstack = 0
  2427                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2428  063E  3038               	movlw	56
  2429  063F  0021               	movlb	1	; select bank1
  2430  0640  0099               	movwf	25	;volatile
  2431                           
  2432                           ;mcc.c: 83: OSCSTAT = 0x00;
  2433  0641  019A               	clrf	26	;volatile
  2434                           
  2435                           ;mcc.c: 85: OSCTUNE = 0x00;
  2436  0642  0198               	clrf	24	;volatile
  2437  0643  0008               	return
  2438  0644                     __end_of_OSCILLATOR_Initialize:	
  2439                           
  2440                           	psect	text16
  2441  0664                     __ptext16:	
  2442 ;; *************** function _EUSART_Initialize *****************
  2443 ;; Defined at:
  2444 ;;		line 55 in file "mcc_generated_files/eusart.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2458 ;;      Params:         0       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_SYSTEM_Initialize
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _EUSART_Initialize
  2473  0664                     _EUSART_Initialize:	
  2474                           
  2475                           ;eusart.c: 60: BAUDCON = 0x08;
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2479  0664  3008               	movlw	8
  2480  0665  0023               	movlb	3	; select bank3
  2481  0666  009F               	movwf	31	;volatile
  2482                           
  2483                           ;eusart.c: 63: RCSTA = 0x90;
  2484  0667  3090               	movlw	144
  2485  0668  009D               	movwf	29	;volatile
  2486                           
  2487                           ;eusart.c: 66: TXSTA = 0x24;
  2488  0669  3024               	movlw	36
  2489  066A  009E               	movwf	30	;volatile
  2490                           
  2491                           ;eusart.c: 69: SPBRGL = 0x56;
  2492  066B  3056               	movlw	86
  2493  066C  009B               	movwf	27	;volatile
  2494                           
  2495                           ;eusart.c: 72: SPBRGH = 0x00;
  2496  066D  019C               	clrf	28	;volatile
  2497  066E  0008               	return
  2498  066F                     __end_of_EUSART_Initialize:	
  2499                           
  2500                           	psect	text17
  2501  066F                     __ptext17:	
  2502 ;; *************** function _EUSART_Read *****************
  2503 ;; Defined at:
  2504 ;;		line 77 in file "mcc_generated_files/eusart.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      unsigned char 
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2518 ;;      Params:         0       0       0       0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0
  2521 ;;      Totals:         0       0       0       0       0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;;		_getch
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _EUSART_Read
  2534  066F                     _EUSART_Read:	
  2535                           
  2536                           ;eusart.c: 80: RCSTAbits.SREN = 1;
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _EUSART_Read: [wreg]
  2540  066F  0023               	movlb	3	; select bank3
  2541  0670  169D               	bsf	29,5	;volatile
  2542  0671                     l98:	
  2543                           ;eusart.c: 82: {
  2544                           
  2545                           ;eusart.c: 81: while(!PIR1bits.RCIF)
  2546                           
  2547  0671  0020               	movlb	0	; select bank0
  2548  0672  1E91               	btfss	17,5	;volatile
  2549  0673  2E71               	goto	l98
  2550                           
  2551                           ;eusart.c: 83: }
  2552                           ;eusart.c: 86: if(1 == RCSTAbits.OERR)
  2553  0674  0023               	movlb	3	; select bank3
  2554  0675  1C9D               	btfss	29,1	;volatile
  2555  0676  2E79               	goto	l976
  2556                           
  2557                           ;eusart.c: 87: {
  2558                           ;eusart.c: 90: RCSTAbits.SPEN = 0;
  2559  0677  139D               	bcf	29,7	;volatile
  2560                           
  2561                           ;eusart.c: 91: RCSTAbits.SPEN = 1;
  2562  0678  179D               	bsf	29,7	;volatile
  2563  0679                     l976:	
  2564                           
  2565                           ;eusart.c: 92: }
  2566                           ;eusart.c: 94: return RCREG;
  2567  0679  0819               	movf	25,w	;volatile
  2568  067A  0008               	return
  2569  067B                     __end_of_EUSART_Read:	
  2570  007E                     btemp	set	126	;btemp
  2571  007E                     wtemp	set	126
  2572  007E                     wtemp0	set	126
  2573  0080                     wtemp1	set	128
  2574  0082                     wtemp2	set	130
  2575  0084                     wtemp3	set	132
  2576  0086                     wtemp4	set	134
  2577  0088                     wtemp5	set	136
  2578  007F                     wtemp6	set	127
  2579  007E                     ttemp	set	126
  2580  007E                     ttemp0	set	126
  2581  0081                     ttemp1	set	129
  2582  0084                     ttemp2	set	132
  2583  0087                     ttemp3	set	135
  2584  007F                     ttemp4	set	127
  2585  007E                     ltemp	set	126
  2586  007E                     ltemp0	set	126
  2587  0082                     ltemp1	set	130
  2588  0086                     ltemp2	set	134
  2589  0080                     ltemp3	set	128


Data Sizes:
    Strings     145
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_6(CODE[25]), STR_5(CODE[3]), STR_4(CODE[23]), STR_3(CODE[24]), 
		 -> STR_2(CODE[48]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _leer_eeprom->_i2c_recibe_dato
    _escribe_eeprom->_i2c_envia_dato

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1085
                                             12 COMMON     2     2      0
                                              0 BANK0      6     6      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                     _escribe_eeprom
                        _i2c_iniciar
                        _leer_eeprom
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4     500
                                              2 COMMON    10     6      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leer_eeprom                                          4     2      2     165
                                              2 COMMON     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (2) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _i2c_recibe_dato                                      2     2      0      23
                                              0 COMMON     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escribe_eeprom                                       3     0      3     194
                                              1 COMMON     3     0      3
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _i2c_envia_dato                                       1     1      0      22
                                              0 COMMON     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_espera                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _escribe_eeprom
     _i2c_detener
       _i2c_espera
     _i2c_envia_dato
       _i2c_espera
     _i2c_inicia_com
       _i2c_espera
   _i2c_iniciar
   _leer_eeprom
     _i2c_detener
       _i2c_espera
     _i2c_envia_dato
       _i2c_espera
     _i2c_inicia_com
       _i2c_espera
     _i2c_recibe_dato
       _i2c_espera
     _i2c_reinicia_com
       _i2c_espera
   _printf
     _putch
       _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Aug 31 23:34:06 2016

        __size_of_escribe_eeprom 0016                      __CFG_CP$OFF 0000                               l65 079A  
                             l98 0671                              l105 0654                              l190 073E  
                            l848 064B                              l960 0719                              l970 06FC  
                            l964 0724                              l958 0717                              l982 0745  
                            l976 0679                              l968 0729                              l998 076B  
                            u325 07C5                              u345 07F3                     __CFG_CPD$OFF 0000  
                            u275 0769                              u357 074C                              u367 07AA  
                            u295 0798                     __CFG_BORV$LO 0000                     __CFG_IESO$ON 0000  
                   __CFG_FOSC$HS 0000                     ?_EUSART_Read 0070                     __CFG_LVP$OFF 0000  
              ?_i2c_reinicia_com 0070                             l1010 07A3                             l1006 078A  
                           l1024 07C7                             l1036 07F5                     ?_leer_eeprom 0072  
                           STR_1 0878                             STR_2 0800                             STR_3 0849  
                           STR_4 0861                             STR_5 088E                             STR_6 0830  
                           _LATA 010C                             _LATB 010D                             _LATC 010E  
                           _LATD 010F                             _LATE 0110               ??_i2c_reinicia_com 0070  
                           _WPUB 020D                             _WPUE 0210                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                    ??_i2c_detener 0070                             _main 073F  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             ltemp 007E  
                  ??_i2c_iniciar 0070                             start 0002                             ttemp 007E  
                           wtemp 007E                    __CFG_MCLRE$ON 0000                   _i2c_envia_dato 0644  
                  ?_EUSART_Write 0070   __size_of_OSCILLATOR_Initialize 0006                   _i2c_inicia_com 062F  
  __end_of_OSCILLATOR_Initialize 0644                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                          _RCREG 0199                            _RCSTA 019D                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                            _TRISD 008F  
                          _TRISE 0090                            _TXREG 019A                            _TXSTA 019E  
                          _putch 0639                            main@i 0022                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F               escribe_eeprom@dato 0073                       _i2c_espera 064B  
                __initialization 07FD              __end_of_i2c_detener 062F           __end_of_i2c_envia_dato 064B  
                   __end_of_main 07FD           __end_of_i2c_inicia_com 0634              __end_of_i2c_iniciar 0687  
                 ??_EUSART_Write 0070                           ??_main 007C               i2c_envia_dato@dato 0070  
                 __CFG_PLLEN$OFF 0000                           _APFCON 011D                           _ANSELA 018C  
                         ?_putch 0070                           _ANSELB 018D                           _ANSELD 018F  
                         _ANSELE 0190                           _OSCCON 0099                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSPADD 0212                           _SSPCON 0215  
                         _SSPBUF 0211                   __CFG_PWRTE$OFF 0000                   _escribe_eeprom 069B  
                ?_i2c_envia_dato 0070                   __CFG_STVREN$ON 0000                  ?_i2c_inicia_com 0070  
                         _printf 06F8                           main@Rx 0020                  _i2c_recibe_dato 0687  
           __size_of_EUSART_Read 000C                _SYSTEM_Initialize 065B          __end_of__initialization 07FD  
           __size_of_leer_eeprom 0020                      _i2c_detener 062A               ?_SYSTEM_Initialize 0070  
                    _i2c_iniciar 067B           __end_of_escribe_eeprom 06B1                      ?_i2c_espera 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070                    __end_of_putch 063E  
                 _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 0664                          ??_putch 0071  
           __end_of_EUSART_Write 065B                  __CFG_VCAPEN$OFF 0000                  ?_escribe_eeprom 0071  
                     __pmaintext 073F        __size_of_i2c_reinicia_com 0005          __end_of_i2c_recibe_dato 069B  
                        _BAUDCON 019F                          _ACKSTAT 10B6                          ?_printf 0072  
                        _OSCSTAT 009A                          _OSCTUNE 0098              __size_of_i2c_espera 0008  
                        _SSPCON2 0216                          _SSPSTAT 0214                          __ptext1 06F8  
                        __ptext2 0639                          __ptext3 0653                          __ptext4 06B1  
                        __ptext5 0634                          __ptext6 0687                          __ptext7 067B  
                        __ptext8 069B                          __ptext9 062F                  __size_of_printf 0047  
          _OSCILLATOR_Initialize 063E         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0009  
           end_of_initialization 07FD                 ??_i2c_envia_dato 0070                _EUSART_Initialize 0664  
               ??_i2c_inicia_com 0070               ?_EUSART_Initialize 0070                        _RCSTAbits 019D  
                        printf@c 007B                          printf@f 0072                 ?_i2c_recibe_dato 0070  
                   __pstringtext 0800              ??_EUSART_Initialize 0070                        _PORTBbits 000D  
                      _TRISCbits 008E            __size_of_EUSART_Write 0008        __end_of_EUSART_Initialize 066F  
                   ?_i2c_detener 0070                     ?_i2c_iniciar 0070                     ??_i2c_espera 0070  
               _i2c_reinicia_com 0634                     _EUSART_Write 0653           ?_OSCILLATOR_Initialize 0070  
                 __end_of_printf 073F              start_initialization 07FD  __size_of_PIN_MANAGER_Initialize 0027  
                  ??_EUSART_Read 0070               __end_of_i2c_espera 0653                    ??_leer_eeprom 0074  
                    putch@txData 0071                 ??_escribe_eeprom 0074                         ??_printf 0076  
                      ___latbits 0002                    __pcstackBANK0 0020       __size_of_EUSART_Initialize 000B  
            __end_of_EUSART_Read 067B              __end_of_leer_eeprom 06D1           _PIN_MANAGER_Initialize 06D1  
                 __size_of_putch 0005                         _LATDbits 010F             __size_of_i2c_detener 0005  
                       _PIR1bits 0011             __size_of_i2c_iniciar 000C                        main@i_195 0024  
                     printf@flag 0079         __end_of_i2c_reinicia_com 0639                      _EUSART_Read 066F  
                    _leer_eeprom 06B1          ??_OSCILLATOR_Initialize 0070         __size_of_i2c_recibe_dato 0014  
                       __ptext10 0644                         __ptext11 062A                         __ptext12 064B  
                       __ptext13 065B                         __ptext14 06D1                         __ptext15 063E  
                       __ptext16 0664                         __ptext17 066F                    __size_of_main 00BE  
                       main@dato 0021          __size_of_i2c_envia_dato 0007          __size_of_i2c_inicia_com 0005  
       i2c_recibe_dato@datoleido 0071          escribe_eeprom@direccion 0071          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                         printf@ap 007A                  leer_eeprom@dato 0075  
                    _SSPCON2bits 0216               EUSART_Write@txData 0070                ??_i2c_recibe_dato 0070  
 __end_of_PIN_MANAGER_Initialize 06F8             leer_eeprom@direccion 0072  
